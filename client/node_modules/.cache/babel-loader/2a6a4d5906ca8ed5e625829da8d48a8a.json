{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\ControlBox.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"./Textbox\";\nimport { RadioGroup } from \"./RadioGroup\";\nimport { Button } from \"./Button\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ControlBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapMode: \"journey\",\n      // \"journey\" || \"cognate\"\n      searchBoxValue: \"\",\n      searchLanguage: \"English\",\n      includeAffixes: false\n    };\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.onButtonClick = this.onButtonClick.bind(this);\n    this.onRadioButtonClick = this.onRadioButtonClick.bind(this);\n  }\n\n  onFieldChange(event) {\n    const target = event.target;\n    const name = target.name;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onButtonClick() {\n    let word = this.state.searchBoxValue;\n    let language = this.state.searchLanguage;\n\n    if (word !== \"\" && language !== \"\") {\n      if (this.state.mapMode === \"journey\") {\n        let getString = `https://api.etymologyexplorer.com/dev/get_trees?common_descendant_count=0&language=${language}&word=${word}`;\n        let edWords, edConnections, edAffixes;\n        axios.get(getString).then(response => {\n          console.log(response);\n          edWords = response.data[1].words;\n          edConnections = response.data[2];\n          edAffixes = this.state.includeAffixes ? null : response.data[1].affixes; // Only pass if user doesn't want affixes (to check against it)\n\n          this.props.addJourney(edWords, edConnections, edAffixes);\n        }).catch(error => {\n          if (error.response.data['Error message'].indexOf(\"Could not get an ids\") !== -1) {\n            alert(\"Database error: word not found.\");\n          }\n        });\n      } else if (this.state.mapMode === \"cognate\") {// TODO\n      }\n    }\n  }\n\n  onRadioButtonClick(e, data) {\n    // Update parent LeftBar component's state\n    let mode = data.id === 0 ? \"journey\" : \"cognate\";\n    this.setState({\n      mapMode: mode\n    });\n  }\n\n  render() {\n    const buttons = [{\n      active: this.state.mapMode === \"journey\",\n      label: \"Historical journey\"\n    }, {\n      active: this.state.mapMode === \"cognate\",\n      label: \"Cognates\"\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-fields\",\n        children: [/*#__PURE__*/_jsxDEV(Textbox, {\n          hint: \"Enter a word...\",\n          name: \"searchBoxValue\",\n          value: this.state.searchBoxValue,\n          onFieldChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"searchLanguage\",\n          value: this.state.searchLanguage,\n          onChange: this.onFieldChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Ancient Greek\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"French\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"German\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Latin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Portuguese\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Spanish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"includeAffixes\",\n          checked: this.state.includeAffixes,\n          onChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this), \"Include affixes \", /*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Some words include affixes (e.g. -y) that have a considerable amount of etymological ancestors, potentially cluttering your map. \\n\" + \"You may tick this checkbox to include them in the return data.\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-selection\",\n        children: [/*#__PURE__*/_jsxDEV(RadioGroup, {\n          buttons: buttons,\n          name: \"map-mode\",\n          onRadioButtonClick: this.onRadioButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 6\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          title: \"Historical journey mode: A new Journey collection will be created and auto-populated with nodes according to the chronological journey of that word through time (usually starting in PIE).\\n\" + \"Cognate mode: A new Cognate collection will be created and automatically populated with translations of the searched words, with all translations that are cognates filled with the same colour.\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"Search\",\n        id: \"search\",\n        onClick: this.onButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/ControlBox.jsx"],"names":["Component","Textbox","RadioGroup","Button","axios","ControlBox","constructor","props","state","mapMode","searchBoxValue","searchLanguage","includeAffixes","onFieldChange","bind","onButtonClick","onRadioButtonClick","event","target","name","value","type","checked","setState","word","language","getString","edWords","edConnections","edAffixes","get","then","response","console","log","data","words","affixes","addJourney","catch","error","indexOf","alert","e","mode","id","render","buttons","active","label"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"./Textbox\";\r\nimport {RadioGroup} from \"./RadioGroup\";\r\nimport {Button} from \"./Button\";\r\nimport axios from \"axios\";\r\n\r\nexport class ControlBox extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmapMode: \"journey\", // \"journey\" || \"cognate\"\r\n\t\t\tsearchBoxValue: \"\",\r\n\t\t\tsearchLanguage: \"English\",\r\n\t\t\tincludeAffixes: false\r\n\t\t};\r\n\r\n\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t\tthis.onButtonClick = this.onButtonClick.bind(this);\r\n\t\tthis.onRadioButtonClick = this.onRadioButtonClick.bind(this);\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tlet value = (target.type === \"checkbox\") ? target.checked : target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\tonButtonClick()\r\n\t{\r\n\t\tlet word = this.state.searchBoxValue;\r\n\t\tlet language =  this.state.searchLanguage;\r\n\t\tif(word !== \"\" && language !== \"\")\r\n\t\t{\r\n\t\t\tif(this.state.mapMode === \"journey\")\r\n\t\t\t{\r\n\t\t\t\tlet getString = `https://api.etymologyexplorer.com/dev/get_trees?common_descendant_count=0&language=${language}&word=${word}`;\r\n\t\t\t\tlet edWords, edConnections, edAffixes;\r\n\r\n\t\t\t\taxios.get(getString)\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t\tedWords = response.data[1].words;\r\n\t\t\t\t\t\tedConnections = response.data[2];\r\n\t\t\t\t\t\tedAffixes = (this.state.includeAffixes) ? null : response.data[1].affixes; // Only pass if user doesn't want affixes (to check against it)\r\n\r\n\t\t\t\t\t\tthis.props.addJourney(edWords, edConnections, edAffixes);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tif(error.response.data['Error message'].indexOf(\"Could not get an ids\") !== -1)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\talert(\"Database error: word not found.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse if(this.state.mapMode === \"cognate\")\r\n\t\t\t{\r\n\t\t\t\t// TODO\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tonRadioButtonClick(e, data)\r\n\t{\r\n\t\t// Update parent LeftBar component's state\r\n\t\tlet mode = (data.id === 0) ? \"journey\" : \"cognate\";\r\n\t\tthis.setState({mapMode: mode});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst buttons = [{active: (this.state.mapMode === \"journey\"), label: \"Historical journey\"}, {active: (this.state.mapMode === \"cognate\"), label: \"Cognates\"}];\r\n\r\n\t\treturn(\r\n\t\t\t<div className={\"search-container\"}>\r\n\t\t\t\t<div className={\"search-fields\"}>\r\n\t\t\t\t\t<Textbox hint={\"Enter a word...\"} name={\"searchBoxValue\"} value={this.state.searchBoxValue} onFieldChange={this.onFieldChange} /> {/* TODO: This should autocomplete based on the ED's supported languages */}\r\n\t\t\t\t\t<select name=\"searchLanguage\" value={this.state.searchLanguage} onChange={this.onFieldChange}>\r\n\t\t\t\t\t\t<option>Ancient Greek</option>\r\n\t\t\t\t\t\t<option>English</option>\r\n\t\t\t\t\t\t<option>French</option>\r\n\t\t\t\t\t\t<option>German</option>\r\n\t\t\t\t\t\t<option>Latin</option>\r\n\t\t\t\t\t\t<option>Portuguese</option>\r\n\t\t\t\t\t\t<option>Spanish</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<input type={\"checkbox\"} name={\"includeAffixes\"} checked={this.state.includeAffixes} onChange={this.onFieldChange} />\r\n\t\t\t\t\tInclude affixes <span title={\"Some words include affixes (e.g. -y) that have a considerable amount of etymological ancestors, potentially cluttering your map. \\n\" +\r\n\t\t\t\t\t\"You may tick this checkbox to include them in the return data.\"}>?</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"mode-selection\"}>\r\n\t\t\t\t\t<RadioGroup buttons={buttons} name={\"map-mode\"} onRadioButtonClick={this.onRadioButtonClick} /> <span title={\"Historical journey mode: A new Journey collection will be created and auto-populated with nodes according to the chronological journey of that word through time (usually starting in PIE).\\n\" +\r\n\t\t\t\t\t\"Cognate mode: A new Cognate collection will be created and automatically populated with translations of the searched words, with all translations that are cognates filled with the same colour.\"}>?</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Button value={\"Search\"} id={\"search\"} onClick={this.onButtonClick} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}