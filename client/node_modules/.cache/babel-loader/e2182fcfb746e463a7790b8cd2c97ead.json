{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { useD3 } from \"../hooks/useD3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Map(_ref) {\n  _s();\n\n  let {} = _ref;\n  const ref = useD3(svg => {\n    /*\r\n    \tconst height = 500;\r\n    \tconst width = 500;\r\n    \tconst margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n    \t\t\tconst x = d3\r\n    \t\t.scaleBand()\r\n    \t\t.domain(data.map((d) => d.year))\r\n    \t\t.rangeRound([margin.left, width - margin.right])\r\n    \t\t.padding(0.1);\r\n    \t\t\tconst y1 = d3\r\n    \t\t.scaleLinear()\r\n    \t\t.domain([0, d3.max(data, (d) => d.sales)])\r\n    \t\t.rangeRound([height - margin.bottom, margin.top]);\r\n    \t\t\tconst xAxis = (g) =>\r\n    \t\tg.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\r\n    \t\t\td3\r\n    \t\t\t\t.axisBottom(x)\r\n    \t\t\t\t.tickValues(\r\n    \t\t\t\t\td3\r\n    \t\t\t\t\t\t.ticks(...d3.extent(x.domain()), width / 40)\r\n    \t\t\t\t\t\t.filter((v) => x(v) !== undefined)\r\n    \t\t\t\t)\r\n    \t\t\t\t.tickSizeOuter(0)\r\n    \t\t);\r\n    \t\t\tconst y1Axis = (g) =>\r\n    \t\tg\r\n    \t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n    \t\t\t.style(\"color\", \"steelblue\")\r\n    \t\t\t.call(d3.axisLeft(y1).ticks(null, \"s\"))\r\n    \t\t\t.call((g) => g.select(\".domain\").remove())\r\n    \t\t\t.call((g) =>\r\n    \t\t\t\tg\r\n    \t\t\t\t\t.append(\"text\")\r\n    \t\t\t\t\t.attr(\"x\", -margin.left)\r\n    \t\t\t\t\t.attr(\"y\", 10)\r\n    \t\t\t\t\t.attr(\"fill\", \"currentColor\")\r\n    \t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n    \t\t\t\t\t.text(data.y1)\r\n    \t\t\t);\r\n    \t\t\tsvg.select(\".x-axis\").call(xAxis);\r\n    \tsvg.select(\".y-axis\").call(y1Axis);\r\n    \t\t\tsvg\r\n    \t\t.select(\".plot-area\")\r\n    \t\t.attr(\"fill\", \"steelblue\")\r\n    \t\t.selectAll(\".bar\")\r\n    \t\t.data(data)\r\n    \t\t.join(\"rect\")\r\n    \t\t.attr(\"class\", \"bar\")\r\n    \t\t.attr(\"x\", (d) => x(d.year))\r\n    \t\t.attr(\"width\", x.bandwidth())\r\n    \t\t.attr(\"y\", (d) => y1(d.sales))\r\n    \t\t.attr(\"height\", (d) => y1(0) - y1(d.sales));\r\n    \t\t*/\n  }, [\n    /*data.length*/\n  ]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"plot-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Map, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Map.jsx"],"names":["React","d3","useD3","Map","ref","svg","height","width","margin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAAQC,KAAR,QAAoB,gBAApB;;AAEA,OAAO,SAASC,GAAT,OACP;AAAA;;AAAA,MADoB,EACpB;AACC,QAAMC,GAAG,GAAGF,KAAK,CACfG,GAAD,IAAS;AAIR;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQG,GAjEe,EAkEhB;AAAC;AAAD,GAlEgB,CAAjB;AAqEA,sBACC;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA,2BACC;AACC,MAAA,GAAG,EAAED,GADN;AAEC,MAAA,KAAK,EAAE;AACNE,QAAAA,MAAM,EAAE,MADF;AAENC,QAAAA,KAAK,EAAE,MAFD;AAGNC,QAAAA,MAAM,EAAE;AAHF,OAFR;AAAA,8BAOC;AAAG,QAAA,SAAS,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAPD,eAQC;AAAG,QAAA,SAAS,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cARD,eASC;AAAG,QAAA,SAAS,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAeA;;GAtFeL,G;UAEHD,K;;;KAFGC,G","sourcesContent":["import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport {useD3} from \"../hooks/useD3\";\r\n\r\nexport function Map({/*data*/})\r\n{\r\n\tconst ref = useD3(\r\n\t\t(svg) => {\r\n\r\n\r\n\r\n\t\t\t/*\r\n\t\t\t\tconst height = 500;\r\n\t\t\t\tconst width = 500;\r\n\t\t\t\tconst margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n\r\n\t\t\t\tconst x = d3\r\n\t\t\t\t\t.scaleBand()\r\n\t\t\t\t\t.domain(data.map((d) => d.year))\r\n\t\t\t\t\t.rangeRound([margin.left, width - margin.right])\r\n\t\t\t\t\t.padding(0.1);\r\n\r\n\t\t\t\tconst y1 = d3\r\n\t\t\t\t\t.scaleLinear()\r\n\t\t\t\t\t.domain([0, d3.max(data, (d) => d.sales)])\r\n\t\t\t\t\t.rangeRound([height - margin.bottom, margin.top]);\r\n\r\n\t\t\t\tconst xAxis = (g) =>\r\n\t\t\t\t\tg.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\r\n\t\t\t\t\t\td3\r\n\t\t\t\t\t\t\t.axisBottom(x)\r\n\t\t\t\t\t\t\t.tickValues(\r\n\t\t\t\t\t\t\t\td3\r\n\t\t\t\t\t\t\t\t\t.ticks(...d3.extent(x.domain()), width / 40)\r\n\t\t\t\t\t\t\t\t\t.filter((v) => x(v) !== undefined)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t.tickSizeOuter(0)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\tconst y1Axis = (g) =>\r\n\t\t\t\t\tg\r\n\t\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t\t\t\t.style(\"color\", \"steelblue\")\r\n\t\t\t\t\t\t.call(d3.axisLeft(y1).ticks(null, \"s\"))\r\n\t\t\t\t\t\t.call((g) => g.select(\".domain\").remove())\r\n\t\t\t\t\t\t.call((g) =>\r\n\t\t\t\t\t\t\tg\r\n\t\t\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t\t\t.attr(\"x\", -margin.left)\r\n\t\t\t\t\t\t\t\t.attr(\"y\", 10)\r\n\t\t\t\t\t\t\t\t.attr(\"fill\", \"currentColor\")\r\n\t\t\t\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t\t\t\t.text(data.y1)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\tsvg.select(\".x-axis\").call(xAxis);\r\n\t\t\t\tsvg.select(\".y-axis\").call(y1Axis);\r\n\r\n\t\t\t\tsvg\r\n\t\t\t\t\t.select(\".plot-area\")\r\n\t\t\t\t\t.attr(\"fill\", \"steelblue\")\r\n\t\t\t\t\t.selectAll(\".bar\")\r\n\t\t\t\t\t.data(data)\r\n\t\t\t\t\t.join(\"rect\")\r\n\t\t\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t\t\t.attr(\"x\", (d) => x(d.year))\r\n\t\t\t\t\t.attr(\"width\", x.bandwidth())\r\n\t\t\t\t\t.attr(\"y\", (d) => y1(d.sales))\r\n\t\t\t\t\t.attr(\"height\", (d) => y1(0) - y1(d.sales));\r\n\r\n\t\t\t*/\r\n\t\t},\r\n\t\t[/*data.length*/]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={\"map-container\"}>\r\n\t\t\t<svg\r\n\t\t\t\tref={ref}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tmargin: 0\r\n\t\t\t\t}}>\r\n\t\t\t\t<g className={\"plot-area\"} />\r\n\t\t\t\t<g className={\"x-axis\"} />\r\n\t\t\t\t<g className={\"y-axis\"} />\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}