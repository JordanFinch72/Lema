{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\client\\\\src\\\\components\\\\modals\\\\ViewMapsModal.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"../controls/Textbox\";\nimport { Button } from \"../controls/Button\";\nimport { LabeledControl } from \"../controls/LabeledControl\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MapItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: this.props.map.activeMap.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          value: \"LOAD\",\n          onClick: e => {\n            const userConfirmed = window.confirm(\"This will overwrite your current map.\\nYou should save your map before you load another one.\\n\\nWould you like to continue?\");\n            if (userConfirmed) this.props.loadMap(e, this.props.map);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"X\",\n          onClick: e => {\n            const userConfirmed = window.confirm(\"This will permanently delete this map from the database (and the showcase)!\\n\\nWould you like to continue?\");\n            if (userConfirmed) this.props.deleteMap(e, this.props.map.activeMap.mapID);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport class ViewMapsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedMaps: [],\n      loadedFileName: null,\n      loading: true\n    };\n    this.onFieldChange = this.onFieldChange.bind(this);\n  }\n\n  componentDidMount() {\n    // Fetch maps belonging to this user\n    const username = this.props.activeUser.username;\n    axios.get(`maps/${username}/0`).then(response => {\n      console.log(response);\n\n      if (response.data.type === \"error\") {\n        console.error(response.data.message);\n        alert(response.data.message);\n      } else if (response.data.type === \"success\") {\n        console.log(response.data);\n\n        if (response.data.message === \"User's maps retrieved.\") {\n          this.setState({\n            loadedMaps: response.data.maps,\n            loading: false\n          });\n        }\n      }\n    });\n  }\n\n  onFieldChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n  /**\r\n   * Validates file upload.\r\n   * @returns {boolean}\r\n   */\n\n\n  validate() {\n    /*let errorCollector = \"\";\r\n    \t\t if(errorCollector !== \"\")\r\n     {\r\n     alert(errorCollector);\r\n     return false;\r\n     }\r\n     else return true;*/\n  }\n\n  render() {\n    let mapItems = [];\n    this.state.loadedMaps.forEach(m => mapItems.push( /*#__PURE__*/_jsxDEV(MapItem, {\n      map: m,\n      loadMap: this.props.loadMap,\n      deleteMap: this.props.deleteMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 54\n    }, this)));\n    if (this.state.loading) mapItems = \"Loading...\";else if (mapItems.length === 0) mapItems = \"No maps here! Try saving one to your profile! Alternatively, feel free to load one in from a file.\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left load\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"View / Import Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: mapItems\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Load From File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"mapJSON\",\n                  name: \"mapJSON\",\n                  accept: \"application/json\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  value: \"Import...\",\n                  onClick: e => {\n                    const files = document.getElementById(\"mapJSON\").files;\n                    const fileReader = new FileReader();\n\n                    fileReader.onload = () => {\n                      alert(fileReader.result);\n                    };\n\n                    console.log(fileReader.readAsText());\n                    /*if(this.validate())\r\n                     {\r\n                     this.props.handler(e, this.state);\r\n                     }*/\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/client/src/components/modals/ViewMapsModal.jsx"],"names":["Component","Textbox","Button","LabeledControl","axios","MapItem","constructor","props","render","map","activeMap","title","e","userConfirmed","window","confirm","loadMap","deleteMap","mapID","ViewMapsModal","state","loadedMaps","loadedFileName","loading","onFieldChange","bind","componentDidMount","username","activeUser","get","then","response","console","log","data","type","error","message","alert","setState","maps","event","target","name","value","checked","validate","mapItems","forEach","m","push","length","files","document","getElementById","fileReader","FileReader","onload","result","readAsText"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"../controls/Textbox\";\r\nimport {Button} from \"../controls/Button\";\r\nimport {LabeledControl} from \"../controls/LabeledControl\";\r\nimport axios from \"axios\";\r\n\r\nclass MapItem extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className={\"map-item\"}>\r\n\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t<div className={\"title\"}>{this.props.map.activeMap.title}</div>\r\n\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t<Button value={\"LOAD\"} onClick={(e) => {\r\n\t\t\t\t\t\tconst userConfirmed = window.confirm(\"This will overwrite your current map.\\nYou should save your map before you load another one.\\n\\nWould you like to continue?\");\r\n\r\n\t\t\t\t\t\tif(userConfirmed)\r\n\t\t\t\t\t\t\tthis.props.loadMap(e, this.props.map);\r\n\t\t\t\t\t}} />\r\n\t\t\t\t\t<Button value={\"X\"} onClick={(e) => {\r\n\t\t\t\t\t\tconst userConfirmed = window.confirm(\"This will permanently delete this map from the database (and the showcase)!\\n\\nWould you like to continue?\");\r\n\r\n\t\t\t\t\t\tif(userConfirmed)\r\n\t\t\t\t\t\t\tthis.props.deleteMap(e, this.props.map.activeMap.mapID);\r\n\t\t\t\t\t}} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class ViewMapsModal extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tloadedMaps: [],\r\n\t\t\tloadedFileName: null,\r\n\t\t\tloading: true\r\n\t\t};\r\n\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\t// Fetch maps belonging to this user\r\n\t\tconst username = this.props.activeUser.username;\r\n\t\taxios.get(`maps/${username}/0`).then((response) =>\r\n\t\t{\r\n\t\t\tconsole.log(response);\r\n\t\t\tif(response.data.type === \"error\")\r\n\t\t\t{\r\n\t\t\t\tconsole.error(response.data.message);\r\n\t\t\t\talert(response.data.message);\r\n\t\t\t}\r\n\t\t\telse if(response.data.type === \"success\")\r\n\t\t\t{\r\n\t\t\t\tconsole.log(response.data);\r\n\t\t\t\tif(response.data.message === \"User's maps retrieved.\")\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.setState({loadedMaps: response.data.maps, loading: false})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = (target.type === \"checkbox\") ? target.checked : target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Validates file upload.\r\n\t * @returns {boolean}\r\n\t */\r\n\tvalidate()\r\n\t{\r\n\t\t/*let errorCollector = \"\";\r\n\r\n\t\t if(errorCollector !== \"\")\r\n\t\t {\r\n\t\t alert(errorCollector);\r\n\t\t return false;\r\n\t\t }\r\n\t\t else return true;*/\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tlet mapItems = [];\r\n\t\tthis.state.loadedMaps.forEach((m) => mapItems.push(<MapItem map={m} loadMap={this.props.loadMap} deleteMap={this.props.deleteMap} />));\r\n\t\tif(this.state.loading)\r\n\t\t\tmapItems = \"Loading...\";\r\n\t\telse if(mapItems.length === 0)\r\n\t\t\tmapItems = \"No maps here! Try saving one to your profile! Alternatively, feel free to load one in from a file.\";\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"modal\"}>\r\n\t\t\t\t<div className={\"top\"}>\r\n\t\t\t\t\t<div className={\"left load\"}>\r\n\t\t\t\t\t\t<h2>View / Import Map</h2>\r\n\t\t\t\t\t\t<div className={\"map-data\"}>\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t{mapItems}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Load From File</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<input type={\"file\"} id={\"mapJSON\"} name={\"mapJSON\"} accept={\"application/json\"} />\r\n\t\t\t\t\t\t\t\t\t<Button value={\"Import...\"} onClick={(e) =>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tconst files = document.getElementById(\"mapJSON\").files;\r\n\t\t\t\t\t\t\t\t\t\tconst fileReader = new FileReader();\r\n\t\t\t\t\t\t\t\t\t\tfileReader.onload = () => {\r\n\t\t\t\t\t\t\t\t\t\t\talert(fileReader.result);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(fileReader.readAsText())\r\n\r\n\t\t\t\t\t\t\t\t\t\t/*if(this.validate())\r\n\t\t\t\t\t\t\t\t\t\t {\r\n\t\t\t\t\t\t\t\t\t\t this.props.handler(e, this.state);\r\n\t\t\t\t\t\t\t\t\t\t }*/\r\n\t\t\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"bottom\"}>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}