{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\client\\\\src\\\\components\\\\Banner.jsx\";\nimport { Component } from \"react\";\nimport { LoginRegisterModal } from \"./modals/LoginRegisterModal\";\nimport { SaveModal } from \"./modals/SaveModal\";\nimport { ViewMapsModal } from \"./modals/ViewMapsModal\";\nimport { ProfileSettingsModal } from \"./modals/ProfileSettingsModal\";\nimport { GenericModal } from \"./modals/GenericModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Banner extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const showcaseText = this.props.isShowcaseMode ? \"Hide Community Showcase\" : \"Show Community Showcase\";\n\n    const showcase = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showcase-button\",\n      onClick: e => {\n        this.props.toggleShowcaseMode(e);\n      },\n      children: showcaseText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n\n    let buttons = [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-map-button\",\n      onClick: e => {\n        const userConfirmed = window.confirm(\"This will wipe your currently active map so that you can start from scratch.\\n\" + \"You should save/export your map first if you wish to save your progress.\\n\\nDo you wish to continue?\");\n        if (userConfirmed) this.props.newMap(e);\n      },\n      children: \"New Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-button\",\n      onClick: e => {\n        this.props.openModal(e, /*#__PURE__*/_jsxDEV(LoginRegisterModal, {\n          mode: \"login\",\n          handler: this.props.authenticateUser,\n          createToast: this.props.createToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this));\n      },\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-button\",\n      onClick: e => {\n        this.props.openModal(e, /*#__PURE__*/_jsxDEV(LoginRegisterModal, {\n          mode: \"register\",\n          handler: this.props.registerUser,\n          openModal: this.props.openModal,\n          createToast: this.props.createToast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this));\n      },\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)];\n\n    if (this.props.activeUser) {\n      buttons = [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-map-button\",\n        onClick: e => {\n          const userConfirmed = window.confirm(\"This will wipe your currently active map so that you can start from scratch.\\n\" + \"You should save/export your map first if you wish to save your progress.\\n\\nDo you wish to continue?\");\n          if (userConfirmed) this.props.newMap(e);\n        },\n        children: \"New Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save-button\",\n        onClick: e => {\n          this.props.openModal(e, /*#__PURE__*/_jsxDEV(SaveModal, {\n            handler: this.props.saveMap,\n            activeMap: this.props.activeMap,\n            createToast: this.props.createToast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 30\n          }, this));\n        },\n        children: \"Save Map / Export\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-maps-button\",\n        onClick: e => {\n          this.props.openModal(e, /*#__PURE__*/_jsxDEV(ViewMapsModal, {\n            loadMap: this.props.loadMap,\n            deleteMap: this.props.deleteMap,\n            activeUser: this.props.activeUser,\n            openModal: this.props.openModal,\n            handleResponse: this.props.handleResponse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 30\n          }, this));\n        },\n        children: \"View Maps / Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-button\",\n        onClick: e => {\n          if (this.props.activeMap) {\n            if (this.props.activeMap.mapID) {\n              const domain = \"http://localhost:3000/\"; // Major TODO: Update this when hosted\n\n              const link = `${domain}/map/${this.props.activeUser.username}/${this.props.activeMap.mapID}`;\n\n              const linkModal = /*#__PURE__*/_jsxDEV(GenericModal, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Here is the link to your map: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: link,\n                    children: link\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 66\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 72\n                  }, this), \"This will not share your map to the showcase, but anybody with the link can access it.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 97\n                  }, this), \"Whenever you save your map, your changes will be shown via this same link.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 9\n              }, this);\n\n              this.props.openModal(null, linkModal, true);\n            } else {\n              this.props.createToast(e, \"Map must be saved to profile before it can be shared.\", 7000, \"error\");\n            }\n          } else {\n            this.props.createToast(e, \"No active map. Create/load a map and save it to your profile before sharing.\", 7000, \"error\");\n          }\n        },\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-button\",\n        onClick: e => {\n          this.props.openModal(e, /*#__PURE__*/_jsxDEV(ProfileSettingsModal, {\n            editProfile: this.props.editProfile,\n            deleteProfile: this.props.deleteProfile,\n            activeUser: this.props.activeUser,\n            createToast: this.props.createToast\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 30\n          }, this));\n        },\n        children: \"Profile Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logout-button\",\n        onClick: this.props.logoutUser,\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)];\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LEMA: Linguistic Etymology Map Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: showcase\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/client/src/components/Banner.jsx"],"names":["Component","LoginRegisterModal","SaveModal","ViewMapsModal","ProfileSettingsModal","GenericModal","Banner","constructor","props","render","showcaseText","isShowcaseMode","showcase","e","toggleShowcaseMode","buttons","userConfirmed","window","confirm","newMap","openModal","authenticateUser","createToast","registerUser","activeUser","saveMap","activeMap","loadMap","deleteMap","handleResponse","mapID","domain","link","username","linkModal","editProfile","deleteProfile","logoutUser"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {LoginRegisterModal} from \"./modals/LoginRegisterModal\";\r\nimport {SaveModal} from \"./modals/SaveModal\";\r\nimport {ViewMapsModal} from \"./modals/ViewMapsModal\";\r\nimport {ProfileSettingsModal} from \"./modals/ProfileSettingsModal\";\r\nimport {GenericModal} from \"./modals/GenericModal\";\r\n\r\nexport class Banner extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst showcaseText = (this.props.isShowcaseMode) ? \"Hide Community Showcase\" : \"Show Community Showcase\";\r\n\t\tconst showcase =\r\n\t\t\t<div className={\"showcase-button\"} onClick={(e) => {\r\n\t\t\t\tthis.props.toggleShowcaseMode(e);\r\n\t\t\t}}>\r\n\t\t\t\t{showcaseText}\r\n\t\t\t</div>;\r\n\r\n\t\tlet buttons = [\r\n\t\t\t<div className={\"new-map-button\"} onClick={(e) => {\r\n\t\t\t\tconst userConfirmed = window.confirm(\"This will wipe your currently active map so that you can start from scratch.\\n\" +\r\n\t\t\t\t\t\"You should save/export your map first if you wish to save your progress.\\n\\nDo you wish to continue?\");\r\n\t\t\t\tif(userConfirmed) this.props.newMap(e);\r\n\t\t\t}}>\r\n\t\t\t\tNew Map\r\n\t\t\t</div>,\r\n\t\t\t<div className={\"login-button\"} onClick={(e) => {\r\n\t\t\t\tthis.props.openModal(e, <LoginRegisterModal mode={\"login\"} handler={this.props.authenticateUser} createToast={this.props.createToast} />);\r\n\t\t\t}}>\r\n\t\t\t\tLog In\r\n\t\t\t</div>,\r\n\t\t\t<div className={\"register-button\"} onClick={(e) => {\r\n\t\t\t\tthis.props.openModal(e, <LoginRegisterModal mode={\"register\"} handler={this.props.registerUser} openModal={this.props.openModal} createToast={this.props.createToast} />);\r\n\t\t\t}}>\r\n\t\t\t\tRegister\r\n\t\t\t</div>\r\n\t\t];\r\n\t\tif(this.props.activeUser)\r\n\t\t{\r\n\t\t\tbuttons = [\r\n\t\t\t\t<div className={\"new-map-button\"} onClick={(e) => {\r\n\t\t\t\t\tconst userConfirmed = window.confirm(\"This will wipe your currently active map so that you can start from scratch.\\n\" +\r\n\t\t\t\t\t\t\"You should save/export your map first if you wish to save your progress.\\n\\nDo you wish to continue?\");\r\n\t\t\t\t\tif(userConfirmed) this.props.newMap(e);\r\n\t\t\t\t}}>\r\n\t\t\t\t\tNew Map\r\n\t\t\t\t</div>,\r\n\t\t\t\t<div className={\"save-button\"} onClick={(e) => {\r\n\t\t\t\t\tthis.props.openModal(e, <SaveModal handler={this.props.saveMap} activeMap={this.props.activeMap} createToast={this.props.createToast} />);\r\n\t\t\t\t}}>\r\n\t\t\t\t\tSave Map / Export\r\n\t\t\t\t</div>,\r\n\t\t\t\t<div className={\"view-maps-button\"} onClick={(e) => {\r\n\t\t\t\t\tthis.props.openModal(e, <ViewMapsModal loadMap={this.props.loadMap} deleteMap={this.props.deleteMap}\r\n\t\t\t\t\t                                       activeUser={this.props.activeUser} openModal={this.props.openModal}\r\n\t\t\t\t\t                                       handleResponse={this.props.handleResponse}  />);\r\n\t\t\t\t}}>\r\n\t\t\t\t\tView Maps / Import\r\n\t\t\t\t</div>,\r\n\t\t\t\t<div className={\"share-button\"} onClick={(e) => {\r\n\t\t\t\t\tif(this.props.activeMap)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(this.props.activeMap.mapID)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst domain = \"http://localhost:3000/\"; // Major TODO: Update this when hosted\r\n\t\t\t\t\t\t\tconst link = `${domain}/map/${this.props.activeUser.username}/${this.props.activeMap.mapID}`;\r\n\t\t\t\t\t\t\tconst linkModal =\r\n\t\t\t\t\t\t\t\t<GenericModal>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tHere is the link to your map: <a href={link}>{link}</a><br /><br />\r\n\t\t\t\t\t\t\t\t\t\tThis will not share your map to the showcase, but anybody with the link can access it.<br />\r\n\t\t\t\t\t\t\t\t\t\tWhenever you save your map, your changes will be shown via this same link.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</GenericModal>\r\n\t\t\t\t\t\t\tthis.props.openModal(null, linkModal, true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.createToast(e, \"Map must be saved to profile before it can be shared.\", 7000, \"error\")\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.createToast(e, \"No active map. Create/load a map and save it to your profile before sharing.\", 7000, \"error\")\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}}>\r\n\t\t\t\t\tShare\r\n\t\t\t\t</div>,\r\n\t\t\t\t<div className={\"settings-button\"} onClick={(e) => {\r\n\t\t\t\t\tthis.props.openModal(e, <ProfileSettingsModal editProfile={this.props.editProfile} deleteProfile={this.props.deleteProfile} activeUser={this.props.activeUser} createToast={this.props.createToast} />);\r\n\t\t\t\t}}>\r\n\t\t\t\t\tProfile Settings\r\n\t\t\t\t</div>,\r\n\t\t\t\t<div className={\"logout-button\"} onClick={this.props.logoutUser}>\r\n\t\t\t\t\tLog Out\r\n\t\t\t\t</div>\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className={\"banner-container\"}>\r\n\t\t\t\t<h2>LEMA: Linguistic Etymology Map Assistant</h2>\r\n\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t{showcase}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t{buttons}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}