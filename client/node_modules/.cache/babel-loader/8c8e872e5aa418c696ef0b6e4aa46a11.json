{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { useD3 } from \"../hooks/useD3\";\nimport languageCountries from \"../supportedLanguages.json\";\nimport countries_data from \"../data/countries/countries.json\";\nimport { AddEditNodeModal } from \"./AddEditNodeModal\";\nimport { ContextMenu } from \"./ContextMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Map(props) {\n  _s();\n\n  // Prop functions\n  const openContextMenu = props.openContextMenu.bind(this);\n  const closeContextMenu = props.closeContextMenu.bind(this);\n  const addNode = props.addNode.bind(this);\n  const editNode = props.editNode.bind(this);\n  const removeNode = props.removeNode.bind(this);\n  const openModal = props.openModal.bind(this);\n  const closeModal = props.closeModal.bind(this);\n  /* Context menu item handlers */\n\n  function cAddSiblingNode(e, parentIndex) {\n    // Open the AddEditNodeModal\n    this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n      onNodeSubmit: this.addNode,\n      parentIndex: parentIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this));\n  }\n\n  function cEditNode(e, parentIndex) {\n    // Open the AddEditNodeModal\n    this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n      onNodeSubmit: this.addNode,\n      parentIndex: parentIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this));\n  }\n\n  function cRemoveNode(e, index) {\n    let newItems = this.state.items;\n    delete newItems[index];\n    this.setState({\n      items: newItems\n    });\n  }\n\n  const collections = props.collections;\n\n  let topojson = require(\"topojson\");\n\n  let countries_data = require(\"../data/countries/countries.json\");\n  /* Example of using d3-geo in useEffect() instead of custom useD3() */\n  // Note: Unfortunately, cannot append React components (then again, that's probably a good thing...)\n\n\n  useEffect(() => {\n    let svg = d3.selectAll(\".map-container\").selectAll(\"svg\");\n    let countries = countries_data.features; // Create path (passed as svg attribute later to draw the countries)\n    // TODO: Have it auto-scale as window is dragged\n\n    const width = svg._groups[0][0].clientWidth;\n    const height = svg._groups[0][0].clientHeight;\n    const projection = d3.geoConicConformal().center([8, 52.823]) // Middle of Europe(ish)\n    .scale(1360).translate([width / 2, height / 2]);\n    const path = d3.geoPath().projection(projection); // Draw countries, bind data and handlers\n\n    svg.append(\"g\").selectAll(\"path\") // svg->g->path\n    .data(countries) // svg->g->path\n    .enter() // svg->g->path (create new nodes per data)\n    .append(\"path\") // svg->g->path (create new nodes per data)\n    .attr(\"fill\", d => determineFillColour(d)).on(\"click\", function (e, d) {\n      // TODO: Functions (dragging nodes; etc.)\n      alert(\"Hello, \" + d.properties.name + \"! You speak \" + d.properties.languages + \"!\");\n    }).on(\"contextmenu\", function (e, d) {\n      const node = findNode(d, \"cognate\");\n      const contextMenuItems = [{\n        text: \"Add sibling node\",\n        handler: e => {\n          // Open modal\n          openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n            onNodeSubmit: addNode,\n            collectionIndex: node.collectionIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this));\n        }\n      }, {\n        text: \"Edit node\",\n        handler: e => {\n          // Open modal\n          openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n            onNodeSubmit: editNode,\n            collectionIndex: node.collectionIndex,\n            childNodeIndex: node.childNodeIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this));\n        }\n      }, {\n        text: \"Remove node\",\n        handler: e => {\n          // Remove node\n          removeNode(e, node.collectionIndex, node.childNodeIndex);\n        }\n      }];\n      openContextMenu(e, /*#__PURE__*/_jsxDEV(ContextMenu, {\n        x: e.nativeEvent.clientX,\n        y: e.nativeEvent.clientY,\n        items: contextMenuItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 24\n      }, this));\n    }).on(\"mouseover\", function (e, d) {\n      let element = d3.select(this);\n      if (element.attr(\"fill\") === \"white\") // White can't become transparent\n        element.attr(\"fill\", \"rgb(230,230,230)\");else element.attr(\"fill-opacity\", \"0.65\");\n    }).on(\"mouseout\", function (e, d) {\n      let element = d3.select(this);\n      if (element.attr(\"fill\") === \"rgb(230,230,230)\") // Reset white\n        element.attr(\"fill\", \"white\");else element.attr(\"fill-opacity\", \"1\");\n    }).attr(\"stroke\", \"black\").attr(\"stroke-linejoin\", \"round\").attr(\"d\", path); // Graticules (lines on the map)\n\n    const g = svg.append(\"g\");\n    const graticules = g.classed(\"graticules\", true).append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"rgba(0,0,0,.2)\").attr(\"d\", path(d3.geoGraticule()()));\n    /*\r\n    svg.call(d3.zoom().on(\"zoom\", function () {\r\n    \tz = d3.event.transform.k;\r\n    \tdraw(); // TODO: Contain above render code into draw() function\r\n    }));\r\n     */\n    // Clean-up function (kills all SVG elements upon unmounting)\n\n    return function cleanup() {\n      svg.selectAll(\"g\").remove();\n    };\n  });\n\n  function findNode(d, type) {\n    // Search collections\n    for (let c = 0; c < collections.length; ++c) {\n      let collection = collections[c];\n\n      if (type === \"cognate\") {\n        if (collection.type === \"cognate\") {\n          for (let n = 0; n < collection.childNodes.length; ++n) {\n            let childNode = collection.childNodes[n];\n\n            if (d.properties.languages.includes(childNode.language)) {\n              return {\n                node: childNode,\n                collectionIndex: c,\n                childNodeIndex: n\n              };\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\r\n   * Determines country SVG fill colour according to countries' language(s) and the specified colour of that language's cognate node(s)\r\n   * @param d Data attached to DOM element via D3 (i.e. the country)\r\n   * @returns {string} The fill colour, as specified by user in Collection.jsx\r\n   */\n\n\n  function determineFillColour(d) {\n    const nodeObject = findNode(d, \"cognate\"); // Find node in collections\n\n    if (nodeObject) return nodeObject.node.colour; // Country has associated collection node? Return the colour\n    else return \"white\"; // Otherwise, return white by default for all countries with no associated data\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      /*ref={ref}*/\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        margin: 0,\n        backgroundColor: \"#3d73ab\"\n        /* The sea */\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Map, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Map.jsx"],"names":["React","useEffect","useState","d3","useD3","languageCountries","countries_data","AddEditNodeModal","ContextMenu","Map","props","openContextMenu","bind","closeContextMenu","addNode","editNode","removeNode","openModal","closeModal","cAddSiblingNode","e","parentIndex","cEditNode","cRemoveNode","index","newItems","state","items","setState","collections","topojson","require","svg","selectAll","countries","features","width","_groups","clientWidth","height","clientHeight","projection","geoConicConformal","center","scale","translate","path","geoPath","append","data","enter","attr","d","determineFillColour","on","alert","properties","name","languages","node","findNode","contextMenuItems","text","handler","collectionIndex","childNodeIndex","nativeEvent","clientX","clientY","element","select","g","graticules","classed","geoGraticule","cleanup","remove","type","c","length","collection","n","childNodes","childNode","includes","language","nodeObject","colour","margin","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport {useD3} from \"../hooks/useD3\";\r\nimport languageCountries from \"../supportedLanguages.json\";\r\nimport countries_data from \"../data/countries/countries.json\";\r\nimport {AddEditNodeModal} from \"./AddEditNodeModal\";\r\nimport {ContextMenu} from \"./ContextMenu\";\r\n\r\nexport function Map(props)\r\n{\r\n\t// Prop functions\r\n\tconst openContextMenu = props.openContextMenu.bind(this);\r\n\tconst closeContextMenu = props.closeContextMenu.bind(this);\r\n\tconst addNode = props.addNode.bind(this);\r\n\tconst editNode = props.editNode.bind(this);\r\n\tconst removeNode = props.removeNode.bind(this);\r\n\tconst openModal = props.openModal.bind(this);\r\n\tconst closeModal = props.closeModal.bind(this);\r\n\r\n\t/* Context menu item handlers */\r\n\tfunction cAddSiblingNode(e, parentIndex)\r\n\t{\r\n\t\t// Open the AddEditNodeModal\r\n\t\tthis.openModal(e, <AddEditNodeModal onNodeSubmit={this.addNode} parentIndex={parentIndex}/>);\r\n\t}\r\n\tfunction cEditNode(e, parentIndex)\r\n\t{\r\n\t\t// Open the AddEditNodeModal\r\n\t\tthis.openModal(e, <AddEditNodeModal onNodeSubmit={this.addNode} parentIndex={parentIndex}/>);\r\n\t}\r\n\tfunction cRemoveNode(e, index)\r\n\t{\r\n\t\tlet newItems = this.state.items;\r\n\t\tdelete newItems[index];\r\n\t\tthis.setState({items: newItems});\r\n\t}\r\n\r\n\tconst collections = props.collections;\r\n\tlet topojson = require(\"topojson\");\r\n\tlet countries_data = require(\"../data/countries/countries.json\");\r\n\r\n\t/* Example of using d3-geo in useEffect() instead of custom useD3() */\r\n\t// Note: Unfortunately, cannot append React components (then again, that's probably a good thing...)\r\n\tuseEffect(() => {\r\n\t\tlet svg = d3.selectAll(\".map-container\").selectAll(\"svg\");\r\n\t\tlet countries = countries_data.features;\r\n\r\n\t\t// Create path (passed as svg attribute later to draw the countries)\r\n\t\t// TODO: Have it auto-scale as window is dragged\r\n\t\tconst width = svg._groups[0][0].clientWidth;\r\n\t\tconst height = svg._groups[0][0].clientHeight;\r\n\t\tconst projection = d3.geoConicConformal()\r\n\t\t\t.center([8, 52.823]) // Middle of Europe(ish)\r\n\t\t\t.scale(1360)\r\n\t\t\t.translate([width/2, height/2]);\r\n\t\tconst path = d3.geoPath().projection(projection);\r\n\r\n\t\t// Draw countries, bind data and handlers\r\n\t\tsvg.append(\"g\")\r\n\t\t\t.selectAll(\"path\") // svg->g->path\r\n\t\t\t.data(countries)         // svg->g->path\r\n\t\t\t.enter()                 // svg->g->path (create new nodes per data)\r\n\t\t\t.append(\"path\")          // svg->g->path (create new nodes per data)\r\n\t\t\t.attr(\"fill\", (d) => determineFillColour(d))\r\n\t\t\t.on(\"click\", function(e, d){\r\n\t\t\t\t// TODO: Functions (dragging nodes; etc.)\r\n\r\n\t\t\t\talert(\"Hello, \" + d.properties.name + \"! You speak \" + d.properties.languages + \"!\");\r\n\t\t\t})\r\n\t\t\t.on(\"contextmenu\", function(e, d){\r\n\t\t\t\tconst node = findNode(d, \"cognate\");\r\n\t\t\t\tconst contextMenuItems = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: \"Add sibling node\", handler: (e) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Open modal\r\n\t\t\t\t\t\t\topenModal(e, <AddEditNodeModal onNodeSubmit={addNode} collectionIndex={node.collectionIndex} />);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: \"Edit node\", handler: (e) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Open modal\r\n\t\t\t\t\t\t\topenModal(e, <AddEditNodeModal onNodeSubmit={editNode} collectionIndex={node.collectionIndex} childNodeIndex={node.childNodeIndex} />);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttext: \"Remove node\", handler: (e) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Remove node\r\n\t\t\t\t\t\t\tremoveNode(e, node.collectionIndex, node.childNodeIndex);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\r\n\t\t\t\topenContextMenu(e, <ContextMenu x={e.nativeEvent.clientX} y={e.nativeEvent.clientY} items={contextMenuItems} />);\r\n\t\t\t})\r\n\t\t\t.on(\"mouseover\", function(e, d){\r\n\t\t\t\tlet element = d3.select(this);\r\n\t\t\t\tif(element.attr(\"fill\") === \"white\") // White can't become transparent\r\n\t\t\t\t\telement.attr(\"fill\", \"rgb(230,230,230)\")\r\n\t\t\t\telse\r\n\t\t\t\t\telement.attr(\"fill-opacity\", \"0.65\");\r\n\t\t\t})\r\n\t\t\t.on(\"mouseout\", function(e, d){\r\n\t\t\t\tlet element = d3.select(this);\r\n\t\t\t\tif(element.attr(\"fill\") === \"rgb(230,230,230)\") // Reset white\r\n\t\t\t\t\telement.attr(\"fill\", \"white\")\r\n\t\t\t\telse\r\n\t\t\t\t\telement.attr(\"fill-opacity\", \"1\");\r\n\t\t\t})\r\n\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t.attr(\"stroke-linejoin\", \"round\")\r\n\t\t\t.attr(\"d\", path);\r\n\r\n\t\t// Graticules (lines on the map)\r\n\t\tconst g = svg.append(\"g\");\r\n\t\tconst graticules = g.classed(\"graticules\", true)\r\n\t\t\t.append(\"path\")\r\n\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t.attr(\"stroke\", \"rgba(0,0,0,.2)\")\r\n\t\t\t.attr(\"d\", path(d3.geoGraticule()()));\r\n\r\n\t\t/*\r\n\t\tsvg.call(d3.zoom().on(\"zoom\", function () {\r\n\t\t\tz = d3.event.transform.k;\r\n\t\t\tdraw(); // TODO: Contain above render code into draw() function\r\n\t\t}));\r\n\t\t */\r\n\r\n\t\t// Clean-up function (kills all SVG elements upon unmounting)\r\n\t\treturn function cleanup()\r\n\t\t{\r\n\t\t\tsvg.selectAll(\"g\").remove();\r\n\t\t}\r\n\r\n\t});\r\n\r\n\tfunction findNode(d, type)\r\n\t{\r\n\t\t// Search collections\r\n\t\tfor(let c = 0; c < collections.length; ++c)\r\n\t\t{\r\n\t\t\tlet collection = collections[c];\r\n\r\n\t\t\tif(type === \"cognate\")\r\n\t\t\t{\r\n\t\t\t\tif(collection.type === \"cognate\")\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(let n = 0; n < collection.childNodes.length; ++n)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet childNode = collection.childNodes[n];\r\n\r\n\t\t\t\t\t\tif(d.properties.languages.includes(childNode.language))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\treturn {node: childNode, collectionIndex: c, childNodeIndex: n};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Determines country SVG fill colour according to countries' language(s) and the specified colour of that language's cognate node(s)\r\n\t * @param d Data attached to DOM element via D3 (i.e. the country)\r\n\t * @returns {string} The fill colour, as specified by user in Collection.jsx\r\n\t */\r\n\tfunction determineFillColour(d)\r\n\t{\r\n\t\tconst nodeObject = findNode(d, \"cognate\"); // Find node in collections\r\n\t\tif(nodeObject) return nodeObject.node.colour;   // Country has associated collection node? Return the colour\r\n\t\telse return \"white\";                            // Otherwise, return white by default for all countries with no associated data\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={\"map-container\"}>\r\n\t\t\t<svg\r\n\t\t\t\t/*ref={ref}*/\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\tbackgroundColor: \"#3d73ab\" /* The sea */\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}