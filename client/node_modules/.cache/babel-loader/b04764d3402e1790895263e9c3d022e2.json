{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Collections.jsx\";\nimport { Component } from \"react\";\nimport { Journey } from \"./Journey\";\nimport { Cognate } from \"./Cognate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Collections extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{\n        // TODO: Dummy data\n        type: \"journey\",\n        header: {\n          word: \"horse\",\n          language: \"English (UK)\"\n        },\n        childNodes: [{\n          word: \"kers\",\n          language: \"Proto-Indo-European\",\n          colour: null\n        }, {\n          word: \"krsos\",\n          language: \"Proto-Indo-European\",\n          colour: null\n        }, {\n          word: \"hrussa\",\n          language: \"Proto-Germanic\",\n          colour: null\n        }, {\n          word: \"hross\",\n          language: \"Proto-West-Germanic\",\n          colour: null\n        }, {\n          word: \"horse\",\n          language: \"English\",\n          colour: null\n        }]\n      }]\n    };\n  }\n\n  render() {\n    // TODO: Consider whether both cognates AND journeys may be displayed at the same time\n    let itemElements = this.state.items.map((item, index) => {\n      if (item.type === \"cognate\") {\n        return /*#__PURE__*/_jsxDEV(Cognate, {\n          header: item.header,\n          childNodes: item.childNodes\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 12\n        }, this);\n      } else if (item.type === \"journey\") {\n        return /*#__PURE__*/_jsxDEV(Journey, {\n          header: item.header,\n          childNodes: item.childNodes\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collections-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          alignSelf: \"center\"\n        },\n        children: \"Journeys\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), itemElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Collections.jsx"],"names":["Component","Journey","Cognate","Collections","constructor","props","state","items","type","header","word","language","childNodes","colour","render","itemElements","map","item","index","alignSelf"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,WAAtB;;AAEA,OAAO,MAAMC,WAAN,SAA0BH,SAA1B,CACP;AACCI,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,CACN;AACC;AACAC,QAAAA,IAAI,EAAE,SAFP;AAGCC,QAAAA,MAAM,EAAE;AAACC,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,QAAQ,EAAE;AAA1B,SAHT;AAICC,QAAAA,UAAU,EAAE,CAAC;AAACF,UAAAA,IAAI,EAAE,MAAP;AAAeC,UAAAA,QAAQ,EAAE,qBAAzB;AAAgDE,UAAAA,MAAM,EAAE;AAAxD,SAAD,EAAgE;AAACH,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,QAAQ,EAAE,qBAA1B;AAAiDE,UAAAA,MAAM,EAAE;AAAzD,SAAhE,EACX;AAACH,UAAAA,IAAI,EAAE,QAAP;AAAiBC,UAAAA,QAAQ,EAAE,gBAA3B;AAA6CE,UAAAA,MAAM,EAAE;AAArD,SADW,EACiD;AAACH,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,QAAQ,EAAE,qBAA1B;AAAiDE,UAAAA,MAAM,EAAE;AAAzD,SADjD,EAEX;AAACH,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,QAAQ,EAAE,SAA1B;AAAqCE,UAAAA,MAAM,EAAE;AAA7C,SAFW;AAJb,OADM;AADK,KAAb;AAYA;;AAEDC,EAAAA,MAAM,GACN;AACC;AACA,QAAIC,YAAY,GAAG,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxD,UAAGD,IAAI,CAACT,IAAL,KAAc,SAAjB,EACA;AACC,4BAAO,QAAC,OAAD;AAAS,UAAA,MAAM,EAAES,IAAI,CAACR,MAAtB;AAA8B,UAAA,UAAU,EAAEQ,IAAI,CAACL;AAA/C,WAAgEM,KAAhE;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA,OAHD,MAIK,IAAGD,IAAI,CAACT,IAAL,KAAc,SAAjB,EACL;AACC,4BAAO,QAAC,OAAD;AAAS,UAAA,MAAM,EAAES,IAAI,CAACR,MAAtB;AAA8B,UAAA,UAAU,EAAEQ,IAAI,CAACL;AAA/C,WAAgEM,KAAhE;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;AACD,KATkB,CAAnB;AAWA,wBACC;AAAK,MAAA,SAAS,EAAE,uBAAhB;AAAA,8BACC;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEJ,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;;AAtCF","sourcesContent":["import {Component} from \"react\";\r\nimport {Journey} from \"./Journey\";\r\nimport {Cognate} from \"./Cognate\";\r\n\r\nexport class Collections extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titems: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO: Dummy data\r\n\t\t\t\t\ttype: \"journey\",\r\n\t\t\t\t\theader: {word: \"horse\", language: \"English (UK)\"},\r\n\t\t\t\t\tchildNodes: [{word: \"kers\", language: \"Proto-Indo-European\", colour: null}, {word: \"krsos\", language: \"Proto-Indo-European\", colour: null},\r\n\t\t\t\t\t\t{word: \"hrussa\", language: \"Proto-Germanic\", colour: null}, {word: \"hross\", language: \"Proto-West-Germanic\", colour: null},\r\n\t\t\t\t\t\t{word: \"horse\", language: \"English\", colour: null}]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// TODO: Consider whether both cognates AND journeys may be displayed at the same time\r\n\t\tlet itemElements = this.state.items.map((item, index) => {\r\n\t\t\tif(item.type === \"cognate\")\r\n\t\t\t{\r\n\t\t\t\treturn <Cognate header={item.header} childNodes={item.childNodes} key={index} />;\r\n\t\t\t}\r\n\t\t\telse if(item.type === \"journey\")\r\n\t\t\t{\r\n\t\t\t\treturn <Journey header={item.header} childNodes={item.childNodes} key={index} />;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn(\r\n\t\t\t<div className={\"collections-container\"}>\r\n\t\t\t\t<h2 style={{alignSelf: \"center\"}}>Journeys</h2>\r\n\t\t\t\t{itemElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}