{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\client\\\\src\\\\components\\\\modals\\\\AddEditNodeModal.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"../controls/Textbox\";\nimport { Button } from \"../controls/Button\";\nimport { LabeledControl } from \"../controls/LabeledControl\";\nimport { ColourPicker } from \"../controls/ColourPicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddEditNodeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /* Node properties */\n      word: this.props.node.word || null,\n      parents: this.props.node.parents || null,\n      collectionIndex: this.props.collectionIndex !== undefined ? this.props.collectionIndex : null,\n      // Cognate properties\n      strokeColour: this.props.node.strokeColour || null,\n      fillColour: this.props.node.fillColour || null,\n      labelType: this.props.node.label !== undefined ? this.props.node.label.type || null : null,\n      labelCustomText: this.props.node.label !== undefined ? this.props.node.label.customText || null : null,\n      // Note: Text can be \"\"\n      labelFontColour: this.props.node.label !== undefined ? this.props.node.label.fontColour || null : null,\n      labelFontSize: this.props.node.label !== undefined ? this.props.node.label.fontSize || null : null,\n      // Journey properties\n      vertexTextType: this.props.node.vertex !== undefined ? this.props.node.vertex.type || null : null,\n      vertexCustomText: this.props.node.vertex !== undefined ? this.props.node.vertex.customText || null : null,\n      // Note: Text can be \"\"\n      vertexFontColour: this.props.node.vertex !== undefined ? this.props.node.vertex.fontColour || null : null,\n      vertexStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.strokeColour || null : null,\n      vertexFillColour: this.props.node.vertex !== undefined ? this.props.node.vertex.fillColour || null : null,\n      vertexEdgeStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeStrokeColour || null : null,\n      vertexEdgeStrokeWidth: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeStrokeWidth || null : null,\n      vertexArrowheadEnabled: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadEnabled || null : null,\n      vertexArrowheadStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadStrokeColour || null : null,\n      vertexArrowheadFillColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadFillColour || null : null,\n      // Optional or can be overridden\n      isNewWord: this.props.isNewWord,\n      language: typeof this.props.language === \"object\" ? this.props.language[0] : this.props.language,\n      collectionList: this.props.collectionList !== undefined ? this.props.collectionList || null : null\n    };\n    this.onNodeSubmit = this.props.onNodeSubmit.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.onParentNodeAddRemoveClick = this.onParentNodeAddRemoveClick.bind(this);\n  }\n\n  onFieldChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onParentNodeAddRemoveClick(e, mode) {\n    // Find associated node via data-index\n    const node = this.props.words[e.target.parentElement.parentElement.parentElement.dataset.index];\n    const parents = this.props.node.parents;\n    if (mode === \"add\") parents.push(node);else if (mode === \"remove\") parents.splice(parents.indexOf(node), 1);\n    this.setState({\n      parents: parents\n    });\n  }\n\n  validation() {\n    // TODO: Validate form data\n    return true;\n  }\n\n  render() {\n    // Language input is a Textbox if none or one language is supplied, or a drop-down menu if some are supplied\n    let languageInput;\n\n    if (typeof this.props.language === \"object\") {\n      const options = [];\n\n      for (let i = 0; i < this.props.language.length; ++i) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: this.props.language[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 18\n        }, this));\n      }\n\n      languageInput = /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"language\",\n        value: this.state.language,\n        onChange: this.onFieldChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this);\n    } else {\n      languageInput = /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"English\\\"\",\n        name: \"language\",\n        value: this.state.language,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }, this);\n    }\n\n    let collectionInput;\n    console.log(\"collectionList\");\n    console.log(this.state.collectionList);\n\n    if (this.state.collectionList) {\n      // Create options\n      const options = [];\n\n      for (let i = 0; i < this.state.collectionList.length; ++i) {\n        const collection = this.state.collectionList[i];\n        const option = `${collection.header.word} (${collection.header.language})`;\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: option\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 18\n        }, this));\n      } // Find default collection for the <select>\n\n\n      let currentCollection = this.state.collectionList.find(c => {\n        console.log(\"HELLO\");\n        console.log(c.collectionIndex);\n        console.log(this.state.collectionIndex);\n        return c.collectionIndex === this.state.collectionIndex;\n      });\n      if (currentCollection != null) currentCollection = `${currentCollection.header.word} (${currentCollection.header.language})`; // Create select\n\n      collectionInput = /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"collection\",\n        defaultValue: currentCollection,\n        onChange: e => {\n          const newCollectionIndex = this.state.collectionList[e.target.selectedIndex].collectionIndex; // Find collectionIndex of selected option\n\n          this.setState({\n            collectionIndex: newCollectionIndex\n          });\n        },\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this);\n    }\n    /* Construct list of nodes that are the word's parent or can be added as the word's parent */\n\n\n    const parentNodeList = [];\n\n    if (this.props.type === \"journey\" && this.props.words) {\n      for (let i = 0; i < this.props.words.length; ++i) {\n        // List all nodes\n        const wordNode = this.props.words[i];\n\n        if (this.props.node !== wordNode) {\n          // If true, disables adding and enables deletion. If false, the inverse\n          const isAlreadyParent = this.props.node.parents.find(parentNode => parentNode.id === wordNode.id) !== undefined;\n          parentNodeList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n            \"data-index\": i,\n            className: \"parent-node\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word\",\n              children: [wordNode.word, \" (\", wordNode.language, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                name: \"addParent\",\n                value: \"+\",\n                disabled: isAlreadyParent,\n                onClick: e => this.onParentNodeAddRemoveClick(e, \"add\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                name: \"removeParent\",\n                value: \"X\",\n                disabled: !isAlreadyParent,\n                onClick: e => this.onParentNodeAddRemoveClick(e, \"remove\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 7\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 6\n          }, this));\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"New Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Node Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Word / Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Word: \",\n                  children: /*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"word\",\n                    value: this.state.word,\n                    hint: \"e.g. \\\"vivification\\\"\",\n                    autoFocus: true,\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Language: \",\n                  children: languageInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Collection: \",\n                  children: collectionInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 8\n            }, this), this.props.node.vertex !== undefined &&\n            /*#__PURE__*/\n\n            /* parentNodes */\n            _jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Parent Nodes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parent-node-list\",\n                children: parentNodeList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Node Appearance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 7\n          }, this), this.props.node.vertex !== undefined &&\n          /*#__PURE__*/\n\n          /* Vertex appearance */\n          _jsxDEV(\"div\", {\n            className: \"node-appearance\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Vertex Label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Text: \",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"vertexTextType\",\n                    value: this.state.vertexTextType,\n                    onChange: e => {\n                      this.setState({\n                        vertexCustomText: \"\"\n                      }); // Automatically clear \"Custom text\" field\n\n                      this.onFieldChange(e);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Word\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Language\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Custom text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Custom text: \",\n                  children: /*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexCustomText\",\n                    value: this.state.vertexCustomText,\n                    hint: \"e.g. \\\"Coolest word ever!\\\"\",\n                    onFieldChange: e => {\n                      this.setState({\n                        vertexTextType: \"Custom text\"\n                      }); // Automatically change type to \"Custom text\"\n\n                      this.onFieldChange(e);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Font colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexFontColour\",\n                    value: this.state.vertexFontColour,\n                    hint: \"Hexadecimal value (e.g. #000000)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"vertexFontColour\",\n                    value: this.state.vertexFontColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Vertex Circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Stroke colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexStrokeColour\",\n                    value: this.state.vertexStrokeColour,\n                    hint: \"Hexadecimal value (e.g. #000000)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"vertexStrokeColour\",\n                    value: this.state.vertexStrokeColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Fill colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexFillColour\",\n                    value: this.state.vertexFillColour,\n                    hint: \"Hexadecimal value (e.g. #FFFFFF)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"vertexFillColour\",\n                    value: this.state.vertexFillColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Edge Line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Stroke colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexEdgeStrokeColour\",\n                    value: this.state.vertexEdgeStrokeColour,\n                    hint: \"Hexadecimal value (e.g. #000000)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"vertexEdgeStrokeColour\",\n                    value: this.state.vertexEdgeStrokeColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Stroke width: \",\n                  children: /*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexEdgeStrokeWidth\",\n                    value: this.state.vertexEdgeStrokeWidth,\n                    hint: \"Pixel value (e.g. 2px)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Edge Arrowhead\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Visible?\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"vertexArrowheadEnabled\",\n                    checked: this.state.vertexArrowheadEnabled,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Stroke colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexArrowheadStrokeColour\",\n                    value: this.state.vertexArrowheadStrokeColour,\n                    hint: \"Hexadecimal value (e.g. #000000)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"vertexArrowheadStrokeColour\",\n                    value: this.state.vertexArrowheadStrokeColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Fill colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexArrowheadFillColour\",\n                    value: this.state.vertexArrowheadFillColour,\n                    hint: \"Hexadecimal value (e.g. #000000)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"vertexArrowheadFillColour\",\n                    value: this.state.vertexArrowheadFillColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 8\n          }, this), this.props.node.label !== undefined &&\n          /*#__PURE__*/\n\n          /* Cognate label appearance */\n          _jsxDEV(\"div\", {\n            className: \"node-appearance\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Country/Region\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Stroke colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"strokeColour\",\n                    value: this.state.strokeColour,\n                    hint: \"Hexadecimal value (e.g. #000000)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"strokeColour\",\n                    value: this.state.strokeColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Fill colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"fillColour\",\n                    value: this.state.fillColour,\n                    hint: \"Hexadecimal value (e.g. #FFFFFF)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"fillColour\",\n                    value: this.state.fillColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Text: \",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"labelType\",\n                    value: this.state.labelType,\n                    onChange: this.onFieldChange,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Word\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 283,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Language\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Country/region\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Custom text\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Custom text: \",\n                  children: /*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"labelCustomText\",\n                    value: this.state.labelCustomText,\n                    hint: \"e.g. \\\"Coolest country ever!\\\"\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Font colour: \",\n                  children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"labelFontColour\",\n                    value: this.state.labelFontColour,\n                    hint: \"Hexadecimal value (e.g. #000000)\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(ColourPicker, {\n                    name: \"labelFontColour\",\n                    value: this.state.labelFontColour,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            value: this.props.isNewWord ? \"Add Node\" : \"Save Changes\",\n            onClick: e => {\n              if (this.validation()) {\n                // Build node structure to match collection type\n                let updatedNode;\n\n                if (this.props.type === \"journey\") {\n                  updatedNode = { ...this.props.node,\n                    word: this.state.word,\n                    language: this.state.language.charAt(0).toUpperCase() + this.state.language.slice(1),\n                    // Capitalise first letter of language\n                    colour: this.state.colour,\n                    vertex: { ...this.props.node.vertex,\n                      type: this.state.vertexTextType,\n                      customText: this.state.vertexCustomText,\n                      fontColour: this.state.vertexFontColour,\n                      strokeColour: this.state.vertexStrokeColour,\n                      fillColour: this.state.vertexFillColour,\n                      edgeStrokeColour: this.state.vertexEdgeStrokeColour,\n                      edgeStrokeWidth: this.state.vertexEdgeStrokeWidth,\n                      edgeArrowheadEnabled: this.state.vertexArrowheadEnabled,\n                      edgeArrowheadStrokeColour: this.state.vertexArrowheadStrokeColour,\n                      edgeArrowheadFillColour: this.state.vertexArrowheadFillColour\n                    }\n                  };\n                } else if (this.props.type === \"cognate\") {\n                  updatedNode = { ...this.props.node,\n                    word: this.state.word,\n                    language: this.state.language.charAt(0).toUpperCase() + this.state.language.slice(1),\n                    // Capitalise first letter of language\n                    fillColour: this.state.fillColour,\n                    strokeColour: this.state.strokeColour,\n                    label: { ...this.props.node.label,\n                      type: this.state.labelType,\n                      customText: this.state.labelCustomText,\n                      fontColour: this.state.labelFontColour,\n                      fontSize: this.state.labelFontSize\n                    }\n                  };\n                }\n\n                const newCollectionIndex = this.state.collectionIndex !== this.props.collectionIndex ? this.state.collectionIndex : null;\n                this.props.onNodeSubmit(e, this.props.collectionIndex, updatedNode, newCollectionIndex);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/client/src/components/modals/AddEditNodeModal.jsx"],"names":["Component","Textbox","Button","LabeledControl","ColourPicker","AddEditNodeModal","constructor","props","state","word","node","parents","collectionIndex","undefined","strokeColour","fillColour","labelType","label","type","labelCustomText","customText","labelFontColour","fontColour","labelFontSize","fontSize","vertexTextType","vertex","vertexCustomText","vertexFontColour","vertexStrokeColour","vertexFillColour","vertexEdgeStrokeColour","edgeStrokeColour","vertexEdgeStrokeWidth","edgeStrokeWidth","vertexArrowheadEnabled","edgeArrowheadEnabled","vertexArrowheadStrokeColour","edgeArrowheadStrokeColour","vertexArrowheadFillColour","edgeArrowheadFillColour","isNewWord","language","collectionList","onNodeSubmit","bind","onFieldChange","onParentNodeAddRemoveClick","event","target","name","value","checked","setState","e","mode","words","parentElement","dataset","index","push","splice","indexOf","validation","render","languageInput","options","i","length","collectionInput","console","log","collection","option","header","currentCollection","find","c","newCollectionIndex","selectedIndex","parentNodeList","wordNode","isAlreadyParent","parentNode","id","updatedNode","charAt","toUpperCase","slice","colour"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"../controls/Textbox\";\r\nimport {Button} from \"../controls/Button\";\r\nimport {LabeledControl} from \"../controls/LabeledControl\";\r\nimport {ColourPicker} from \"../controls/ColourPicker\";\r\n\r\nexport class AddEditNodeModal extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t/* Node properties */\r\n\t\t\tword: this.props.node.word || null,\r\n\t\t\tparents: this.props.node.parents || null,\r\n\t\t\tcollectionIndex: (this.props.collectionIndex !== undefined) ? this.props.collectionIndex : null,\r\n\r\n\t\t\t// Cognate properties\r\n\t\t\tstrokeColour: this.props.node.strokeColour || null,\r\n\t\t\tfillColour: this.props.node.fillColour || null,\r\n\t\t\tlabelType: (this.props.node.label !== undefined) ? this.props.node.label.type || null : null,\r\n\t\t\tlabelCustomText: (this.props.node.label !== undefined) ? this.props.node.label.customText || null : null, // Note: Text can be \"\"\r\n\t\t\tlabelFontColour: (this.props.node.label !== undefined) ? this.props.node.label.fontColour || null : null,\r\n\t\t\tlabelFontSize: (this.props.node.label !== undefined) ? this.props.node.label.fontSize || null : null,\r\n\r\n\t\t\t// Journey properties\r\n\t\t\tvertexTextType: (this.props.node.vertex !== undefined) ? this.props.node.vertex.type || null : null,\r\n\t\t\tvertexCustomText: (this.props.node.vertex !== undefined) ? this.props.node.vertex.customText || null : null, // Note: Text can be \"\"\r\n\t\t\tvertexFontColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.fontColour || null : null,\r\n\t\t\tvertexStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.strokeColour || null : null,\r\n\t\t\tvertexFillColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.fillColour || null : null,\r\n\t\t\tvertexEdgeStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeStrokeColour || null : null,\r\n\t\t\tvertexEdgeStrokeWidth: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeStrokeWidth || null : null,\r\n\t\t\tvertexArrowheadEnabled: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadEnabled || null : null,\r\n\t\t\tvertexArrowheadStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadStrokeColour || null : null,\r\n\t\t\tvertexArrowheadFillColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadFillColour || null : null,\r\n\r\n\t\t\t// Optional or can be overridden\r\n\t\t\tisNewWord: this.props.isNewWord,\r\n\t\t\tlanguage: (typeof this.props.language === \"object\") ? this.props.language[0] : this.props.language,\r\n\t\t\tcollectionList: (this.props.collectionList !== undefined) ? this.props.collectionList || null : null\r\n\t\t};\r\n\r\n\t\tthis.onNodeSubmit = this.props.onNodeSubmit.bind(this);\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t\tthis.onParentNodeAddRemoveClick = this.onParentNodeAddRemoveClick.bind(this);\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = (target.type === \"checkbox\") ? target.checked : target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\tonParentNodeAddRemoveClick(e, mode)\r\n\t{\r\n\t\t// Find associated node via data-index\r\n\t\tconst node = this.props.words[e.target.parentElement.parentElement.parentElement.dataset.index];\r\n\t\tconst parents = this.props.node.parents;\r\n\r\n\t\tif(mode === \"add\")\r\n\t\t\tparents.push(node);\r\n\t\telse if(mode === \"remove\")\r\n\t\t\tparents.splice(parents.indexOf(node), 1);\r\n\r\n\t\tthis.setState({parents: parents});\r\n\t}\r\n\r\n\tvalidation()\r\n\t{\r\n\t\t// TODO: Validate form data\r\n\t\treturn true;\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// Language input is a Textbox if none or one language is supplied, or a drop-down menu if some are supplied\r\n\t\tlet languageInput;\r\n\t\tif(typeof this.props.language === \"object\")\r\n\t\t{\r\n\t\t\tconst options = [];\r\n\t\t\tfor(let i = 0; i < this.props.language.length; ++i)\r\n\t\t\t{\r\n\t\t\t\toptions.push(<option key={i}>{this.props.language[i]}</option>);\r\n\t\t\t}\r\n\t\t\tlanguageInput =\r\n\t\t\t\t<select name={\"language\"} value={this.state.language} onChange={this.onFieldChange}>\r\n\t\t\t\t\t{options}\r\n\t\t\t\t</select>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlanguageInput = <Textbox hint={\"e.g. \\\"English\\\"\"} name={\"language\"} value={this.state.language} onFieldChange={this.onFieldChange} />\r\n\t\t}\r\n\r\n\t\tlet collectionInput;\r\n\t\tconsole.log(\"collectionList\");\r\n\t\tconsole.log(this.state.collectionList);\r\n\t\tif(this.state.collectionList)\r\n\t\t{\r\n\t\t\t// Create options\r\n\t\t\tconst options = [];\r\n\t\t\tfor(let i = 0; i < this.state.collectionList.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tconst collection = this.state.collectionList[i];\r\n\t\t\t\tconst option = `${collection.header.word} (${collection.header.language})`;\r\n\t\t\t\toptions.push(<option key={i}>{option}</option>)\r\n\t\t\t}\r\n\r\n\t\t\t// Find default collection for the <select>\r\n\t\t\tlet currentCollection = this.state.collectionList.find((c) => {\r\n\t\t\t\tconsole.log(\"HELLO\");\r\n\t\t\t\tconsole.log(c.collectionIndex);\r\n\t\t\t\tconsole.log(this.state.collectionIndex);\r\n\t\t\t\treturn c.collectionIndex === this.state.collectionIndex;\r\n\t\t\t});\r\n\t\t\tif(currentCollection != null) currentCollection = `${currentCollection.header.word} (${currentCollection.header.language})`\r\n\r\n\t\t\t// Create select\r\n\t\t\tcollectionInput =\r\n\t\t\t\t<select name={\"collection\"} defaultValue={currentCollection} onChange={(e) => {\r\n\t\t\t\t\tconst newCollectionIndex = this.state.collectionList[e.target.selectedIndex].collectionIndex; // Find collectionIndex of selected option\r\n\t\t\t\t\tthis.setState({collectionIndex: newCollectionIndex});\r\n\t\t\t\t}}>\r\n\t\t\t\t\t{options}\r\n\t\t\t\t</select>\r\n\t\t}\r\n\r\n\t\t/* Construct list of nodes that are the word's parent or can be added as the word's parent */\r\n\t\tconst parentNodeList = [];\r\n\t\tif(this.props.type === \"journey\" && this.props.words)\r\n\t\t{\r\n\t\t\tfor(let i = 0; i < this.props.words.length; ++i)\r\n\t\t\t{\r\n\t\t\t\t// List all nodes\r\n\t\t\t\tconst wordNode = this.props.words[i];\r\n\t\t\t\tif(this.props.node !== wordNode)\r\n\t\t\t\t{\r\n\t\t\t\t\t// If true, disables adding and enables deletion. If false, the inverse\r\n\t\t\t\t\tconst isAlreadyParent = (this.props.node.parents.find((parentNode) => parentNode.id === wordNode.id) !== undefined);\r\n\r\n\t\t\t\t\tparentNodeList.push(\r\n\t\t\t\t\t<div key={i} data-index={i} className={\"parent-node\"}>\r\n\t\t\t\t\t\t<div className={\"word\"}>{wordNode.word} ({wordNode.language})</div>\r\n\t\t\t\t\t\t<div className={\"buttons\"}>\r\n\t\t\t\t\t\t\t<Button name={\"addParent\"} value={\"+\"} disabled={isAlreadyParent} onClick={(e) => this.onParentNodeAddRemoveClick(e, \"add\")} />\r\n\t\t\t\t\t\t\t<Button name={\"removeParent\"} value={\"X\"} disabled={!isAlreadyParent} onClick={(e) => this.onParentNodeAddRemoveClick(e, \"remove\")} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"modal\"}>\r\n\t\t\t\t<h2>New Node</h2>\r\n\t\t\t\t<div className={\"top\"}>\r\n\t\t\t\t\t<div className={\"left\"}>\r\n\t\t\t\t\t\t<h3>Node Data</h3>\r\n\t\t\t\t\t\t<div className={\"node-data\"}>\r\n\t\t\t\t\t\t\t{/* cognateWordLanguage */}\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Word / Language</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Word: \"}>\r\n\t\t\t\t\t\t\t\t\t\t<Textbox name={\"word\"} value={this.state.word} hint={\"e.g. \\\"vivification\\\"\"} autoFocus={true} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Language: \"}>\r\n\t\t\t\t\t\t\t\t\t\t{languageInput}\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Collection: \"}>\r\n\t\t\t\t\t\t\t\t\t\t{collectionInput}\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{this.props.node.vertex !== undefined &&\r\n\t\t\t\t\t\t\t\t/* parentNodes */\r\n\t\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t\t<h4>Parent Nodes:</h4>\r\n\t\t\t\t\t\t\t\t\t<div className={\"parent-node-list\"}>\r\n\t\t\t\t\t\t\t\t\t\t{parentNodeList}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"right\"}>\r\n\t\t\t\t\t\t<h3>Node Appearance</h3>\r\n\t\t\t\t\t\t{this.props.node.vertex !== undefined && /* Vertex appearance */\r\n\t\t\t\t\t\t\t<div className={\"node-appearance\"}>\r\n\t\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t\t<h4>Vertex Label</h4>\r\n\t\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Text: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<select name={\"vertexTextType\"} value={this.state.vertexTextType} onChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({vertexCustomText: \"\"}); // Automatically clear \"Custom text\" field\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onFieldChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Word</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Language</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Custom text</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Custom text: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexCustomText\"} value={this.state.vertexCustomText} hint={\"e.g. \\\"Coolest word ever!\\\"\"} onFieldChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({vertexTextType: \"Custom text\"}); // Automatically change type to \"Custom text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onFieldChange(e);\r\n\t\t\t\t\t\t\t\t\t\t\t}} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Font colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexFontColour\"}  value={this.state.vertexFontColour} hint={\"Hexadecimal value (e.g. #000000)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"vertexFontColour\"} value={this.state.vertexFontColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t\t<h4>Vertex Circle</h4>\r\n\t\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Stroke colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexStrokeColour\"}  value={this.state.vertexStrokeColour} hint={\"Hexadecimal value (e.g. #000000)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"vertexStrokeColour\"} value={this.state.vertexStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Fill colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexFillColour\"}  value={this.state.vertexFillColour} hint={\"Hexadecimal value (e.g. #FFFFFF)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"vertexFillColour\"} value={this.state.vertexFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t\t<h4>Edge Line</h4>\r\n\t\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Stroke colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexEdgeStrokeColour\"}  value={this.state.vertexEdgeStrokeColour} hint={\"Hexadecimal value (e.g. #000000)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"vertexEdgeStrokeColour\"} value={this.state.vertexEdgeStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Stroke width: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexEdgeStrokeWidth\"}  value={this.state.vertexEdgeStrokeWidth} hint={\"Pixel value (e.g. 2px)\"} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t\t<h4>Edge Arrowhead</h4>\r\n\t\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Visible?\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type={\"checkbox\"} name={\"vertexArrowheadEnabled\"} checked={this.state.vertexArrowheadEnabled} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Stroke colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexArrowheadStrokeColour\"} value={this.state.vertexArrowheadStrokeColour} hint={\"Hexadecimal value (e.g. #000000)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"vertexArrowheadStrokeColour\"} value={this.state.vertexArrowheadStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Fill colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexArrowheadFillColour\"}  value={this.state.vertexArrowheadFillColour} hint={\"Hexadecimal value (e.g. #000000)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"vertexArrowheadFillColour\"} value={this.state.vertexArrowheadFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{this.props.node.label !== undefined && /* Cognate label appearance */\r\n\t\t\t\t\t\t\t<div className={\"node-appearance\"}>\r\n\t\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t\t<h4>Country/Region</h4>\r\n\t\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Stroke colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"strokeColour\"}  value={this.state.strokeColour} hint={\"Hexadecimal value (e.g. #000000)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"strokeColour\"} value={this.state.strokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Fill colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"fillColour\"}  value={this.state.fillColour} hint={\"Hexadecimal value (e.g. #FFFFFF)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"fillColour\"} value={this.state.fillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t\t<h4>Label</h4>\r\n\t\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Text: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<select name={\"labelType\"} value={this.state.labelType} onChange={this.onFieldChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Word</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Language</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Country/region</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Custom text</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Custom text: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"labelCustomText\"} value={this.state.labelCustomText} hint={\"e.g. \\\"Coolest country ever!\\\"\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Font colour: \"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"labelFontColour\"}  value={this.state.labelFontColour} hint={\"Hexadecimal value (e.g. #000000)\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t\t<ColourPicker name={\"labelFontColour\"} value={this.state.labelFontColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"bottom\"}>\r\n\t\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t\t<Button value={(this.props.isNewWord) ? \"Add Node\" : \"Save Changes\"} onClick={(e) => {\r\n\t\t\t\t\t\t\tif(this.validation())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t// Build node structure to match collection type\r\n\t\t\t\t\t\t\t\tlet updatedNode;\r\n\t\t\t\t\t\t\t\tif(this.props.type === \"journey\")\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tupdatedNode = {\r\n\t\t\t\t\t\t\t\t\t\t...this.props.node,\r\n\t\t\t\t\t\t\t\t\t\tword: this.state.word, language: (this.state.language.charAt(0).toUpperCase() + this.state.language.slice(1)), // Capitalise first letter of language\r\n\t\t\t\t\t\t\t\t\t\tcolour: this.state.colour,\r\n\t\t\t\t\t\t\t\t\t\tvertex: {\r\n\t\t\t\t\t\t\t\t\t\t\t...this.props.node.vertex,\r\n\t\t\t\t\t\t\t\t\t\t\ttype: this.state.vertexTextType,\r\n\t\t\t\t\t\t\t\t\t\t\tcustomText: this.state.vertexCustomText,\r\n\t\t\t\t\t\t\t\t\t\t\tfontColour: this.state.vertexFontColour,\r\n\t\t\t\t\t\t\t\t\t\t\tstrokeColour: this.state.vertexStrokeColour,\r\n\t\t\t\t\t\t\t\t\t\t\tfillColour: this.state.vertexFillColour,\r\n\t\t\t\t\t\t\t\t\t\t\tedgeStrokeColour: this.state.vertexEdgeStrokeColour,\r\n\t\t\t\t\t\t\t\t\t\t\tedgeStrokeWidth: this.state.vertexEdgeStrokeWidth,\r\n\t\t\t\t\t\t\t\t\t\t\tedgeArrowheadEnabled: this.state.vertexArrowheadEnabled,\r\n\t\t\t\t\t\t\t\t\t\t\tedgeArrowheadStrokeColour: this.state.vertexArrowheadStrokeColour,\r\n\t\t\t\t\t\t\t\t\t\t\tedgeArrowheadFillColour: this.state.vertexArrowheadFillColour\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if(this.props.type === \"cognate\")\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tupdatedNode = {\r\n\t\t\t\t\t\t\t\t\t\t...this.props.node,\r\n\t\t\t\t\t\t\t\t\t\tword: this.state.word, language: (this.state.language.charAt(0).toUpperCase() + this.state.language.slice(1)), // Capitalise first letter of language\r\n\t\t\t\t\t\t\t\t\t\tfillColour: this.state.fillColour, strokeColour: this.state.strokeColour,\r\n\t\t\t\t\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\t\t\t\t\t...this.props.node.label,\r\n\t\t\t\t\t\t\t\t\t\t\ttype: this.state.labelType,\r\n\t\t\t\t\t\t\t\t\t\t\tcustomText: this.state.labelCustomText,\r\n\t\t\t\t\t\t\t\t\t\t\tfontColour: this.state.labelFontColour,\r\n\t\t\t\t\t\t\t\t\t\t\tfontSize: this.state.labelFontSize\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tconst newCollectionIndex = (this.state.collectionIndex !== this.props.collectionIndex) ? this.state.collectionIndex : null;\r\n\t\t\t\t\t\t\t\tthis.props.onNodeSubmit(e, this.props.collectionIndex, updatedNode, newCollectionIndex);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}