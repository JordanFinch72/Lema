{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\client\\\\src\\\\components\\\\CommunityMap.jsx\";\nimport React, { Component } from \"react\";\nimport { Meatballs } from \"./controls/Meatballs\";\nimport { Collapser } from \"./controls/Collapser\";\nimport { AddEditCollectionModal } from \"./modals/AddEditCollectionModal\";\nimport { AddEditNodeModal } from \"./modals/AddEditNodeModal\";\nimport { Button } from \"./controls/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class CommunityMap extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-map\",\n      onClick: e => {\n        // TODO: Load the map (equivalent to opening its link)\n        const mapID = this.props.mapID;\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {// TODO: Consider revealing the full title (if clipped)\n        },\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {// TODO: Consider revealing the full description (if clipped)\n        },\n        children: this.props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {// TODO: Search for all maps by this owner\n        },\n        children: this.props.owner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          defaultValue: nodeColour,\n          onChange: e => {\n            // Throttle the onChange; there's no way to have it only change when the user clicks off of it, annoyingly\n            const node = this;\n            window.clearTimeout(changeColourTimeout);\n            changeColourTimeout = window.setTimeout(function () {\n              const updatedNode = { ...node.props.node\n              };\n              if (node.props.type === \"journey\") updatedNode.vertex.fillColour = e.target.value;else if (node.props.type === \"cognate\") updatedNode.fillColour = e.target.value;\n              node.props.editNode(e, node.props.collectionIndex, updatedNode);\n            }, 100);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"X\",\n          id: \"remove-node\",\n          onClick: e => this.props.removeNode(e, this.props.collectionIndex, this.props.node.arrayIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/client/src/components/CommunityMap.jsx"],"names":["React","Component","Meatballs","Collapser","AddEditCollectionModal","AddEditNodeModal","Button","CommunityMap","constructor","props","render","e","mapID","title","description","owner","nodeColour","node","window","clearTimeout","changeColourTimeout","setTimeout","updatedNode","type","vertex","fillColour","target","value","editNode","collectionIndex","removeNode","arrayIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAAQC,sBAAR,QAAqC,iCAArC;AACA,SAAQC,gBAAR,QAA+B,2BAA/B;AACA,SAAQC,MAAR,QAAqB,mBAArB;;AAEA,OAAO,MAAMC,YAAN,SAA2BN,SAA3B,CACP;AACCO,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AACA;;AAEDC,EAAAA,MAAM,GACN;AACC,wBACC;AAAK,MAAA,SAAS,EAAE,eAAhB;AAAiC,MAAA,OAAO,EAAGC,CAAD,IAAO;AAChD;AACA,cAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWG,KAAzB;AACA,OAHD;AAAA,8BAKC;AAAK,QAAA,OAAO,EAAGD,CAAD,IACd,CACC;AACA,SAHD;AAAA,kBAGI,KAAKF,KAAL,CAAWI;AAHf;AAAA;AAAA;AAAA;AAAA,cALD,eASC;AAAK,QAAA,OAAO,EAAGF,CAAD,IACd,CACC;AACA,SAHD;AAAA,kBAGI,KAAKF,KAAL,CAAWK;AAHf;AAAA;AAAA;AAAA;AAAA,cATD,eAaC;AAAK,QAAA,OAAO,EAAGH,CAAD,IACd,CACC;AACA,SAHD;AAAA,kBAGI,KAAKF,KAAL,CAAWM;AAHf;AAAA;AAAA;AAAA;AAAA,cAbD,eAiBC;AAAK,QAAA,SAAS,EAAE,mBAAhB;AAAA,gCACC;AAAO,UAAA,IAAI,EAAE,OAAb;AAAsB,UAAA,YAAY,EAAEC,UAApC;AAAgD,UAAA,QAAQ,EAAGL,CAAD,IAAO;AAChE;AACA,kBAAMM,IAAI,GAAG,IAAb;AACAC,YAAAA,MAAM,CAACC,YAAP,CAAoBC,mBAApB;AACAA,YAAAA,mBAAmB,GAAGF,MAAM,CAACG,UAAP,CAAkB,YACxC;AACC,oBAAMC,WAAW,GAAG,EACnB,GAAGL,IAAI,CAACR,KAAL,CAAWQ;AADK,eAApB;AAGA,kBAAGA,IAAI,CAACR,KAAL,CAAWc,IAAX,KAAoB,SAAvB,EACCD,WAAW,CAACE,MAAZ,CAAmBC,UAAnB,GAAgCd,CAAC,CAACe,MAAF,CAASC,KAAzC,CADD,KAEK,IAAGV,IAAI,CAACR,KAAL,CAAWc,IAAX,KAAoB,SAAvB,EACJD,WAAW,CAACG,UAAZ,GAAyBd,CAAC,CAACe,MAAF,CAASC,KAAlC;AACDV,cAAAA,IAAI,CAACR,KAAL,CAAWmB,QAAX,CAAoBjB,CAApB,EAAuBM,IAAI,CAACR,KAAL,CAAWoB,eAAlC,EAAmDP,WAAnD;AACA,aAVqB,EAUnB,GAVmB,CAAtB;AAWA;AAfD;AAAA;AAAA;AAAA;AAAA,gBADD,eAiBC,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,GAAf;AAAoB,UAAA,EAAE,EAAE,aAAxB;AACQ,UAAA,OAAO,EAAGX,CAAD,IAAO,KAAKF,KAAL,CAAWqB,UAAX,CAAsBnB,CAAtB,EAAyB,KAAKF,KAAL,CAAWoB,eAApC,EAAqD,KAAKpB,KAAL,CAAWQ,IAAX,CAAgBc,UAArE;AADxB;AAAA;AAAA;AAAA;AAAA,gBAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAwCA;;AAhDF","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Meatballs} from \"./controls/Meatballs\";\r\nimport {Collapser} from \"./controls/Collapser\";\r\nimport {AddEditCollectionModal} from \"./modals/AddEditCollectionModal\";\r\nimport {AddEditNodeModal} from \"./modals/AddEditNodeModal\";\r\nimport {Button} from \"./controls/Button\";\r\n\r\nexport class CommunityMap extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn (\r\n\t\t\t<div className={\"community-map\"} onClick={(e) => {\r\n\t\t\t\t// TODO: Load the map (equivalent to opening its link)\r\n\t\t\t\tconst mapID = this.props.mapID;\r\n\t\t\t}}>\r\n\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO: Consider revealing the full title (if clipped)\r\n\t\t\t\t}}>{this.props.title}</div>\r\n\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO: Consider revealing the full description (if clipped)\r\n\t\t\t\t}}>{this.props.description}</div>\r\n\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO: Search for all maps by this owner\r\n\t\t\t\t}}>{this.props.owner}</div>\r\n\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t<input type={\"color\"} defaultValue={nodeColour} onChange={(e) => {\r\n\t\t\t\t\t\t// Throttle the onChange; there's no way to have it only change when the user clicks off of it, annoyingly\r\n\t\t\t\t\t\tconst node = this;\r\n\t\t\t\t\t\twindow.clearTimeout(changeColourTimeout);\r\n\t\t\t\t\t\tchangeColourTimeout = window.setTimeout(function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tconst updatedNode = {\r\n\t\t\t\t\t\t\t\t...node.props.node\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tif(node.props.type === \"journey\")\r\n\t\t\t\t\t\t\t\tupdatedNode.vertex.fillColour = e.target.value;\r\n\t\t\t\t\t\t\telse if(node.props.type === \"cognate\")\r\n\t\t\t\t\t\t\t\tupdatedNode.fillColour = e.target.value;\r\n\t\t\t\t\t\t\tnode.props.editNode(e, node.props.collectionIndex, updatedNode);\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button value={\"X\"} id={\"remove-node\"}\r\n\t\t\t\t\t        onClick={(e) => this.props.removeNode(e, this.props.collectionIndex, this.props.node.arrayIndex)}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}