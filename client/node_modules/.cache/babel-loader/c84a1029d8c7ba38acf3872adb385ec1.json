{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\client\\\\src\\\\components\\\\controls\\\\RadioGroup.jsx\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RadioButton extends Component {\n  constructor(props) {\n    super(props);\n    this.onRadioButtonClick = this.props.onRadioButtonClick.bind(this);\n  }\n\n  render() {\n    // TODO: There's a better way to do this by having the radio button reflect the value of the state. Do it later; not a priority\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: this.props.name + this.props.id,\n        name: this.props.name,\n        value: this.props.label,\n        checked: this.props.active,\n        onChange: e => {\n          this.props.onRadioButtonClick(e, this.props.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: this.props.name + this.props.id,\n        children: this.props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport class RadioGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.onRadioButtonClick = this.props.onRadioButtonClick.bind(this);\n  }\n\n  render() {\n    const buttonElements = this.props.buttons.map((button, index) => {\n      return /*#__PURE__*/_jsxDEV(RadioButton, {\n        active: button.active,\n        label: button.label,\n        name: this.props.name,\n        id: index,\n        onRadioButtonClick: (e, id) => {\n          this.onRadioButtonClick(e, {\n            state: this.state,\n            id: id\n          }); // External handler call\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radio-group\",\n      children: buttonElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/client/src/components/controls/RadioGroup.jsx"],"names":["Component","RadioButton","constructor","props","onRadioButtonClick","bind","render","name","id","label","active","e","RadioGroup","state","buttonElements","buttons","map","button","index"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;;;AAEA,MAAMC,WAAN,SAA0BD,SAA1B,CACA;AACCE,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AACA,SAAKC,kBAAL,GAA0B,KAAKD,KAAL,CAAWC,kBAAX,CAA8BC,IAA9B,CAAmC,IAAnC,CAA1B;AACA;;AAEDC,EAAAA,MAAM,GACN;AACC;AACA,wBACC;AAAK,MAAA,SAAS,EAAE,cAAhB;AAAA,8BACC;AAAO,QAAA,IAAI,EAAE,OAAb;AAAsB,QAAA,EAAE,EAAE,KAAKH,KAAL,CAAWI,IAAX,GAAkB,KAAKJ,KAAL,CAAWK,EAAvD;AAA2D,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWI,IAA5E;AAAkF,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,KAApG;AACO,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,MAD3B;AACmC,QAAA,QAAQ,EAAGC,CAAD,IAAO;AAAC,eAAKR,KAAL,CAAWC,kBAAX,CAA8BO,CAA9B,EAAiC,KAAKR,KAAL,CAAWK,EAA5C;AAAgD;AADrG;AAAA;AAAA;AAAA;AAAA,cADD,eAGC;AAAO,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWI,IAAX,GAAkB,KAAKJ,KAAL,CAAWK,EAA7C;AAAA,kBAAkD,KAAKL,KAAL,CAAWM;AAA7D;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAOA;;AAjBF;;AAoBA,OAAO,MAAMG,UAAN,SAAyBZ,SAAzB,CACP;AACCE,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AACA,SAAKU,KAAL,GAAa,EAAb;AAGA,SAAKT,kBAAL,GAA0B,KAAKD,KAAL,CAAWC,kBAAX,CAA8BC,IAA9B,CAAmC,IAAnC,CAA1B;AACA;;AAEDC,EAAAA,MAAM,GACN;AACC,UAAMQ,cAAc,GAAG,KAAKX,KAAL,CAAWY,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,KAC9C;AACC,0BAAO,QAAC,WAAD;AAAa,QAAA,MAAM,EAAED,MAAM,CAACP,MAA5B;AAAoC,QAAA,KAAK,EAAEO,MAAM,CAACR,KAAlD;AAAyD,QAAA,IAAI,EAAE,KAAKN,KAAL,CAAWI,IAA1E;AAAgF,QAAA,EAAE,EAAEW,KAApF;AACa,QAAA,kBAAkB,EAAE,CAACP,CAAD,EAAIH,EAAJ,KAAW;AAC7C,eAAKJ,kBAAL,CAAwBO,CAAxB,EAA2B;AAACE,YAAAA,KAAK,EAAE,KAAKA,KAAb;AAAoBL,YAAAA,EAAE,EAAEA;AAAxB,WAA3B,EAD6C,CACY;AACzD;AAHC,SAGMU,KAHN;AAAA;AAAA;AAAA;AAAA,cAAP;AAIA,KANsB,CAAvB;AAQA,wBACC;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA,gBACEJ;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAzBF","sourcesContent":["import {Component} from \"react\";\r\n\r\nclass RadioButton extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.onRadioButtonClick = this.props.onRadioButtonClick.bind(this);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// TODO: There's a better way to do this by having the radio button reflect the value of the state. Do it later; not a priority\r\n\t\treturn (\r\n\t\t\t<div className={\"radio-button\"}>\r\n\t\t\t\t<input type={\"radio\"} id={this.props.name + this.props.id} name={this.props.name} value={this.props.label}\r\n\t\t\t\t       checked={this.props.active} onChange={(e) => {this.props.onRadioButtonClick(e, this.props.id)}}/>\r\n\t\t\t\t<label htmlFor={this.props.name + this.props.id}>{this.props.label}</label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class RadioGroup extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t};\r\n\r\n\t\tthis.onRadioButtonClick = this.props.onRadioButtonClick.bind(this);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst buttonElements = this.props.buttons.map((button, index) =>\r\n\t\t{\r\n\t\t\treturn <RadioButton active={button.active} label={button.label} name={this.props.name} id={index}\r\n\t\t\t                    onRadioButtonClick={(e, id) => {\r\n\t\t\t\t\t\t\t\t\tthis.onRadioButtonClick(e, {state: this.state, id: id}); // External handler call\r\n\t\t\t\t\t\t\t\t}} key={index}/>;\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"radio-group\"}>\r\n\t\t\t\t{buttonElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}