{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\Lema.js\";\nimport \"./css/Lema.css\";\nimport { Component } from \"react\";\nimport { Banner } from \"./components/Banner\";\nimport { LeftBar } from \"./components/LeftBar\";\nimport { Map } from \"./components/Map\";\nimport { AddEditCollectionModal } from \"./components/AddEditCollectionModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Lema extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeModal: null,\n      // Either null or a React component\n      activeContextMenu: null,\n      // Either null or a React component\n      items: [{\n        // TODO: Dummy data\n        type: \"journey\",\n        header: {\n          word: \"horse\",\n          language: \"English (UK)\"\n        },\n        childNodes: [{\n          word: \"kers\",\n          language: \"Proto-Indo-European\",\n          colour: \"orange\"\n        }, {\n          word: \"krsos\",\n          language: \"Proto-Indo-European\",\n          colour: \"orange\"\n        }, {\n          word: \"hrussa\",\n          language: \"Proto-Germanic\",\n          colour: \"orange\"\n        }, {\n          word: \"hross\",\n          language: \"Proto-West-Germanic\",\n          colour: \"orange\"\n        }, {\n          word: \"horse\",\n          language: \"English\",\n          colour: \"orange\"\n        }]\n      }]\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.openContextMenu = this.openContextMenu.bind(this);\n    this.closeContextMenu = this.closeContextMenu.bind(this);\n  }\n\n  openModal(e, modalComponent) {\n    this.setState({\n      activeModal: modalComponent\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openContextMenu(e, menuComponent) {\n    this.setState({\n      activeContextMenu: menuComponent\n    });\n  }\n\n  closeContextMenu() {\n    this.setState({\n      activeContextMenu: null\n    });\n  }\n\n  render() {\n    let modalContainer = null,\n        contextMenuContainer = null;\n\n    if (this.state.activeModal !== null) {\n      let activeModal = this.state.activeModal;\n      modalContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        onClick: e => {\n          if (e.nativeEvent.target.className === \"modal-container\") this.closeModal(); // Closes modal if they click off the modal\n        },\n        children: activeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.state.activeContextMenu !== null) {\n      let activeContextMenu = this.state.activeContextMenu;\n      contextMenuContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"context-menu-container\",\n        onClick: this.closeContextMenu,\n        children: activeContextMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this);\n    }\n\n    let tempItems = [{\n      type: \"journey\",\n      header: {\n        word: \"horse\",\n        language: \"English (UK)\"\n      },\n      childNodes: [{\n        word: \"kers\",\n        language: \"Proto-Indo-European\",\n        colour: \"orange\"\n      }, {\n        word: \"krsos\",\n        language: \"Proto-Indo-European\",\n        colour: \"orange\"\n      }, {\n        word: \"hrussa\",\n        language: \"Proto-Germanic\",\n        colour: \"orange\"\n      }, {\n        word: \"hross\",\n        language: \"Proto-West-Germanic\",\n        colour: \"orange\"\n      }, {\n        word: \"horse\",\n        language: \"English\",\n        colour: \"orange\"\n      }]\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Lema\",\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-view-container\",\n        children: [/*#__PURE__*/_jsxDEV(LeftBar, {\n          items: this.state.items,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          openContextMenu: this.openContextMenu,\n          closeContextMenu: this.closeContextMenu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          items: tempItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), modalContainer, contextMenuContainer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Lema;","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/Lema.js"],"names":["Component","Banner","LeftBar","Map","AddEditCollectionModal","Lema","constructor","props","state","activeModal","activeContextMenu","items","type","header","word","language","childNodes","colour","openModal","bind","closeModal","openContextMenu","closeContextMenu","e","modalComponent","setState","menuComponent","render","modalContainer","contextMenuContainer","nativeEvent","target","className","tempItems"],"mappings":"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","sourcesContent":["import \"./css/Lema.css\";\nimport {Component} from \"react\";\nimport {Banner} from \"./components/Banner\";\nimport {LeftBar} from \"./components/LeftBar\";\nimport {Map} from \"./components/Map\";\nimport {AddEditCollectionModal} from \"./components/AddEditCollectionModal\";\n\nclass Lema extends Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactiveModal: null, // Either null or a React component\n\t\t\tactiveContextMenu: null, // Either null or a React component\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\t// TODO: Dummy data\n\t\t\t\t\ttype: \"journey\",\n\t\t\t\t\theader: {word: \"horse\", language: \"English (UK)\"},\n\t\t\t\t\tchildNodes: [\n\t\t\t\t\t\t{word: \"kers\", language: \"Proto-Indo-European\", colour: \"orange\"},\n\t\t\t\t\t\t{word: \"krsos\", language: \"Proto-Indo-European\", colour: \"orange\"},\n\t\t\t\t\t\t{word: \"hrussa\", language: \"Proto-Germanic\", colour: \"orange\"},\n\t\t\t\t\t\t{word: \"hross\", language: \"Proto-West-Germanic\", colour: \"orange\"},\n\t\t\t\t\t\t{word: \"horse\", language: \"English\", colour: \"orange\"}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\tthis.openModal = this.openModal.bind(this);\n\t\tthis.closeModal = this.closeModal.bind(this);\n\t\tthis.openContextMenu = this.openContextMenu.bind(this);\n\t\tthis.closeContextMenu = this.closeContextMenu.bind(this);\n\t}\n\n\topenModal(e, modalComponent)\n\t{\n\t\tthis.setState({\n\t\t\tactiveModal: modalComponent\n\t\t});\n\t}\n\tcloseModal()\n\t{\n\t\tthis.setState({\n\t\t\tactiveModal: null\n\t\t});\n\t}\n\topenContextMenu(e, menuComponent)\n\t{\n\t\tthis.setState({\n\t\t\tactiveContextMenu: menuComponent\n\t\t});\n\t}\n\tcloseContextMenu()\n\t{\n\t\tthis.setState({\n\t\t\tactiveContextMenu: null\n\t\t});\n\t}\n\n\trender()\n\t{\n\t\tlet modalContainer = null, contextMenuContainer = null;\n\t\tif(this.state.activeModal !== null)\n\t\t{\n\t\t\tlet activeModal = this.state.activeModal;\n\t\t\tmodalContainer = <div className={\"modal-container\"} onClick={(e) =>\n\t\t\t{\n\t\t\t\tif(e.nativeEvent.target.className === \"modal-container\") this.closeModal(); // Closes modal if they click off the modal\n\t\t\t}}>{activeModal}</div>;\n\t\t}\n\t\tif(this.state.activeContextMenu !== null)\n\t\t{\n\t\t\tlet activeContextMenu = this.state.activeContextMenu;\n\t\t\tcontextMenuContainer =\n\t\t\t\t<div className={\"context-menu-container\"} onClick={this.closeContextMenu}>{activeContextMenu}</div>;\n\t\t}\n\n\t\tlet tempItems = [\n\t\t\t{\n\t\t\t\ttype: \"journey\",\n\t\t\t\theader: {word: \"horse\", language: \"English (UK)\"},\n\t\t\t\tchildNodes: [\n\t\t\t\t\t{word: \"kers\", language: \"Proto-Indo-European\", colour: \"orange\"},\n\t\t\t\t\t{word: \"krsos\", language: \"Proto-Indo-European\", colour: \"orange\"},\n\t\t\t\t\t{word: \"hrussa\", language: \"Proto-Germanic\", colour: \"orange\"},\n\t\t\t\t\t{word: \"hross\", language: \"Proto-West-Germanic\", colour: \"orange\"},\n\t\t\t\t\t{word: \"horse\", language: \"English\", colour: \"orange\"}\n\t\t\t\t]\n\t\t\t}\n\t\t];\n\n\t\treturn (\n\t\t\t<div className=\"Lema\">\n\t\t\t\t<Banner/>\n\t\t\t\t<div className={\"main-view-container\"}>\n\t\t\t\t\t<LeftBar items={this.state.items}\n\t\t\t\t\t         openModal={this.openModal} closeModal={this.closeModal}\n\t\t\t\t\t         openContextMenu={this.openContextMenu} closeContextMenu={this.closeContextMenu}/>\n\t\t\t\t\t<Map items={tempItems}/>\n\t\t\t\t</div>\n\t\t\t\t{modalContainer}\n\t\t\t\t{contextMenuContainer}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Lema;\n"]},"metadata":{},"sourceType":"module"}