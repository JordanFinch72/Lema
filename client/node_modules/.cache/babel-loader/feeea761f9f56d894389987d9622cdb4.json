{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Journey.jsx\";\nimport { Component } from \"react\";\nimport { Meatballs } from \"./Meatballs\";\nimport { Collapser } from \"./Collapser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JourneyNode extends Component {\n  constructor(props) {\n    super(props);\n    this.onNodeColourClick = this.props.onNodeColourClick.bind(this);\n  }\n\n  render() {\n    let nodeColour = this.props.node.colour || \"red\"; // TODO: Advanced logic for determining next unused colour (per journey)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"journey-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.node.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.node.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-colour\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: nodeColour\n          },\n          onClick: e => this.onNodeColourClick(e, this.props.node),\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport class Journey extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      header: this.props.header || {},\n      childNodes: this.props.childNodes || [],\n      collapsed: false\n    };\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.onNodeColourClick = this.onNodeColourClick.bind(this);\n  }\n\n  toggleCollapse(e) {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n    let childNodeElements = [];\n\n    if (!this.state.collapsed) {\n      this.state.childNodes.map((childNode, index) => {\n        childNodeElements.push( /*#__PURE__*/_jsxDEV(JourneyNode, {\n          node: childNode,\n          onNodeColourClick: this.onNodeColourClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 28\n        }, this));\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"journey-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"journey-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.header.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.header.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meatball-collapser-container\",\n          children: [/*#__PURE__*/_jsxDEV(Meatballs, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Collapser, {\n            toggleCollapse: this.toggleCollapse,\n            collapsed: this.state.collapsed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), childNodeElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Journey.jsx"],"names":["Component","Meatballs","Collapser","JourneyNode","constructor","props","onNodeColourClick","bind","render","nodeColour","node","colour","word","language","backgroundColor","e","Journey","state","header","childNodes","collapsed","toggleCollapse","setState","childNodeElements","map","childNode","index","push"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Meatballs} from \"./Meatballs\";\r\nimport {Collapser} from \"./Collapser\";\r\n\r\nclass JourneyNode extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onNodeColourClick = this.props.onNodeColourClick.bind(this);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tlet nodeColour = this.props.node.colour || \"red\"; // TODO: Advanced logic for determining next unused colour (per journey)\r\n\r\n\t\treturn(\r\n\t\t\t<div className={\"journey-node\"}>\r\n\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t<div>{this.props.node.word}</div>\r\n\t\t\t\t<div>{this.props.node.language}</div>\r\n\t\t\t\t<div className={\"node-colour\"} >\r\n\t\t\t\t\t<div style={{backgroundColor: nodeColour}} onClick={(e) => this.onNodeColourClick(e, this.props.node)}> </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class Journey extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\theader: this.props.header || {},\r\n\t\t\tchildNodes: this.props.childNodes || [],\r\n\t\t\tcollapsed: false\r\n\t\t};\r\n\r\n\t\tthis.toggleCollapse = this.toggleCollapse.bind(this);\r\n\t\tthis.onNodeColourClick = this.onNodeColourClick.bind(this);\r\n\t}\r\n\r\n\ttoggleCollapse(e)\r\n\t{\r\n\t\tthis.setState({collapsed: !this.state.collapsed});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tlet childNodeElements = [];\r\n\r\n\t\tif(!this.state.collapsed)\r\n\t\t{\r\n\t\t\tthis.state.childNodes.map((childNode, index) => {\r\n\t\t\t\tchildNodeElements.push(<JourneyNode node={childNode} key={index} onNodeColourClick={this.onNodeColourClick} />);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<div className={\"journey-container\"}>\r\n\t\t\t\t<div className={\"journey-header\"}>\r\n\t\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t\t<div>{this.state.header.word}</div>\r\n\t\t\t\t\t<div>{this.state.header.language}</div>\r\n\t\t\t\t\t<div className={\"meatball-collapser-container\"}>\r\n\t\t\t\t\t\t<Meatballs />\r\n\t\t\t\t\t\t<Collapser toggleCollapse={this.toggleCollapse} collapsed={this.state.collapsed} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{childNodeElements}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}