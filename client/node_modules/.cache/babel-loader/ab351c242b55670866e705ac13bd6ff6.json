{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\client\\\\src\\\\components\\\\CollectionArea.jsx\";\nimport { Component } from \"react\";\nimport { Collection } from \"./Collection\";\nimport { Button } from \"./controls/Button\";\nimport { AddEditCollectionModal } from \"./modals/AddEditCollectionModal\";\nimport { AddEditNodeModal } from \"./modals/AddEditNodeModal\";\nimport { CommunityMap } from \"./CommunityMap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class CollectionArea extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showcaseMaps: []\n    };\n    /* Click, event handlers */\n\n    this.cAddNode = this.cAddNode.bind(this);\n    this.cAddNodeDefault = this.cAddNodeDefault.bind(this);\n    this.cRemoveCollection = this.cRemoveCollection.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.isShowcaseMode) {\n      axios.get(`/maps/1`).then(response => {\n        if (this.handleResponse(response, \"Maps retrieved.\", null)) {\n          this.setState({\n            showcaseMaps: response.data.maps\n          });\n        }\n      });\n    }\n  }\n  /* Context menu item handlers */\n\n\n  cAddNode(e, data) {\n    // Open the AddEditNodeModal with initial node data\n    const node = {\n      word: \"\",\n      language: \"\",\n      parents: []\n    };\n    if (data.type === \"journey\") node.vertex = {\n      type: \"word\",\n      customText: \"\",\n      fontColour: \"#000000\",\n      strokeColour: \"#000000\",\n      fillColour: \"#FFFFFF\",\n      radius: null,\n      fontSize: null,\n      x: null,\n      y: null,\n      edgeStart: \"centre\",\n      edgeEnd: \"centre\",\n      edgeStrokeColour: \"#000000\",\n      edgeStrokeWidth: \"2px\",\n      edgeArrowheadEnabled: true,\n      edgeArrowheadStrokeColour: \"#000000\",\n      edgeArrowheadFillColour: \"#000000\"\n    };\n\n    if (data.type === \"cognate\") {\n      node.fillColour = \"#FF0000\";\n      node.strokeColour = \"#000000\";\n      node.label = {\n        type: \"word\",\n        customText: \"\",\n        fontColour: \"#000000\",\n        fontSize: null,\n        x: null,\n        y: null\n      };\n    }\n\n    this.props.openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n      isNewWord: true,\n      words: data.words,\n      node: node,\n      type: data.type,\n      onNodeSubmit: this.props.addNode,\n      collectionIndex: data.collectionIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this));\n  }\n\n  cAddNodeDefault(e, data) {\n    // Add node with initial node data\n    const node = {\n      word: \"New Word\",\n      language: \"Proto-Indo-European\",\n      parents: []\n    };\n    if (data.type === \"journey\") node.vertex = {\n      type: \"word\",\n      customText: \"\",\n      fontColour: \"#000000\",\n      strokeColour: \"#000000\",\n      fillColour: \"#FFFFFF\",\n      radius: null,\n      fontSize: null,\n      x: null,\n      y: null,\n      edgeStart: \"centre\",\n      edgeEnd: \"centre\",\n      edgeStrokeColour: \"#000000\",\n      edgeStrokeWidth: \"2px\",\n      edgeArrowheadEnabled: true,\n      edgeArrowheadStrokeColour: \"#000000\",\n      edgeArrowheadFillColour: \"#000000\"\n    };\n\n    if (data.type === \"cognate\") {\n      node.strokeColour = \"#000000\";\n      node.fillColour = \"#FF0000\";\n      node.label = {\n        type: \"language\",\n        customText: \"\",\n        fontColour: \"#000000\",\n        fontSize: null,\n        x: null,\n        y: null\n      };\n    }\n\n    this.props.addNode(e, data.collectionIndex, node);\n  }\n\n  cRemoveCollection(e, collectionIndex) {\n    this.props.removeCollection(e, collectionIndex);\n  }\n\n  render() {\n    let journeys,\n        cognates,\n        header,\n        output = [];\n    const journeyCollections = [],\n          cognateCollections = [],\n          showcaseMaps = [];\n\n    if (this.props.isShowcaseMode) {\n      // Collection area header\n      header = /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Shared Maps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this); // Add maps header to array\n\n      showcaseMaps.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcase-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showcase-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => {// TODO: Sort by title\n            },\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => {// TODO: Sort by description, I guess\n            },\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: e => {// TODO: Sort by... owner?\n            },\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)); // Build list of shared maps\n\n      console.log(this.state.showcaseMaps);\n      this.state.showcaseMaps.map((map, index) => {\n        if (typeof map !== \"undefined\") {\n          console.log(map);\n          const [mapID, title, description, owner] = map.activeMap;\n          showcaseMaps.push( /*#__PURE__*/_jsxDEV(CommunityMap, {\n            mapID: mapID,\n            title: title,\n            description: description,\n            owner: owner\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 24\n          }, this));\n        }\n      });\n      output = showcaseMaps;\n    } else {\n      // Build header\n      const headerText = this.props.activeMap ? this.props.activeMap.title : \"Collection Area\";\n      const mapID = this.props.activeMap ? this.props.activeMap.mapID !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: [\" Attached to profile (ID: \", this.props.activeMap.mapID, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"id\",\n        children: \" Loaded from file or link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 6\n      }, this) : \"\";\n      header = /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [headerText, mapID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this);\n      this.props.collections.map((collection, index) => {\n        if (typeof collection !== \"undefined\") {\n          const component = /*#__PURE__*/_jsxDEV(Collection, {\n            collections: this.props.collections,\n            index: index,\n            type: collection.type,\n            header: collection.header,\n            openModal: this.props.openModal,\n            words: collection.words,\n            editCollection: this.props.editCollection,\n            openContextMenu: this.props.openContextMenu,\n            closeContextMenu: this.props.closeContextMenu,\n            cAddNode: this.cAddNode,\n            cAddNodeDefault: this.cAddNodeDefault,\n            cRemoveCollection: this.cRemoveCollection,\n            addNode: this.props.addNode,\n            editNode: this.props.editNode,\n            removeNode: this.props.removeNode\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 24\n          }, this);\n\n          if (collection.type === \"journey\") journeyCollections.push(component);else if (collection.type === \"cognate\") cognateCollections.push(component);\n        }\n      });\n      journeys = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Journeys\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            value: \"+\",\n            id: \"manual-add\",\n            style: {\n              alignSelf: \"end\"\n            },\n            onClick: e => {\n              this.props.openModal(e, /*#__PURE__*/_jsxDEV(AddEditCollectionModal, {\n                onCollectionSubmit: this.props.addCollection\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 40\n              }, this));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }, this), journeyCollections]\n      }, void 0, true);\n      cognates = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Cognates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            value: \"+\",\n            id: \"manual-add\",\n            style: {\n              alignSelf: \"end\"\n            },\n            onClick: e => {\n              if (this.props.collections) this.props.openModal(e, /*#__PURE__*/_jsxDEV(AddEditCollectionModal, {\n                onCollectionSubmit: this.props.addCollection,\n                type: \"cognate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 41\n              }, this));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this), cognateCollections]\n      }, void 0, true);\n      output.push(journeys);\n      output.push(cognates);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collections-container\",\n      children: [header, output]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/client/src/components/CollectionArea.jsx"],"names":["Component","Collection","Button","AddEditCollectionModal","AddEditNodeModal","CommunityMap","axios","CollectionArea","constructor","props","state","showcaseMaps","cAddNode","bind","cAddNodeDefault","cRemoveCollection","componentDidMount","isShowcaseMode","get","then","response","handleResponse","setState","data","maps","e","node","word","language","parents","type","vertex","customText","fontColour","strokeColour","fillColour","radius","fontSize","x","y","edgeStart","edgeEnd","edgeStrokeColour","edgeStrokeWidth","edgeArrowheadEnabled","edgeArrowheadStrokeColour","edgeArrowheadFillColour","label","openModal","words","addNode","collectionIndex","removeCollection","render","journeys","cognates","header","output","journeyCollections","cognateCollections","push","console","log","map","index","mapID","title","description","owner","activeMap","headerText","collections","collection","component","editCollection","openContextMenu","closeContextMenu","editNode","removeNode","alignSelf","addCollection"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Collection} from \"./Collection\";\r\nimport {Button} from \"./controls/Button\";\r\nimport {AddEditCollectionModal} from \"./modals/AddEditCollectionModal\";\r\nimport {AddEditNodeModal} from \"./modals/AddEditNodeModal\";\r\nimport {CommunityMap} from \"./CommunityMap\";\r\nimport axios from \"axios\";\r\n\r\nexport class CollectionArea extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowcaseMaps: []\r\n\t\t};\r\n\r\n\t\t/* Click, event handlers */\r\n\t\tthis.cAddNode = this.cAddNode.bind(this);\r\n\t\tthis.cAddNodeDefault = this.cAddNodeDefault.bind(this);\r\n\t\tthis.cRemoveCollection = this.cRemoveCollection.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tif(this.props.isShowcaseMode)\r\n\t\t{\r\n\t\t\taxios.get(`/maps/1`).then((response) => {\r\n\t\t\t\tif(this.handleResponse(response, \"Maps retrieved.\", null))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.setState({showcaseMaps: response.data.maps})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/* Context menu item handlers */\r\n\tcAddNode(e, data)\r\n\t{\r\n\t\t// Open the AddEditNodeModal with initial node data\r\n\t\tconst node = {word: \"\", language: \"\", parents: []};\r\n\t\tif(data.type === \"journey\")\r\n\t\t\tnode.vertex = {type: \"word\", customText: \"\", fontColour: \"#000000\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, fontSize: null, x: null, y: null, edgeStart: \"centre\", edgeEnd: \"centre\", edgeStrokeColour: \"#000000\", edgeStrokeWidth: \"2px\", edgeArrowheadEnabled: true, edgeArrowheadStrokeColour: \"#000000\", edgeArrowheadFillColour: \"#000000\"};\r\n\t\tif(data.type === \"cognate\")\r\n\t\t{\r\n\t\t\tnode.fillColour = \"#FF0000\"; node.strokeColour = \"#000000\";\r\n\t\t\tnode.label = {type: \"word\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null};\r\n\t\t}\r\n\t\tthis.props.openModal(e, <AddEditNodeModal isNewWord={true} words={data.words} node={node} type={data.type} onNodeSubmit={this.props.addNode} collectionIndex={data.collectionIndex}/>);\r\n\t}\r\n\tcAddNodeDefault(e, data)\r\n\t{\r\n\t\t// Add node with initial node data\r\n\t\tconst node = {word: \"New Word\", language: \"Proto-Indo-European\", parents: []};\r\n\t\tif(data.type === \"journey\")\r\n\t\t\tnode.vertex = {type: \"word\", customText: \"\", fontColour: \"#000000\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, fontSize: null, x: null, y: null, edgeStart: \"centre\", edgeEnd: \"centre\", edgeStrokeColour: \"#000000\", edgeStrokeWidth: \"2px\", edgeArrowheadEnabled: true, edgeArrowheadStrokeColour: \"#000000\", edgeArrowheadFillColour: \"#000000\"};\r\n\t\tif(data.type === \"cognate\")\r\n\t\t{\r\n\t\t\tnode.strokeColour = \"#000000\";\r\n\t\t\tnode.fillColour = \"#FF0000\";\r\n\t\t\tnode.label = {type: \"language\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null};\r\n\t\t}\r\n\r\n\t\tthis.props.addNode(e, data.collectionIndex, node);\r\n\t}\r\n\tcRemoveCollection(e, collectionIndex)\r\n\t{\r\n\t\tthis.props.removeCollection(e, collectionIndex);\r\n\t}\r\n\r\n\r\n\trender()\r\n\t{\r\n\t\tlet journeys, cognates, header, output = [];\r\n\t\tconst journeyCollections = [], cognateCollections = [], showcaseMaps = [];\r\n\r\n\t\tif(this.props.isShowcaseMode)\r\n\t\t{\r\n\t\t\t// Collection area header\r\n\t\t\theader = <h3>Shared Maps</h3>;\r\n\r\n\t\t\t// Add maps header to array\r\n\t\t\tshowcaseMaps.push(\r\n\t\t\t\t<div className={\"showcase-container\"}>\r\n\t\t\t\t\t<div className={\"showcase-header\"}>\r\n\t\t\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// TODO: Sort by title\r\n\t\t\t\t\t\t}}>Title</div>\r\n\t\t\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// TODO: Sort by description, I guess\r\n\t\t\t\t\t\t}}>Description</div>\r\n\t\t\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// TODO: Sort by... owner?\r\n\t\t\t\t\t\t}}>Owner</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\t// Build list of shared maps\r\n\t\t\tconsole.log(this.state.showcaseMaps);\r\n\t\t\tthis.state.showcaseMaps.map((map, index) =>\r\n\t\t\t{\r\n\t\t\t\tif(typeof map !== \"undefined\")\r\n\t\t\t\t{\r\n\t\t\t\t\tconsole.log(map);\r\n\t\t\t\t\tconst [mapID, title, description, owner] = map.activeMap;\r\n\t\t\t\t\tshowcaseMaps.push(<CommunityMap key={index} mapID={mapID} title={title} description={description} owner={owner} />);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\toutput = showcaseMaps;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Build header\r\n\t\t\tconst headerText = (this.props.activeMap) ? this.props.activeMap.title : \"Collection Area\";\r\n\t\t\tconst mapID = (this.props.activeMap) ?\r\n\t\t\t\t(this.props.activeMap.mapID !== null) ?\r\n\t\t\t\t\t<div className={\"id\"}> Attached to profile (ID: {this.props.activeMap.mapID})</div> :\r\n\t\t\t\t\t<div className={\"id\"}> Loaded from file or link</div>\r\n\t\t\t\t: \"\";\r\n\t\t\theader = <h3>{headerText}{mapID}</h3>;\r\n\r\n\t\t\tthis.props.collections.map((collection, index) =>\r\n\t\t\t{\r\n\t\t\t\tif(typeof collection !== \"undefined\")\r\n\t\t\t\t{\r\n\t\t\t\t\tconst component = <Collection\r\n\t\t\t\t\t\tcollections={this.props.collections}\r\n\t\t\t\t\t\tkey={index} index={index} type={collection.type} header={collection.header} openModal={this.props.openModal}\r\n\t\t\t\t\t\twords={collection.words} editCollection={this.props.editCollection}\r\n\t\t\t\t\t\topenContextMenu={this.props.openContextMenu} closeContextMenu={this.props.closeContextMenu}\r\n\t\t\t\t\t\tcAddNode={this.cAddNode} cAddNodeDefault={this.cAddNodeDefault} cRemoveCollection={this.cRemoveCollection}\r\n\t\t\t\t\t\taddNode={this.props.addNode} editNode={this.props.editNode} removeNode={this.props.removeNode}\r\n\t\t\t\t\t/>;\r\n\t\t\t\t\tif(collection.type === \"journey\")\r\n\t\t\t\t\t\tjourneyCollections.push(component);\r\n\t\t\t\t\telse if(collection.type === \"cognate\")\r\n\t\t\t\t\t\tcognateCollections.push(component);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tjourneys =\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={\"header-container\"}>\r\n\t\t\t\t\t\t<h4>Journeys</h4>\r\n\t\t\t\t\t\t<Button value={\"+\"} id={\"manual-add\"} style={{alignSelf: \"end\"}}\r\n\t\t\t\t\t\t        onClick={(e) => {\r\n\t\t\t\t\t\t\t        this.props.openModal(e, <AddEditCollectionModal onCollectionSubmit={this.props.addCollection}/>);\r\n\t\t\t\t\t\t        }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{journeyCollections}\r\n\t\t\t\t</>;\r\n\t\t\tcognates =\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={\"header-container\"}>\r\n\t\t\t\t\t\t<h4>Cognates</h4>\r\n\t\t\t\t\t\t<Button value={\"+\"} id={\"manual-add\"} style={{alignSelf: \"end\"}}\r\n\t\t\t\t\t\t        onClick={(e) => {\r\n\t\t\t\t\t\t\t        if(this.props.collections)\r\n\t\t\t\t\t\t\t\t        this.props.openModal(e, <AddEditCollectionModal onCollectionSubmit={this.props.addCollection} type={\"cognate\"}/>);\r\n\t\t\t\t\t\t        }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{cognateCollections}\r\n\t\t\t\t</>;\r\n\r\n\t\t\toutput.push(journeys); output.push(cognates);\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"collections-container\"}>\r\n\t\t\t\t{header}\r\n\t\t\t\t{output}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}