{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\client\\\\src\\\\components\\\\modals\\\\SaveModal.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"../controls/Textbox\";\nimport { Button } from \"../controls/Button\";\nimport { LabeledControl } from \"../controls/LabeledControl\";\nimport { AddEditCollectionModal } from \"./AddEditCollectionModal\";\nimport { Meatballs } from \"../controls/Meatballs\";\nimport { Collapser } from \"../controls/Collapser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MapItem extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"LOAD\",\n        onClick: e => {\n          console.log(this.props._id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport class SaveModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loadedMaps: []\n    };\n    this.onFieldChange = this.onFieldChange.bind(this);\n  }\n\n  onFieldChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n  /**\r\n   * Validates file upload.\r\n   * @returns {boolean}\r\n   */\n\n\n  validate() {\n    let errorCollector = \"\";\n    if (this.state.title === \"\") errorCollector += \"Maps must have a title.\\n\";\n    if (!this.validSaveModes.includes(this.state.saveMode)) errorCollector += \"Invalid save mode.\\n\";\n\n    if (errorCollector !== \"\") {\n      alert(errorCollector);\n      return false;\n    } else return true;\n  }\n\n  render() {\n    const saveModes = [];\n    this.validSaveModes.forEach(m => saveModes.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      children: m\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 53\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left login\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Save Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-data\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Title: \",\n                  hint: \"e.g. \\\"Cool map\\\"\",\n                  separateLine: true,\n                  children: /*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"title\",\n                    value: this.state.title,\n                    hint: \"\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Description: \",\n                  hint: \"e.g. \\\"Map of cool connections\\\"\",\n                  separateLine: true,\n                  children: /*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"description\",\n                    value: this.state.description,\n                    hint: \"\",\n                    onFieldChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Save mode: \",\n                  separateLine: true,\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"saveMode\",\n                    value: this.state.saveMode,\n                    onChange: this.onFieldChange,\n                    children: saveModes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Share to showcase:\",\n                  tooltip: \"This will make your map visible to others on the Community Showcase page.\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    name: \"isShared\",\n                    checked: this.state.isShared,\n                    disabled: this.state.saveMode !== \"Save to profile\",\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            value: \"Submit\",\n            id: \"add-collection-modal-submit\",\n            onClick: e => {\n              if (this.validate()) {\n                this.props.handler(e, this.state);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/client/src/components/modals/SaveModal.jsx"],"names":["Component","Textbox","Button","LabeledControl","AddEditCollectionModal","Meatballs","Collapser","MapItem","constructor","props","render","title","e","console","log","_id","SaveModal","state","loadedMaps","onFieldChange","bind","event","target","name","value","type","checked","setState","validate","errorCollector","validSaveModes","includes","saveMode","alert","saveModes","forEach","m","push","description","isShared","handler"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"../controls/Textbox\";\r\nimport {Button} from \"../controls/Button\";\r\nimport {LabeledControl} from \"../controls/LabeledControl\";\r\nimport {AddEditCollectionModal} from \"./AddEditCollectionModal\";\r\nimport {Meatballs} from \"../controls/Meatballs\";\r\nimport {Collapser} from \"../controls/Collapser\";\r\n\r\nclass MapItem extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\treturn(\r\n\t\t\t<div className={\"map-item\"}>\r\n\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t<div>{this.props.title}</div>\r\n\t\t\t\t<Button value={\"LOAD\"} onClick={(e) => {\r\n\t\t\t\t\tconsole.log(this.props._id)\r\n\t\t\t\t}} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport class SaveModal extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tloadedMaps: []\r\n\t\t};\r\n\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = (target.type === \"checkbox\") ? target.checked : target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Validates file upload.\r\n\t * @returns {boolean}\r\n\t */\r\n\tvalidate()\r\n\t{\r\n\t\tlet errorCollector = \"\";\r\n\t\tif(this.state.title === \"\")\r\n\t\t\terrorCollector += \"Maps must have a title.\\n\";\r\n\t\tif(!this.validSaveModes.includes(this.state.saveMode))\r\n\t\t\terrorCollector += \"Invalid save mode.\\n\";\r\n\r\n\t\tif(errorCollector !== \"\")\r\n\t\t{\r\n\t\t\talert(errorCollector);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\telse return true;\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst saveModes = [];\r\n\t\tthis.validSaveModes.forEach((m) => saveModes.push(<option>{m}</option>));\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"modal\"}>\r\n\t\t\t\t<div className={\"top\"}>\r\n\t\t\t\t\t<div className={\"left login\"}>\r\n\t\t\t\t\t\t<h2>Save Map</h2>\r\n\t\t\t\t\t\t<div className={\"map-data\"}>\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Title: \"} hint={\"e.g. \\\"Cool map\\\"\"} separateLine={true}>\r\n\t\t\t\t\t\t\t\t\t\t<Textbox name={\"title\"} value={this.state.title} hint={\"\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Description: \"} hint={\"e.g. \\\"Map of cool connections\\\"\"} separateLine={true}>\r\n\t\t\t\t\t\t\t\t\t\t<Textbox name={\"description\"} value={this.state.description} hint={\"\"} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Save mode: \"} separateLine={true}>\r\n\t\t\t\t\t\t\t\t\t\t<select name={\"saveMode\"} value={this.state.saveMode} onChange={this.onFieldChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t{saveModes}\r\n\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Share to showcase:\"} tooltip={\"This will make your map visible to others on the Community Showcase page.\"}>\r\n\t\t\t\t\t\t\t\t\t\t<input type={\"checkbox\"} name={\"isShared\"} checked={this.state.isShared} disabled={(this.state.saveMode !== \"Save to profile\")} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"bottom\"}>\r\n\t\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t\t<Button value={\"Submit\"} id={\"add-collection-modal-submit\"} onClick={(e) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(this.validate())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.handler(e, this.state);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}