{"ast":null,"code":"import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\nexport default function bisector(f) {\n  let compare1, compare2, delta; // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n\n  if (f.length !== 2) {\n    compare1 = ascending;\n\n    compare2 = (d, x) => ascending(f(d), x);\n\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x) {\n    let lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      } while (lo < hi);\n    }\n\n    return lo;\n  }\n\n  function right(a, x) {\n    let lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n\n      do {\n        const mid = lo + hi >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;else hi = mid;\n      } while (lo < hi);\n    }\n\n    return lo;\n  }\n\n  function center(a, x) {\n    let lo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let hi = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {\n    left,\n    center,\n    right\n  };\n}\n\nfunction zero() {\n  return 0;\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/client/node_modules/d3-array/src/bisector.js"],"names":["ascending","descending","bisector","f","compare1","compare2","delta","length","d","x","zero","left","a","lo","hi","mid","right","center","i"],"mappings":"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","sourcesContent":["import ascending from \"./ascending.js\";\r\nimport descending from \"./descending.js\";\r\n\r\nexport default function bisector(f) {\r\n  let compare1, compare2, delta;\r\n\r\n  // If an accessor is specified, promote it to a comparator. In this case we\r\n  // can test whether the search value is (self-) comparable. We can’t do this\r\n  // for a comparator (except for specific, known comparators) because we can’t\r\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\r\n  // used to test whether a single value is comparable.\r\n  if (f.length !== 2) {\r\n    compare1 = ascending;\r\n    compare2 = (d, x) => ascending(f(d), x);\r\n    delta = (d, x) => f(d) - x;\r\n  } else {\r\n    compare1 = f === ascending || f === descending ? f : zero;\r\n    compare2 = f;\r\n    delta = f;\r\n  }\r\n\r\n  function left(a, x, lo = 0, hi = a.length) {\r\n    if (lo < hi) {\r\n      if (compare1(x, x) !== 0) return hi;\r\n      do {\r\n        const mid = (lo + hi) >>> 1;\r\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\r\n        else hi = mid;\r\n      } while (lo < hi);\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function right(a, x, lo = 0, hi = a.length) {\r\n    if (lo < hi) {\r\n      if (compare1(x, x) !== 0) return hi;\r\n      do {\r\n        const mid = (lo + hi) >>> 1;\r\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\r\n        else hi = mid;\r\n      } while (lo < hi);\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function center(a, x, lo = 0, hi = a.length) {\r\n    const i = left(a, x, lo, hi - 1);\r\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\r\n  }\r\n\r\n  return {left, center, right};\r\n}\r\n\r\nfunction zero() {\r\n  return 0;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}