{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Collection.jsx\";\nimport { Component } from \"react\";\nimport { Meatballs } from \"./Meatballs\";\nimport { Collapser } from \"./Collapser\";\nimport { AddEditCollectionModal } from \"./AddEditCollectionModal\";\nimport { AddEditNodeModal } from \"./AddEditNodeModal\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CollectionNode extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let nodeColour = this.props.node.colour || \"blue\"; // TODO: Advanced logic for determining next unused colour (per journey)\n\n    let changeColourTimeout;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collection-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          this.props.openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n            words: this.props.words,\n            type: this.props.type,\n            node: this.props.node,\n            language: this.props.node.language,\n            onNodeSubmit: this.props.editNode,\n            collectionIndex: this.props.collectionIndex,\n            indexChain: this.props.indexChain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 30\n          }, this));\n        },\n        children: this.props.node.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          this.props.openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n            words: this.props.words,\n            type: this.props.type,\n            node: this.props.node,\n            language: this.props.node.language,\n            onNodeSubmit: this.props.editNode,\n            collectionIndex: this.props.collectionIndex,\n            indexChain: this.props.indexChain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 30\n          }, this));\n        },\n        children: this.props.node.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          defaultValue: this.props.node.colour,\n          onChange: e => {\n            // Throttle the onChange; there's no way to have it only change when the user clicks off of it, annoyingly\n            let node = this;\n            window.clearTimeout(changeColourTimeout);\n            changeColourTimeout = window.setTimeout(function () {\n              let updatedNode = { ...node,\n                colour: e.target.value\n              };\n              node.props.editNode(e, node.props.collectionIndex, node.props.indexChain, updatedNode);\n            }, 100);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"X\",\n          id: \"remove-node\",\n          onClick: e => this.props.removeNode(e, this.props.collectionIndex, this.props.indexChain)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport class Collection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n      // Note: Could be lifted if we want persistence when editing types\n      flatCollection: []\n    };\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.getCollectionWords = this.getCollectionWords.bind(this);\n  }\n\n  toggleCollapse(e) {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  /**\r\n   * Recursive algorithm that adds a CollectionNode component for each word in a collection\r\n   * @param {*} wordComponents An initially empty array that contains the CollectionNode components\r\n   * @param {*} node The currently worked-on node for this depth level\r\n   * @param {number} i The index of the currently worked-on node\r\n   * @param {string} indexChain The chain of indexes required to get to the node (e.g. this.props.words[0].parents[1].parents[4] would have a chain of 0,1,4)\r\n   * @param {string} collectionIndex The index of the collection that the node belongs to\r\n   */\n\n\n  getCollectionWords(wordComponents, node, i, indexChain, collectionIndex) {\n    indexChain += String(i);\n\n    if (node.parents) {\n      for (let j = 0; j < node.parents.length; ++j) {\n        wordComponents = this.getCollectionWords(wordComponents, node.parents[j], j, indexChain + \"->\", collectionIndex);\n      }\n    }\n\n    node.indexChain = indexChain;\n    let flatCollection = this.state.flatCollection.push(node);\n    this.setState({\n      flatCollection: flatCollection\n    });\n    wordComponents.push( /*#__PURE__*/_jsxDEV(CollectionNode, {\n      type: this.props.type,\n      words: this.props.words,\n      node: node,\n      editNode: this.props.editNode,\n      removeNode: this.props.removeNode,\n      openModal: this.props.openModal,\n      collectionIndex: collectionIndex // Index of collection the node belongs to\n      ,\n      indexChain: indexChain // Index chain pointing to word in the tree\n\n    }, indexChain, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }, this));\n    return wordComponents;\n  }\n\n  render() {\n    let wordComponents = [];\n\n    if (!this.state.collapsed) {\n      if (this.props.words.length > 0) wordComponents = this.getCollectionWords(wordComponents, this.props.words[0], 0, \"\", this.props.index);\n    }\n\n    let meatballItems = [{\n      text: \"Add node\",\n      handler: e => {\n        this.props.cAddNode(e, {\n          type: this.props.type,\n          collectionIndex: this.props.index\n        });\n      }\n    }, {\n      text: \"Add node (default)\",\n      handler: e => {\n        this.props.cAddNodeDefault(e, {\n          type: this.props.type,\n          collectionIndex: this.props.index\n        });\n      }\n    }, {\n      text: \"Remove collection\",\n      handler: e => {\n        this.props.cRemoveCollection(e, this.props.index);\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collection-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditCollectionModal, {\n              type: this.props.type,\n              word: this.props.header.word,\n              language: this.props.header.language,\n              onCollectionSubmit: this.props.editCollection,\n              index: this.props.index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this));\n          },\n          children: this.props.header.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditCollectionModal, {\n              type: this.props.type,\n              word: this.props.header.word,\n              language: this.props.header.language,\n              onCollectionSubmit: this.props.editCollection,\n              index: this.props.index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this));\n          },\n          children: this.props.header.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meatball-collapser-container\",\n          children: [/*#__PURE__*/_jsxDEV(Meatballs, {\n            openModal: this.props.openModal,\n            openContextMenu: this.props.openContextMenu,\n            closeContextMenu: this.props.closeContextMenu,\n            contextMenuItems: meatballItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Collapser, {\n            toggleCollapse: this.toggleCollapse,\n            collapsed: this.state.collapsed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }, this), wordComponents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Collection.jsx"],"names":["Component","Meatballs","Collapser","AddEditCollectionModal","AddEditNodeModal","Button","CollectionNode","constructor","props","render","nodeColour","node","colour","changeColourTimeout","e","openModal","words","type","language","editNode","collectionIndex","indexChain","word","window","clearTimeout","setTimeout","updatedNode","target","value","removeNode","Collection","state","collapsed","flatCollection","toggleCollapse","bind","getCollectionWords","setState","wordComponents","i","String","parents","j","length","push","index","meatballItems","text","handler","cAddNode","cAddNodeDefault","cRemoveCollection","header","editCollection","openContextMenu","closeContextMenu"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Meatballs} from \"./Meatballs\";\r\nimport {Collapser} from \"./Collapser\";\r\nimport {AddEditCollectionModal} from \"./AddEditCollectionModal\";\r\nimport {AddEditNodeModal} from \"./AddEditNodeModal\";\r\nimport {Button} from \"./Button\";\r\n\r\nclass CollectionNode extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tlet nodeColour = this.props.node.colour || \"blue\"; // TODO: Advanced logic for determining next unused colour (per journey)\r\n\t\tlet changeColourTimeout;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"collection-node\"}>\r\n\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.openModal(e, <AddEditNodeModal\r\n\t\t\t\t\t\twords={this.props.words}\r\n\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\tnode={this.props.node}\r\n\t\t\t\t\t\tlanguage={this.props.node.language}\r\n\t\t\t\t\t\tonNodeSubmit={this.props.editNode}\r\n\t\t\t\t\t\tcollectionIndex={this.props.collectionIndex}\r\n\t\t\t\t\t\tindexChain={this.props.indexChain}\r\n\t\t\t\t\t/>);\r\n\t\t\t\t}}>{this.props.node.word}</div>\r\n\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.openModal(e, <AddEditNodeModal\r\n\t\t\t\t\t\twords={this.props.words}\r\n\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\tnode={this.props.node}\r\n\t\t\t\t\t\tlanguage={this.props.node.language}\r\n\t\t\t\t\t\tonNodeSubmit={this.props.editNode}\r\n\t\t\t\t\t\tcollectionIndex={this.props.collectionIndex}\r\n\t\t\t\t\t\tindexChain={this.props.indexChain}\r\n\t\t\t\t\t/>);\r\n\t\t\t\t}}>{this.props.node.language}</div>\r\n\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t<input type={\"color\"} defaultValue={this.props.node.colour} onChange={(e) => {\r\n\t\t\t\t\t\t// Throttle the onChange; there's no way to have it only change when the user clicks off of it, annoyingly\r\n\t\t\t\t\t\tlet node = this;\r\n\t\t\t\t\t\twindow.clearTimeout(changeColourTimeout);\r\n\t\t\t\t\t\tchangeColourTimeout = window.setTimeout(function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet updatedNode = {\r\n\t\t\t\t\t\t\t\t...node,\r\n\t\t\t\t\t\t\t\t\tcolour: e.target.value\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tnode.props.editNode(e, node.props.collectionIndex, node.props.indexChain, updatedNode);\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button value={\"X\"} id={\"remove-node\"}\r\n\t\t\t\t\t        onClick={(e) => this.props.removeNode(e, this.props.collectionIndex, this.props.indexChain)}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class Collection extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcollapsed: false, // Note: Could be lifted if we want persistence when editing types\r\n\t\t\tflatCollection: []\r\n\t\t};\r\n\r\n\t\tthis.toggleCollapse = this.toggleCollapse.bind(this);\r\n\t\tthis.getCollectionWords = this.getCollectionWords.bind(this);\r\n\t}\r\n\r\n\ttoggleCollapse(e)\r\n\t{\r\n\t\tthis.setState({collapsed: !this.state.collapsed});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Recursive algorithm that adds a CollectionNode component for each word in a collection\r\n\t * @param {*} wordComponents An initially empty array that contains the CollectionNode components\r\n\t * @param {*} node The currently worked-on node for this depth level\r\n\t * @param {number} i The index of the currently worked-on node\r\n\t * @param {string} indexChain The chain of indexes required to get to the node (e.g. this.props.words[0].parents[1].parents[4] would have a chain of 0,1,4)\r\n\t * @param {string} collectionIndex The index of the collection that the node belongs to\r\n\t */\r\n\tgetCollectionWords(wordComponents, node, i, indexChain, collectionIndex)\r\n\t{\r\n\t\tindexChain += String(i);\r\n\t\tif(node.parents)\r\n\t\t{\r\n\t\t\tfor(let j = 0; j < node.parents.length; ++j)\r\n\t\t\t{\r\n\t\t\t\twordComponents = this.getCollectionWords(wordComponents, node.parents[j], j, indexChain + \"->\", collectionIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tnode.indexChain = indexChain;\r\n\t\tlet flatCollection = this.state.flatCollection.push(node);\r\n\t\tthis.setState({flatCollection: flatCollection});\r\n\t\twordComponents.push(<CollectionNode\r\n\t\t\tkey={indexChain}\r\n\t\t\ttype={this.props.type}\r\n\t\t\twords={this.props.words}\r\n\t\t\tnode={node}\r\n\t\t\teditNode={this.props.editNode}\r\n\t\t\tremoveNode={this.props.removeNode}\r\n\t\t\topenModal={this.props.openModal}\r\n\t\t\tcollectionIndex={collectionIndex}  // Index of collection the node belongs to\r\n\t\t\tindexChain={indexChain}            // Index chain pointing to word in the tree\r\n\t\t/>);\r\n\r\n\t\treturn wordComponents;\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tlet wordComponents = [];\r\n\r\n\t\tif(!this.state.collapsed)\r\n\t\t{\r\n\t\t\tif(this.props.words.length > 0)\r\n\t\t\t\twordComponents = this.getCollectionWords(wordComponents, this.props.words[0], 0, \"\", this.props.index);\r\n\t\t}\r\n\r\n\t\tlet meatballItems = [\r\n\t\t\t{\r\n\t\t\t\ttext: \"Add node\", handler: (e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.cAddNode(e, {type: this.props.type, collectionIndex: this.props.index});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: \"Add node (default)\", handler: (e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.cAddNodeDefault(e, {type: this.props.type, collectionIndex: this.props.index});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: \"Remove collection\", handler: (e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.cRemoveCollection(e, this.props.index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"collection-container\"}>\r\n\t\t\t\t<div className={\"collection-header\"}>\r\n\t\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.openModal(e, <AddEditCollectionModal\r\n\t\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\t\tword={this.props.header.word}\r\n\t\t\t\t\t\t\tlanguage={this.props.header.language}\r\n\t\t\t\t\t\t\tonCollectionSubmit={this.props.editCollection}\r\n\t\t\t\t\t\t\tindex={this.props.index}\r\n\t\t\t\t\t\t/>);\r\n\t\t\t\t\t}}>{this.props.header.word}</div>\r\n\t\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.openModal(e, <AddEditCollectionModal\r\n\t\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\t\tword={this.props.header.word}\r\n\t\t\t\t\t\t\tlanguage={this.props.header.language}\r\n\t\t\t\t\t\t\tonCollectionSubmit={this.props.editCollection}\r\n\t\t\t\t\t\t\tindex={this.props.index}\r\n\t\t\t\t\t\t/>);\r\n\t\t\t\t\t}}>{this.props.header.language}</div>\r\n\t\t\t\t\t<div className={\"meatball-collapser-container\"}>\r\n\t\t\t\t\t\t<Meatballs openModal={this.props.openModal} openContextMenu={this.props.openContextMenu}\r\n\t\t\t\t\t\t           closeContextMenu={this.props.closeContextMenu} contextMenuItems={meatballItems}/>\r\n\t\t\t\t\t\t<Collapser toggleCollapse={this.toggleCollapse} collapsed={this.state.collapsed}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{wordComponents}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}