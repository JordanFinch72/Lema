{"ast":null,"code":"import { path } from \"d3-path\";\nimport { slice } from \"./array.js\";\nimport constant from \"./constant.js\";\nimport { bumpX, bumpY, bumpRadial } from \"./curve/bump.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource;\n  let target = linkTarget;\n  let x = pointX;\n  let y = pointY;\n  let context = null;\n  let output = null;\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function (_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function (_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\nexport function linkHorizontal() {\n  return link(bumpX);\n}\nexport function linkVertical() {\n  return link(bumpY);\n}\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/client/node_modules/d3-shape/src/link.js"],"names":["path","slice","constant","bumpX","bumpY","bumpRadial","x","pointX","y","pointY","linkSource","d","source","linkTarget","target","link","curve","context","output","buffer","argv","call","arguments","s","apply","t","lineStart","point","lineEnd","_","length","linkHorizontal","linkVertical","linkRadial","l","angle","radius"],"mappings":"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","sourcesContent":["import {path} from \"d3-path\";\r\nimport {slice} from \"./array.js\";\r\nimport constant from \"./constant.js\";\r\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\r\nimport {x as pointX, y as pointY} from \"./point.js\";\r\n\r\nfunction linkSource(d) {\r\n  return d.source;\r\n}\r\n\r\nfunction linkTarget(d) {\r\n  return d.target;\r\n}\r\n\r\nexport function link(curve) {\r\n  let source = linkSource;\r\n  let target = linkTarget;\r\n  let x = pointX;\r\n  let y = pointY;\r\n  let context = null;\r\n  let output = null;\r\n\r\n  function link() {\r\n    let buffer;\r\n    const argv = slice.call(arguments);\r\n    const s = source.apply(this, argv);\r\n    const t = target.apply(this, argv);\r\n    if (context == null) output = curve(buffer = path());\r\n    output.lineStart();\r\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\r\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\r\n    output.lineEnd();\r\n    if (buffer) return output = null, buffer + \"\" || null;\r\n  }\r\n\r\n  link.source = function(_) {\r\n    return arguments.length ? (source = _, link) : source;\r\n  };\r\n\r\n  link.target = function(_) {\r\n    return arguments.length ? (target = _, link) : target;\r\n  };\r\n\r\n  link.x = function(_) {\r\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\r\n  };\r\n\r\n  link.y = function(_) {\r\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\r\n  };\r\n\r\n  link.context = function(_) {\r\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\r\n  };\r\n\r\n  return link;\r\n}\r\n\r\nexport function linkHorizontal() {\r\n  return link(bumpX);\r\n}\r\n\r\nexport function linkVertical() {\r\n  return link(bumpY);\r\n}\r\n\r\nexport function linkRadial() {\r\n  const l = link(bumpRadial);\r\n  l.angle = l.x, delete l.x;\r\n  l.radius = l.y, delete l.y;\r\n  return l;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}