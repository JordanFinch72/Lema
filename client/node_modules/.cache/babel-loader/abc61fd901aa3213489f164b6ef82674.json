{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\AddEditNodeModal.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"./Textbox\";\nimport { Button } from \"./Button\";\nimport { RadioGroup } from \"./RadioGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddEditNodeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: this.props.node.word || null,\n      colour: this.props.node.colour || null,\n      labelType: this.props.node.label.type || null,\n      customText: this.props.node.label.customText || null,\n      // Note: Text can be \"\"\n      fontColour: this.props.node.label.fontColour || null,\n      // Optional or can be overridden\n      language: typeof this.props.language === \"object\" ? this.props.language[0] : this.props.language,\n      collection: this.props.collectionList ? `${this.props.collectionList[0].type[0].toUpperCase() + this.props.collectionList[0].type.substring(1)}: ${this.props.collectionList[0].header.word}` : null\n    };\n    this.onNodeSubmit = this.props.onNodeSubmit.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.onLabelRadioClick = this.onLabelRadioClick.bind(this);\n  }\n\n  onFieldChange(event) {\n    const target = event.target;\n    const name = target.name;\n    let value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onLabelRadioClick(e, data) {\n    // Update parent LeftBar component's state\n    let labelType;\n    if (data.id === 0) labelType = \"language\";else if (data.id === 1) labelType = \"country\";else if (data.id === 2) labelType = \"customLabel\";\n    this.setState({\n      labelType: labelType\n    });\n  }\n\n  render() {\n    // Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\n    let languageInput;\n\n    if (typeof this.props.language === \"object\") {\n      let options = [];\n\n      for (let i = 0; i < this.props.language.length; ++i) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: this.props.language[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 18\n        }, this));\n      }\n\n      languageInput = /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"language\",\n        value: this.state.language,\n        onChange: this.onFieldChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 20\n      }, this);\n    } else {\n      languageInput = /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"English (GB)\\\"\",\n        name: \"language\",\n        value: this.state.language,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 20\n      }, this);\n    } // If no collectionIndex is supplied, allow them to select one from the list\n\n\n    let selectCollection;\n\n    if (!this.props.collectionIndex) {\n      let options = [];\n      let i = 0;\n\n      for (i; i < this.props.collectionList.length; ++i) {\n        let collection = this.props.collectionList[i];\n        let string = `${collection.type[0].toUpperCase() + collection.type.substring(1)}: ${this.props.collectionList[i].header.word}`;\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: string\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 18\n        }, this));\n      }\n\n      selectCollection = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Collection\"\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"collection\",\n        value: this.state.collection,\n        onChange: this.onFieldChange,\n        children: options\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)];\n    } // RadioGroup buttons\n\n\n    const buttons = [{\n      active: false,\n      label: \"Node language\"\n    }, {\n      active: false,\n      label: \"Node country/region\"\n    }, {\n      active: false,\n      label: \"Custom label:\"\n    }];\n    let labelTypeIndex = this.state.labelType === \"language\" ? 0 : this.state.labelType === \"country\" ? 1 : 2;\n    buttons[labelTypeIndex].active = true;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"Horse\\\"...\",\n        name: \"word\",\n        value: this.state.word,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), languageInput, /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Node Colour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-colour-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textbox\",\n          name: \"colour\",\n          value: this.state.colour,\n          onChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          defaultValue: this.state.colour,\n          value: this.state.colour,\n          onChange: e => {\n            this.setState({\n              colour: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-controls-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          buttons: buttons,\n          name: \"custom-label\",\n          onButtonClick: this.onLabelRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n          hint: \"Custom label text...\",\n          name: \"customLabel\",\n          value: this.state.customLabel,\n          onFieldChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Font colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"textbox\",\n            name: \"fontColour\",\n            value: this.state.fontColour,\n            onChange: this.onFieldChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            defaultValue: this.state.fontColour,\n            value: this.state.fontColour,\n            onChange: e => {\n              this.setState({\n                fontColour: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), selectCollection, /*#__PURE__*/_jsxDEV(Button, {\n        value: \"Submit\",\n        id: \"add-node-modal-submit\",\n        onClick: e => {\n          let data = this.state;\n          data.collectionIndex = this.props.collectionIndex;\n          data.childNodeIndex = this.props.childNodeIndex;\n          this.props.onNodeSubmit(e, data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/AddEditNodeModal.jsx"],"names":["Component","Textbox","Button","RadioGroup","AddEditNodeModal","constructor","props","state","word","node","colour","labelType","label","type","customText","fontColour","language","collection","collectionList","toUpperCase","substring","header","onNodeSubmit","bind","onFieldChange","onLabelRadioClick","event","target","name","value","setState","e","data","id","render","languageInput","options","i","length","push","selectCollection","collectionIndex","string","buttons","active","labelTypeIndex","customLabel","childNodeIndex"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"./Textbox\";\r\nimport {Button} from \"./Button\";\r\nimport {RadioGroup} from \"./RadioGroup\";\r\n\r\nexport class AddEditNodeModal extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tword: this.props.node.word || null,\r\n\t\t\tcolour: this.props.node.colour || null,\r\n\t\t\tlabelType: this.props.node.label.type || null,\r\n\t\t\tcustomText: this.props.node.label.customText || null, // Note: Text can be \"\"\r\n\t\t\tfontColour: this.props.node.label.fontColour || null,\r\n\r\n\t\t\t// Optional or can be overridden\r\n\t\t\tlanguage: (typeof this.props.language === \"object\") ? this.props.language[0] : this.props.language,\r\n\t\t\tcollection: (this.props.collectionList)\r\n\t\t\t\t? (`${this.props.collectionList[0].type[0].toUpperCase() + this.props.collectionList[0].type.substring(1)}: ${this.props.collectionList[0].header.word}`) : null,\r\n\t\t};\r\n\r\n\t\tthis.onNodeSubmit = this.props.onNodeSubmit.bind(this);\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t\tthis.onLabelRadioClick = this.onLabelRadioClick.bind(this);\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tlet value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\tonLabelRadioClick(e, data)\r\n\t{\r\n\t\t// Update parent LeftBar component's state\r\n\t\tlet labelType;\r\n\t\tif(data.id === 0) labelType = \"language\";\r\n\t\telse if(data.id === 1) labelType = \"country\";\r\n\t\telse if(data.id === 2) labelType = \"customLabel\";\r\n\r\n\t\tthis.setState({labelType: labelType});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\r\n\t\tlet languageInput;\r\n\t\tif(typeof this.props.language === \"object\")\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\t\t\tfor(let i = 0; i < this.props.language.length; ++i)\r\n\t\t\t{\r\n\t\t\t\toptions.push(<option key={i}>{this.props.language[i]}</option>);\r\n\t\t\t}\r\n\t\t\tlanguageInput = <select name={\"language\"} value={this.state.language} onChange={this.onFieldChange}>\r\n\t\t\t\t{options}\r\n\t\t\t</select>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlanguageInput = <Textbox hint={\"e.g. \\\"English (GB)\\\"\"} name={\"language\"} value={this.state.language} onFieldChange={this.onFieldChange} />\r\n\t\t}\r\n\r\n\t\t// If no collectionIndex is supplied, allow them to select one from the list\r\n\t\tlet selectCollection;\r\n\t\tif(!this.props.collectionIndex)\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tfor(i; i < this.props.collectionList.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tlet collection = this.props.collectionList[i];\r\n\t\t\t\tlet string = `${collection.type[0].toUpperCase() + collection.type.substring(1)}: ${this.props.collectionList[i].header.word}`;\r\n\t\t\t\toptions.push(<option key={i}>{string}</option>);\r\n\t\t\t}\r\n\t\t\tselectCollection = [\r\n\t\t\t\t<h3 key={0}>Collection</h3>,\r\n\t\t\t\t<select key={1} name={\"collection\"} value={this.state.collection} onChange={this.onFieldChange}>\r\n\t\t\t\t\t{options}\r\n\t\t\t\t</select>\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// RadioGroup buttons\r\n\t\tconst buttons = [{active: false, label: \"Node language\"}, {active: false, label: \"Node country/region\"}, {active: false, label: \"Custom label:\"}];\r\n\t\tlet labelTypeIndex = (this.state.labelType === \"language\") ? 0 : (this.state.labelType === \"country\") ? 1 : 2;\r\n\t\tbuttons[labelTypeIndex].active = true;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"modal\"}>\r\n\t\t\t\t<h3>Word</h3>\r\n\t\t\t\t<Textbox hint={\"e.g. \\\"Horse\\\"...\"} name={\"word\"} value={this.state.word} onFieldChange={this.onFieldChange}/>\r\n\t\t\t\t<h3>Language</h3>\r\n\t\t\t\t{languageInput}\r\n\t\t\t\t<h3>Node Colour</h3>\r\n\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t<input type={\"textbox\"} name={\"colour\"} value={this.state.colour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.colour} value={this.state.colour} onChange={(e) => {\r\n\t\t\t\t\t\tthis.setState({colour: e.target.value});\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h3>Label</h3>\r\n\t\t\t\t<div className={\"label-controls-container\"}>\r\n\t\t\t\t\t<h4>Text:</h4>\r\n\t\t\t\t\t<RadioGroup buttons={buttons} name={\"custom-label\"} onButtonClick={this.onLabelRadioClick} />\r\n\t\t\t\t\t<Textbox hint={\"Custom label text...\"} name={\"customLabel\"} value={this.state.customLabel} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Font colour: </h4>\r\n\t\t\t\t\t\t<input type={\"textbox\"} name={\"fontColour\"} value={this.state.fontColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.fontColour} value={this.state.fontColour} onChange={(e) => {\r\n\t\t\t\t\t\t\tthis.setState({fontColour: e.target.value});\r\n\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{selectCollection}\r\n\t\t\t\t<Button value={\"Submit\"} id={\"add-node-modal-submit\"} onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tlet data = this.state;\r\n\t\t\t\t\tdata.collectionIndex = this.props.collectionIndex;\r\n\t\t\t\t\tdata.childNodeIndex = this.props.childNodeIndex;\r\n\t\t\t\t\tthis.props.onNodeSubmit(e, data);\r\n\t\t\t\t}}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}