{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { useD3 } from \"../hooks/useD3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Map(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    const W = 500;\n    const H = W * height / width;\n    const g = svg.append(\"g\");\n    const g_countries = g.append(\"g\");\n    const graticules = g.append(\"path\").attr(\"fill\", \"none\").attr(\"stroke\", \"rgba(0,0,0,.2)\");\n    let x = 0;\n    let z = 1;\n\n    function draw() {\n      const projection = d3.geoConicConformal().parallels([40, 68]).rotate([-10 + x / z / 15, 0]).center([8 - 10, 53.823]).scale(900 * z).translate([W / 2, H / 2]);\n      const path = d3.geoPath().projection(projection);\n      const countries = g_countries.selectAll(\"path\").data(areas);\n      countries.exit().remove();\n      countries.enter().append(\"path\").attr(\"fill\", \"white\").attr(\"stroke\", \"black\").attr(\"stroke-linejoin\", \"round\").merge(countries).attr(\"d\", path);\n      graticules.attr(\"d\", path(d3.geoGraticule().step([20, 20])()));\n    }\n    /*\r\n     svg.call(d3.zoom().on(\"zoom\", function () {\r\n     z = d3.event.transform.k;\r\n     draw();\r\n     }));\r\n     */\n\n\n    draw();\n    return svg.node();\n  }, [data.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        margin: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"map-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Map, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Map.jsx"],"names":["React","d3","useD3","Map","data","ref","svg","W","H","height","width","g","append","g_countries","graticules","attr","x","z","draw","projection","geoConicConformal","parallels","rotate","center","scale","translate","path","geoPath","countries","selectAll","areas","exit","remove","enter","merge","geoGraticule","step","node","length","margin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAAQC,KAAR,QAAoB,gBAApB;;AAEA,OAAO,SAASC,GAAT,OACP;AAAA;;AAAA,MADoB;AAACC,IAAAA;AAAD,GACpB;AACC,QAAMC,GAAG,GAAGH,KAAK,CACfI,GAAD,IAAS;AACR,UAAMC,CAAC,GAAG,GAAV;AACA,UAAMC,CAAC,GAAGD,CAAC,GAAGE,MAAJ,GAAWC,KAArB;AACA,UAAMC,CAAC,GAAGL,GAAG,CAACM,MAAJ,CAAW,GAAX,CAAV;AACA,UAAMC,WAAW,GAAGF,CAAC,CAACC,MAAF,CAAS,GAAT,CAApB;AAEA,UAAME,UAAU,GAAGH,CAAC,CAACC,MAAF,CAAS,MAAT,EACjBG,IADiB,CACZ,MADY,EACJ,MADI,EAEjBA,IAFiB,CAEZ,QAFY,EAEF,gBAFE,CAAnB;AAIA,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,CAAC,GAAG,CAAR;;AAEA,aAASC,IAAT,GAAiB;AAChB,YAAMC,UAAU,GAAGlB,EAAE,CAACmB,iBAAH,GACjBC,SADiB,CACP,CAAC,EAAD,EAAK,EAAL,CADO,EAEjBC,MAFiB,CAEV,CAAC,CAAC,EAAD,GAAMN,CAAC,GAACC,CAAF,GAAI,EAAX,EAAe,CAAf,CAFU,EAGjBM,MAHiB,CAGV,CAAC,IAAI,EAAL,EAAS,MAAT,CAHU,EAIjBC,KAJiB,CAIX,MAAMP,CAJK,EAKjBQ,SALiB,CAKP,CAAClB,CAAC,GAAC,CAAH,EAAMC,CAAC,GAAC,CAAR,CALO,CAAnB;AAQA,YAAMkB,IAAI,GAAGzB,EAAE,CAAC0B,OAAH,GAAaR,UAAb,CAAwBA,UAAxB,CAAb;AAEA,YAAMS,SAAS,GAAGf,WAAW,CAACgB,SAAZ,CAAsB,MAAtB,EAA8BzB,IAA9B,CAAmC0B,KAAnC,CAAlB;AACAF,MAAAA,SAAS,CAACG,IAAV,GAAiBC,MAAjB;AACAJ,MAAAA,SAAS,CACPK,KADF,GACUrB,MADV,CACiB,MADjB,EAEEG,IAFF,CAEO,MAFP,EAEe,OAFf,EAGEA,IAHF,CAGO,QAHP,EAGiB,OAHjB,EAIEA,IAJF,CAIO,iBAJP,EAI0B,OAJ1B,EAKEmB,KALF,CAKQN,SALR,EAMEb,IANF,CAMO,GANP,EAMYW,IANZ;AAQAZ,MAAAA,UAAU,CAACC,IAAX,CAAgB,GAAhB,EAAqBW,IAAI,CAACzB,EAAE,CAACkC,YAAH,GAAkBC,IAAlB,CAAuB,CAAC,EAAD,EAAI,EAAJ,CAAvB,GAAD,CAAzB;AACA;AAID;AACH;AACA;AACA;AACA;AACA;;;AAEGlB,IAAAA,IAAI;AAEJ,WAAOZ,GAAG,CAAC+B,IAAJ,EAAP;AAEA,GAnDe,EAoDhB,CAACjC,IAAI,CAACkC,MAAN,CApDgB,CAAjB;AAuDA,sBACC;AAAK,IAAA,SAAS,EAAE,eAAhB;AAAA,2BACC;AACC,MAAA,GAAG,EAAEjC,GADN;AAEC,MAAA,KAAK,EAAE;AACNI,QAAAA,MAAM,EAAE,MADF;AAENC,QAAAA,KAAK,EAAE,MAFD;AAGN6B,QAAAA,MAAM,EAAE;AAHF,OAFR;AAAA,6BAOC;AAAG,QAAA,SAAS,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA;AAPD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GAtEepC,G;UAEHD,K;;;KAFGC,G","sourcesContent":["import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport {useD3} from \"../hooks/useD3\";\r\n\r\nexport function Map({data})\r\n{\r\n\tconst ref = useD3(\r\n\t\t(svg) => {\r\n\t\t\tconst W = 500;\r\n\t\t\tconst H = W * height/width;\r\n\t\t\tconst g = svg.append(\"g\");\r\n\t\t\tconst g_countries = g.append(\"g\");\r\n\r\n\t\t\tconst graticules = g.append(\"path\")\r\n\t\t\t\t.attr(\"fill\", \"none\")\r\n\t\t\t\t.attr(\"stroke\", \"rgba(0,0,0,.2)\");\r\n\r\n\t\t\tlet x = 0;\r\n\t\t\tlet z = 1;\r\n\r\n\t\t\tfunction draw () {\r\n\t\t\t\tconst projection = d3.geoConicConformal()\r\n\t\t\t\t\t.parallels([40, 68])\r\n\t\t\t\t\t.rotate([-10 + x/z/15, 0])\r\n\t\t\t\t\t.center([8 - 10, 53.823])\r\n\t\t\t\t\t.scale(900 * z)\r\n\t\t\t\t\t.translate([W/2, H/2]);\r\n\r\n\r\n\t\t\t\tconst path = d3.geoPath().projection(projection);\r\n\r\n\t\t\t\tconst countries = g_countries.selectAll(\"path\").data(areas);\r\n\t\t\t\tcountries.exit().remove();\r\n\t\t\t\tcountries\r\n\t\t\t\t\t.enter().append(\"path\")\r\n\t\t\t\t\t.attr(\"fill\", \"white\")\r\n\t\t\t\t\t.attr(\"stroke\", \"black\")\r\n\t\t\t\t\t.attr(\"stroke-linejoin\", \"round\")\r\n\t\t\t\t\t.merge(countries)\r\n\t\t\t\t\t.attr(\"d\", path);\r\n\r\n\t\t\t\tgraticules.attr(\"d\", path(d3.geoGraticule().step([20,20])()));\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\r\n\t\t\t/*\r\n\t\t\t svg.call(d3.zoom().on(\"zoom\", function () {\r\n\t\t\t z = d3.event.transform.k;\r\n\t\t\t draw();\r\n\t\t\t }));\r\n\t\t\t */\r\n\r\n\t\t\tdraw();\r\n\r\n\t\t\treturn svg.node();\r\n\r\n\t\t},\r\n\t\t[data.length]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={\"map-container\"}>\r\n\t\t\t<svg\r\n\t\t\t\tref={ref}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tmargin: 0\r\n\t\t\t\t}}>\r\n\t\t\t\t<g className={\"map-area\"} />\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}