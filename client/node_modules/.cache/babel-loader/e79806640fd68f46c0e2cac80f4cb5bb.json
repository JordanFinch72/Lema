{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\Lema.js\";\nimport \"./css/Lema.css\";\nimport { Component } from \"react\";\nimport { Banner } from \"./components/Banner\";\nimport { LeftBar } from \"./components/LeftBar\";\nimport { Map } from \"./components/Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Lema extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeModal: null,\n      // Either null or a React component\n      activeContextMenu: null,\n      // Either null or a React component\n      mapRef: null,\n      collections: [{\n        type: \"journey\",\n        header: {\n          word: \"horse\",\n          language: \"English (GB)\"\n        },\n        childNodes: [{\n          word: \"kers\",\n          language: \"Proto-Indo-European\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"krsos\",\n          language: \"Proto-Indo-European\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"hrussa\",\n          language: \"Proto-Germanic\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"hross\",\n          language: \"Proto-West-Germanic\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"horse\",\n          language: \"English (GB)\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"werwerwer\",\n          language: \"German\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }]\n      }, {\n        type: \"journey\",\n        header: {\n          word: \"Pferd\",\n          language: \"German\"\n        },\n        childNodes: [{\n          word: \"upo\",\n          language: \"Proto-Indo-European\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"uɸorēdos\",\n          language: \"Proto-Celtic\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"werēdos\",\n          language: \"Gaulish\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"veredus\",\n          language: \"Latin\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"paraveredus\",\n          language: \"Late Latin\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"pfarifrit\",\n          language: \"Old High German\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }, {\n          word: \"Pferd\",\n          language: \"German\",\n          colour: \"#000000\",\n          vertex: {\n            type: \"word\",\n            strokeColour: \"#000000\",\n            fillColour: \"#FFFFFF\",\n            radius: null,\n            x: null,\n            y: null\n          }\n        }]\n      }\n      /*{   /!* One word, all cognates (same ancestor). TODO: Legend should detail the ancestors *!/\n      \ttype: \"cognate\",\n      \theader: {word: \"palfrey\", language: \"English (GB)\"},\n      \tchildNodes: [\n      \t\t{word: \"palfrey\", language: \"English (GB)\", colour: \"#f5b60d\"},\n      \t\t{word: \"paard\", language: \"Dutch\", colour: \"#f5b60d\"},\n      \t\t{word: \"Pferd\", language: \"German\", colour: \"#f5b60d\"},\n      \t\t{word: \"Päerd\", language: \"Luxembourgish\", colour: \"#f5b60d\"},\n      \t\t{word: \"פערד\", language: \"Yiddish\", colour: \"#f5b60d\"}\n      \t]\n      },*/\n      // TODO: Multiple cognate collections at once (separate layers/patterned colours)\n\n      /*{   /!* Multiple words, no shared countries. Demonstrates cognates of same English word across different families/languages. *!/\n      \ttype: \"cognate\",\n      \theader: {word: \"smith\", language: \"English (GB)\"},\n      \tchildNodes: [\n      \t\t{word: \"smith\", language: \"English (GB)\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"smid\", language: \"Dutch\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"Schmidt\", language: \"German\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"smed\", language: \"Danish\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"smed\", language: \"Norwegian\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"smed\", language: \"Swedish\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"smiður\", language: \"Icelandic\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"forgeron\", language: \"French\", colour: \"#0000ff\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"fabbro\", language: \"Italian\", colour: \"#0000ff\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"Kovář\", language: \"Czech\", colour: \"#ff0000\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"kováč\", language: \"Slovak\", colour: \"#ff0000\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n      \t\t{word: \"kowal\", language: \"Polish\", colour: \"#ff0000\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}}\n      \t]\n      }*/\n      ],\n      mapRenderCounter: 0\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.openContextMenu = this.openContextMenu.bind(this);\n    this.closeContextMenu = this.closeContextMenu.bind(this);\n    this.addCollection = this.addCollection.bind(this);\n    this.editCollection = this.editCollection.bind(this);\n    this.addNode = this.addNode.bind(this);\n    this.addNodeDefault = this.addNodeDefault.bind(this);\n    this.editNode = this.editNode.bind(this);\n    this.editNodeColour = this.editNodeColour.bind(this);\n    this.removeNode = this.removeNode.bind(this);\n    this.moveLabel = this.moveLabel.bind(this);\n    this.removeCollection = this.removeCollection.bind(this);\n  }\n\n  openModal(e, modalComponent) {\n    this.setState({\n      activeModal: modalComponent\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openContextMenu(e, menuComponent) {\n    this.setState({\n      activeContextMenu: menuComponent\n    });\n  }\n\n  closeContextMenu() {\n    this.setState({\n      activeContextMenu: null\n    });\n  }\n\n  editNodeColour(e, collectionIndex, childNodeIndex, colour) {\n    // Find node and set colour\n    let newCollections = this.state.collections;\n    newCollections[collectionIndex].childNodes[childNodeIndex].colour = colour;\n    this.setState({\n      collections: newCollections,\n      mapRenderCounter: this.state.mapRenderCounter + 1\n    });\n  }\n\n  addNode(e, data) {\n    // Data validation\n    let errorCollector = \"\";\n    if (data.word === null || data.word.length <= 0) errorCollector += \"You must enter a word.\\n\";\n    if (data.language === null || data.language.length <= 0) errorCollector += \"You must enter a language.\\n\";\n\n    if (this.state.collections[data.collectionIndex].type === \"cognate\") {\n      // Check for existing language\n      for (let i = 0; i < this.state.collections[data.collectionIndex].childNodes.length; ++i) {\n        let childNode = this.state.collections[data.collectionIndex].childNodes[i];\n\n        if (childNode.language === data.language) {\n          errorCollector += \"A language may only have one word per cognate collection.\\n\" + \"Additional cognate collections may re-use languages in other cognate collections.\";\n          break;\n        }\n      }\n    }\n\n    if (errorCollector.length > 0) alert(errorCollector); // TODO: Proper error message with toast\n    else {\n      // Create new child node\n      let newChildNode = {\n        word: data.word,\n        language: data.language\n      };\n      let newCollections = this.state.collections;\n      newCollections[data.collectionIndex].childNodes.push(newChildNode); // Data contains parent Journey component's index (its location in this.state.collections array)\n\n      this.setState({\n        collections: newCollections\n      }, this.closeModal);\n    }\n  }\n\n  addNodeDefault(e, data) {\n    // Create new child node\n    let newChildNode;\n\n    if (data.type === \"journey\") {\n      newChildNode = {\n        word: \"word\",\n        language: \"language\",\n        colour: \"#000000\",\n        vertex: {\n          type: \"word\",\n          strokeColour: \"#000000\",\n          fillColour: \"#FFFFFF\",\n          radius: null,\n          x: null,\n          y: null\n        }\n      };\n    } else if (data.type === \"cognate\") {\n      newChildNode = {\n        word: \"word\",\n        language: \"language\",\n        colour: \"#000000\",\n        label: {\n          type: \"language\",\n          customText: \"\",\n          fontColour: \"#000000\",\n          fontSize: null,\n          x: null,\n          y: null\n        }\n      };\n    }\n\n    let newCollections = this.state.collections;\n    newCollections[data.collectionIndex].childNodes.push(newChildNode); // Data contains parent Journey component's index (its location in this.state.collections array)\n\n    this.setState({\n      collections: newCollections\n    }, this.closeModal);\n  }\n\n  editNode(e, data) {\n    console.log(e);\n    console.log(data); // Data validation\n\n    let errorCollector = \"\";\n    if (data.word === null || data.word.length <= 0) errorCollector += \"You must enter a word.\\n\";\n    if (data.language === null || data.language.length <= 0) errorCollector += \"You must enter a language.\\n\";\n    if (errorCollector.length > 0) alert(errorCollector); // TODO: Proper error message with toast\n    else {\n      // Create new child node\n      let newCollections = this.state.collections;\n\n      if (newCollections[data.collectionIndex].type === \"journey\") {\n        newCollections[data.collectionIndex].childNodes[data.childNodeIndex] = {\n          word: data.word,\n          language: data.language,\n          colour: data.colour,\n          vertex: { ...newCollections[data.collectionIndex].childNodes[data.childNodeIndex].vertex //type: data.labelType, customText: data.customText, fontColour: data.fontColour, fontSize: data.fontSize\n\n          }\n        };\n      } else if (newCollections[data.collectionIndex].type === \"cognate\") {\n        newCollections[data.collectionIndex].childNodes[data.childNodeIndex] = {\n          word: data.word,\n          language: data.language,\n          colour: data.colour,\n          label: { ...newCollections[data.collectionIndex].childNodes[data.childNodeIndex].label,\n            type: data.labelType,\n            customText: data.customText,\n            fontColour: data.fontColour,\n            fontSize: data.fontSize\n          }\n        };\n      }\n\n      this.setState({\n        collections: newCollections\n      }, this.closeModal);\n    }\n  }\n\n  removeNode(e, collectionIndex, childNodeIndex) {\n    let newCollections = this.state.collections;\n    newCollections[collectionIndex].childNodes.splice(childNodeIndex, 1);\n    this.setState({\n      collections: newCollections\n    }, function () {\n      console.log(this.state);\n    });\n  }\n\n  moveLabel(collectionIndex, childNodeIndex, x, y) {\n    let fontSize = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let newCollections = this.state.collections;\n    newCollections[collectionIndex].childNodes[childNodeIndex].label.x = x;\n    newCollections[collectionIndex].childNodes[childNodeIndex].label.y = y;\n    if (fontSize) newCollections[collectionIndex].childNodes[childNodeIndex].label.fontSize = fontSize;\n    this.setState({\n      collections: newCollections\n    }, e => {\n      console.log(this.state.collections[collectionIndex].childNodes[childNodeIndex]);\n    });\n  }\n\n  addCollection(e, data) {\n    if (data.type === \"Cognates\") data.type = \"cognate\";else if (data.type === \"Historical journey\") data.type = \"journey\"; // Data validation\n    // TODO: For cognates, only one cognate per language should be allowed\n    //  - Future feature: for additional cognate collections, change solid colours to patterns of the specified colours instead (e.g. stripes; checks)\n\n    let errorCollector = \"\";\n    if (data.header.word === null || data.header.word.length <= 0) errorCollector += \"You must enter a word.\\n\";\n    if (data.header.language === null || data.header.language.length <= 0) errorCollector += \"You must enter a language.\\n\";\n    if (errorCollector.length > 0) alert(errorCollector); // TODO: Proper error handling with toast\n    else {\n      let newCollections = this.state.collections;\n      newCollections.push({\n        type: data.type,\n        header: data.header,\n        childNodes: []\n      });\n      this.setState({\n        collections: newCollections\n      }, this.closeModal);\n    }\n  }\n\n  editCollection(e, data) {\n    if (data.type === \"Cognates\") data.type = \"cognate\";else if (data.type === \"Historical journey\") data.type = \"journey\"; // Data validation\n\n    let errorCollector = \"\";\n    if (data.header.word === null || data.header.word.length <= 0) errorCollector += \"You must enter a word.\\n\";\n    if (data.header.language === null || data.header.language.length <= 0) errorCollector += \"You must enter a language.\\n\";\n    if (errorCollector.length > 0) alert(errorCollector); // TODO: Proper error handling with toast\n    else {\n      let newCollections = this.state.collections;\n      newCollections[data.index].type = data.type;\n      newCollections[data.index].header = data.header;\n      this.setState({\n        collections: newCollections,\n        mapRenderCounter: this.state.mapRenderCounter + 1\n      }, this.closeModal);\n    }\n  }\n\n  removeCollection(e, collectionIndex) {\n    let newCollections = this.state.collections;\n    newCollections.splice(collectionIndex, 1);\n    this.setState({\n      collections: newCollections\n    }, function () {\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    let modalContainer = null,\n        contextMenuContainer = null;\n\n    if (this.state.activeModal !== null) {\n      let activeModal = this.state.activeModal;\n      modalContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        onClick: e => {\n          if (e.nativeEvent.target.className === \"modal-container\") this.closeModal(); // Closes modal if they click off the modal\n        },\n        children: activeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (this.state.activeContextMenu !== null) {\n      let activeContextMenu = this.state.activeContextMenu;\n      contextMenuContainer = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"context-menu-container\",\n        onClick: this.closeContextMenu,\n        children: activeContextMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 5\n      }, this);\n    }\n\n    console.log(this.state.collections);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Lema\",\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-view-container\",\n        children: [/*#__PURE__*/_jsxDEV(LeftBar, {\n          collections: this.state.collections,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          openContextMenu: this.openContextMenu,\n          closeContextMenu: this.closeContextMenu,\n          addNode: this.addNode,\n          addNodeDefault: this.addNodeDefault,\n          editNode: this.editNode,\n          editNodeColour: this.editNodeColour,\n          removeNode: this.removeNode,\n          addCollection: this.addCollection,\n          editCollection: this.editCollection,\n          removeCollection: this.removeCollection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          collections: this.state.collections,\n          mapRenderCounter: this.state.mapRenderCounter,\n          openContextMenu: this.openContextMenu,\n          closeContextMenu: this.closeContextMenu,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          addNode: this.addNode,\n          editNode: this.editNode,\n          editNodeColour: this.editNodeColour,\n          removeNode: this.removeNode,\n          moveLabel: this.moveLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 5\n      }, this), modalContainer, contextMenuContainer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Lema;","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/Lema.js"],"names":["Component","Banner","LeftBar","Map","Lema","constructor","props","state","activeModal","activeContextMenu","mapRef","collections","type","header","word","language","childNodes","colour","vertex","strokeColour","fillColour","radius","x","y","mapRenderCounter","openModal","bind","closeModal","openContextMenu","closeContextMenu","addCollection","editCollection","addNode","addNodeDefault","editNode","editNodeColour","removeNode","moveLabel","removeCollection","e","modalComponent","setState","menuComponent","collectionIndex","childNodeIndex","newCollections","data","errorCollector","length","i","childNode","alert","newChildNode","push","label","customText","fontColour","fontSize","console","log","labelType","splice","index","render","modalContainer","contextMenuContainer","nativeEvent","target","className"],"mappings":"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","sourcesContent":["import \"./css/Lema.css\";\nimport {Component} from \"react\";\nimport {Banner} from \"./components/Banner\";\nimport {LeftBar} from \"./components/LeftBar\";\nimport {Map} from \"./components/Map\";\n\nclass Lema extends Component\n{\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactiveModal: null, // Either null or a React component\n\t\t\tactiveContextMenu: null, // Either null or a React component\n\t\t\tmapRef: null,\n\t\t\tcollections: [\n\t\t\t\t{\n\t\t\t\t\ttype: \"journey\",\n\t\t\t\t\theader: {word: \"horse\", language: \"English (GB)\"},\n\t\t\t\t\tchildNodes: [\n\t\t\t\t\t\t{word: \"kers\", language: \"Proto-Indo-European\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"krsos\", language: \"Proto-Indo-European\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"hrussa\", language: \"Proto-Germanic\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"hross\", language: \"Proto-West-Germanic\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"horse\", language: \"English (GB)\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"werwerwer\", language: \"German\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: \"journey\",\n\t\t\t\t\theader: {word: \"Pferd\", language: \"German\"},\n\t\t\t\t\tchildNodes: [\n\t\t\t\t\t\t{word: \"upo\", language: \"Proto-Indo-European\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"uɸorēdos\", language: \"Proto-Celtic\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"werēdos\", language: \"Gaulish\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"veredus\", language: \"Latin\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"paraveredus\", language: \"Late Latin\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"pfarifrit\", language: \"Old High German\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"Pferd\", language: \"German\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t/*{   /!* One word, all cognates (same ancestor). TODO: Legend should detail the ancestors *!/\n\t\t\t\t\ttype: \"cognate\",\n\t\t\t\t\theader: {word: \"palfrey\", language: \"English (GB)\"},\n\t\t\t\t\tchildNodes: [\n\t\t\t\t\t\t{word: \"palfrey\", language: \"English (GB)\", colour: \"#f5b60d\"},\n\t\t\t\t\t\t{word: \"paard\", language: \"Dutch\", colour: \"#f5b60d\"},\n\t\t\t\t\t\t{word: \"Pferd\", language: \"German\", colour: \"#f5b60d\"},\n\t\t\t\t\t\t{word: \"Päerd\", language: \"Luxembourgish\", colour: \"#f5b60d\"},\n\t\t\t\t\t\t{word: \"פערד\", language: \"Yiddish\", colour: \"#f5b60d\"}\n\t\t\t\t\t]\n\t\t\t\t},*/\n\t\t\t\t\t// TODO: Multiple cognate collections at once (separate layers/patterned colours)\n\t\t\t\t/*{   /!* Multiple words, no shared countries. Demonstrates cognates of same English word across different families/languages. *!/\n\t\t\t\t\ttype: \"cognate\",\n\t\t\t\t\theader: {word: \"smith\", language: \"English (GB)\"},\n\t\t\t\t\tchildNodes: [\n\t\t\t\t\t\t{word: \"smith\", language: \"English (GB)\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"smid\", language: \"Dutch\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"Schmidt\", language: \"German\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"smed\", language: \"Danish\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"smed\", language: \"Norwegian\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"smed\", language: \"Swedish\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"smiður\", language: \"Icelandic\", colour: \"#f5b60d\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"forgeron\", language: \"French\", colour: \"#0000ff\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"fabbro\", language: \"Italian\", colour: \"#0000ff\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"Kovář\", language: \"Czech\", colour: \"#ff0000\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"kováč\", language: \"Slovak\", colour: \"#ff0000\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}},\n\t\t\t\t\t\t{word: \"kowal\", language: \"Polish\", colour: \"#ff0000\", label: {type: \"country\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}}\n\t\t\t\t\t]\n\t\t\t\t}*/\n\t\t\t],\n\t\t\tmapRenderCounter: 0\n\t\t};\n\n\t\tthis.openModal = this.openModal.bind(this);\n\t\tthis.closeModal = this.closeModal.bind(this);\n\t\tthis.openContextMenu = this.openContextMenu.bind(this);\n\t\tthis.closeContextMenu = this.closeContextMenu.bind(this);\n\t\tthis.addCollection = this.addCollection.bind(this);\n\t\tthis.editCollection = this.editCollection.bind(this);\n\t\tthis.addNode = this.addNode.bind(this);\n\t\tthis.addNodeDefault = this.addNodeDefault.bind(this);\n\t\tthis.editNode = this.editNode.bind(this);\n\t\tthis.editNodeColour = this.editNodeColour.bind(this);\n\t\tthis.removeNode = this.removeNode.bind(this);\n\t\tthis.moveLabel = this.moveLabel.bind(this);\n\t\tthis.removeCollection = this.removeCollection.bind(this);\n\t}\n\n\topenModal(e, modalComponent)\n\t{\n\t\tthis.setState({\n\t\t\tactiveModal: modalComponent\n\t\t});\n\t}\n\tcloseModal()\n\t{\n\t\tthis.setState({\n\t\t\tactiveModal: null\n\t\t});\n\t}\n\topenContextMenu(e, menuComponent)\n\t{\n\t\tthis.setState({\n\t\t\tactiveContextMenu: menuComponent\n\t\t});\n\t}\n\tcloseContextMenu()\n\t{\n\t\tthis.setState({\n\t\t\tactiveContextMenu: null\n\t\t});\n\t}\n\n\teditNodeColour(e, collectionIndex, childNodeIndex, colour)\n\t{\n\t\t// Find node and set colour\n\t\tlet newCollections = this.state.collections;\n\t\tnewCollections[collectionIndex].childNodes[childNodeIndex].colour = colour;\n\t\tthis.setState({collections: newCollections, mapRenderCounter: this.state.mapRenderCounter+1});\n\t}\n\taddNode(e, data)\n\t{\n\t\t// Data validation\n\t\tlet errorCollector = \"\";\n\t\tif(data.word === null || data.word.length <= 0)\n\t\t\terrorCollector += \"You must enter a word.\\n\";\n\t\tif(data.language === null || data.language.length <= 0)\n\t\t\terrorCollector += \"You must enter a language.\\n\";\n\t\tif(this.state.collections[data.collectionIndex].type === \"cognate\")\n\t\t{\n\t\t\t// Check for existing language\n\t\t\tfor(let i = 0; i < this.state.collections[data.collectionIndex].childNodes.length; ++i)\n\t\t\t{\n\t\t\t\tlet childNode = this.state.collections[data.collectionIndex].childNodes[i];\n\t\t\t\tif(childNode.language === data.language)\n\t\t\t\t{\n\t\t\t\t\terrorCollector += \"A language may only have one word per cognate collection.\\n\" +\n\t\t\t\t\t\t\t\t\t  \"Additional cognate collections may re-use languages in other cognate collections.\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif(errorCollector.length > 0)\n\t\t\talert(errorCollector); // TODO: Proper error message with toast\n\t\telse\n\t\t{\n\t\t\t// Create new child node\n\t\t\tlet newChildNode = {word: data.word, language: data.language};\n\t\t\tlet newCollections = this.state.collections;\n\t\t\tnewCollections[data.collectionIndex].childNodes.push(newChildNode); // Data contains parent Journey component's index (its location in this.state.collections array)\n\n\t\t\tthis.setState({collections: newCollections}, this.closeModal);\n\t\t}\n\t}\n\taddNodeDefault(e, data)\n\t{\n\t\t// Create new child node\n\t\tlet newChildNode;\n\t\tif(data.type === \"journey\")\n\t\t{\n\t\t\tnewChildNode = {word: \"word\", language: \"language\", colour: \"#000000\", vertex: {type: \"word\", strokeColour: \"#000000\", fillColour: \"#FFFFFF\", radius: null, x: null, y: null}};\n\t\t}\n\t\telse if(data.type === \"cognate\")\n\t\t{\n\t\t\tnewChildNode = {word: \"word\", language: \"language\", colour: \"#000000\", label: {type: \"language\", customText: \"\", fontColour: \"#000000\", fontSize: null, x: null, y: null}};\n\t\t}\n\t\tlet newCollections = this.state.collections;\n\t\tnewCollections[data.collectionIndex].childNodes.push(newChildNode); // Data contains parent Journey component's index (its location in this.state.collections array)\n\n\t\tthis.setState({collections: newCollections}, this.closeModal);\n\t}\n\teditNode(e, data)\n\t{\n\t\tconsole.log(e);\n\t\tconsole.log(data);\n\n\t\t// Data validation\n\t\tlet errorCollector = \"\";\n\t\tif(data.word === null || data.word.length <= 0)\n\t\t\terrorCollector += \"You must enter a word.\\n\";\n\t\tif(data.language === null || data.language.length <= 0)\n\t\t\terrorCollector += \"You must enter a language.\\n\";\n\n\t\tif(errorCollector.length > 0)\n\t\t\talert(errorCollector); // TODO: Proper error message with toast\n\t\telse\n\t\t{\n\t\t\t// Create new child node\n\t\t\tlet newCollections = this.state.collections;\n\n\t\t\tif(newCollections[data.collectionIndex].type === \"journey\")\n\t\t\t{\n\t\t\t\tnewCollections[data.collectionIndex].childNodes[data.childNodeIndex] = {\n\t\t\t\t\tword: data.word, language: data.language, colour: data.colour,\n\t\t\t\t\tvertex: {\n\t\t\t\t\t\t...newCollections[data.collectionIndex].childNodes[data.childNodeIndex].vertex,\n\t\t\t\t\t\t//type: data.labelType, customText: data.customText, fontColour: data.fontColour, fontSize: data.fontSize\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if(newCollections[data.collectionIndex].type === \"cognate\")\n\t\t\t{\n\t\t\t\tnewCollections[data.collectionIndex].childNodes[data.childNodeIndex] = {\n\t\t\t\t\tword: data.word, language: data.language, colour: data.colour,\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\t...newCollections[data.collectionIndex].childNodes[data.childNodeIndex].label,\n\t\t\t\t\t\ttype: data.labelType, customText: data.customText, fontColour: data.fontColour, fontSize: data.fontSize\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\n\t\t\tthis.setState({collections: newCollections}, this.closeModal);\n\t\t}\n\t}\n\tremoveNode(e, collectionIndex, childNodeIndex)\n\t{\n\t\tlet newCollections = this.state.collections;\n\t\tnewCollections[collectionIndex].childNodes.splice(childNodeIndex, 1);\n\t\tthis.setState({collections: newCollections}, function()\n\t\t{\n\t\t\tconsole.log(this.state);\n\t\t});\n\t}\n\tmoveLabel(collectionIndex, childNodeIndex, x, y, fontSize = null)\n\t{\n\t\tlet newCollections = this.state.collections;\n\t\tnewCollections[collectionIndex].childNodes[childNodeIndex].label.x = x;\n\t\tnewCollections[collectionIndex].childNodes[childNodeIndex].label.y = y;\n\t\tif(fontSize)\n\t\t\tnewCollections[collectionIndex].childNodes[childNodeIndex].label.fontSize = fontSize;\n\t\tthis.setState({collections: newCollections},\n\t\t\t(e) => {console.log(this.state.collections[collectionIndex].childNodes[childNodeIndex])});\n\t}\n\n\taddCollection(e, data)\n\t{\n\t\tif(data.type === \"Cognates\") data.type = \"cognate\";\n\t\telse if(data.type === \"Historical journey\") data.type = \"journey\";\n\n\t\t// Data validation\n\t\t// TODO: For cognates, only one cognate per language should be allowed\n\t\t//  - Future feature: for additional cognate collections, change solid colours to patterns of the specified colours instead (e.g. stripes; checks)\n\t\tlet errorCollector = \"\";\n\t\tif(data.header.word === null || data.header.word.length <= 0)\n\t\t\terrorCollector += \"You must enter a word.\\n\";\n\t\tif(data.header.language === null || data.header.language.length <= 0)\n\t\t\terrorCollector += \"You must enter a language.\\n\";\n\n\t\tif(errorCollector.length > 0)\n\t\t\talert(errorCollector); // TODO: Proper error handling with toast\n\t\telse\n\t\t{\n\t\t\tlet newCollections = this.state.collections;\n\t\t\tnewCollections.push({type: data.type, header: data.header, childNodes: []});\n\t\t\tthis.setState( {collections: newCollections}, this.closeModal);\n\t\t}\n\t}\n\teditCollection(e, data)\n\t{\n\t\tif(data.type === \"Cognates\") data.type = \"cognate\";\n\t\telse if(data.type === \"Historical journey\") data.type = \"journey\";\n\n\t\t// Data validation\n\t\tlet errorCollector = \"\";\n\t\tif(data.header.word === null || data.header.word.length <= 0)\n\t\t\terrorCollector += \"You must enter a word.\\n\";\n\t\tif(data.header.language === null || data.header.language.length <= 0)\n\t\t\terrorCollector += \"You must enter a language.\\n\";\n\n\t\tif(errorCollector.length > 0)\n\t\t\talert(errorCollector); // TODO: Proper error handling with toast\n\t\telse\n\t\t{\n\t\t\tlet newCollections = this.state.collections;\n\t\t\tnewCollections[data.index].type = data.type;\n\t\t\tnewCollections[data.index].header = data.header;\n\t\t\tthis.setState({collections: newCollections, mapRenderCounter: this.state.mapRenderCounter+1}, this.closeModal);\n\t\t}\n\t}\n\tremoveCollection(e, collectionIndex)\n\t{\n\t\tlet newCollections = this.state.collections;\n\t\tnewCollections.splice(collectionIndex, 1);\n\t\tthis.setState({collections: newCollections}, function()\n\t\t{\n\t\t\tconsole.log(this.state);\n\t\t});\n\t}\n\n\trender()\n\t{\n\t\tlet modalContainer = null, contextMenuContainer = null;\n\t\tif(this.state.activeModal !== null)\n\t\t{\n\t\t\tlet activeModal = this.state.activeModal;\n\t\t\tmodalContainer = <div className={\"modal-container\"} onClick={(e) =>\n\t\t\t{\n\t\t\t\tif(e.nativeEvent.target.className === \"modal-container\") this.closeModal(); // Closes modal if they click off the modal\n\t\t\t}}>{activeModal}</div>;\n\t\t}\n\t\tif(this.state.activeContextMenu !== null)\n\t\t{\n\t\t\tlet activeContextMenu = this.state.activeContextMenu;\n\t\t\tcontextMenuContainer =\n\t\t\t\t<div className={\"context-menu-container\"} onClick={this.closeContextMenu}>{activeContextMenu}</div>;\n\t\t}\n\n\t\tconsole.log(this.state.collections);\n\n\t\treturn (\n\t\t\t<div className=\"Lema\">\n\t\t\t\t<Banner/>\n\t\t\t\t<div className={\"main-view-container\"}>\n\t\t\t\t\t<LeftBar collections={this.state.collections}\n\t\t\t\t\t         openModal={this.openModal} closeModal={this.closeModal}\n\t\t\t\t\t         openContextMenu={this.openContextMenu} closeContextMenu={this.closeContextMenu}\n\t\t\t\t\t         addNode={this.addNode} addNodeDefault={this.addNodeDefault} editNode={this.editNode} editNodeColour={this.editNodeColour} removeNode={this.removeNode}\n\t\t\t\t\t         addCollection={this.addCollection} editCollection={this.editCollection} removeCollection={this.removeCollection}\n\t\t\t\t\t/>\n\t\t\t\t\t<Map collections={this.state.collections} mapRenderCounter={this.state.mapRenderCounter}\n\t\t\t\t\t     openContextMenu={this.openContextMenu} closeContextMenu={this.closeContextMenu}\n\t\t\t\t\t     openModal={this.openModal} closeModal={this.closeModal}\n\t\t\t\t\t\t addNode={this.addNode} editNode={this.editNode} editNodeColour={this.editNodeColour} removeNode={this.removeNode} moveLabel={this.moveLabel} />\n\t\t\t\t</div>\n\t\t\t\t{modalContainer}\n\t\t\t\t{contextMenuContainer}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Lema;\n"]},"metadata":{},"sourceType":"module"}