{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\modals\\\\AddEditNodeModal.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"../Textbox\";\nimport { Button } from \"../Button\";\nimport { RadioGroup } from \"../RadioGroup\";\nimport { LabeledColourSelector } from \"./LabeledColourSelector\";\nimport { LabeledControl } from \"./LabeledControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddEditNodeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /* Node properties */\n      word: this.props.node.word || null,\n      parents: this.props.node.parents,\n      selectedParentIndex: 0,\n      // Cognate properties\n      strokeColour: this.props.node.fillColour || null,\n      fillColour: this.props.node.fillColour || null,\n      labelType: this.props.node.label !== undefined ? this.props.node.label.type || null : null,\n      labelCustomText: this.props.node.label !== undefined ? this.props.node.label.customText || null : null,\n      // Note: Text can be \"\"\n      labelFontColour: this.props.node.label !== undefined ? this.props.node.label.fontColour || null : null,\n      // Journey properties\n      vertexTextType: this.props.node.vertex !== undefined ? this.props.node.vertex.type || null : null,\n      vertexCustomText: this.props.node.vertex !== undefined ? this.props.node.vertex.customText || null : null,\n      // Note: Text can be \"\"\n      vertexFontColour: this.props.node.vertex !== undefined ? this.props.node.vertex.fontColour || null : null,\n      vertexStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.strokeColour || null : null,\n      vertexFillColour: this.props.node.vertex !== undefined ? this.props.node.vertex.fillColour || null : null,\n      vertexEdgeStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeStrokeColour || null : null,\n      vertexEdgeStrokeWidth: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeStrokeWidth || null : null,\n      vertexArrowheadEnabled: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadEnabled || null : null,\n      vertexArrowheadStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadStrokeColour || null : null,\n      vertexArrowheadFillColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadFillColour || null : null,\n      // Optional or can be overridden\n      language: typeof this.props.language === \"object\" ? this.props.language[0] : this.props.language,\n      collection: this.props.collectionList !== undefined ? `${this.props.collectionList[0].type[0].toUpperCase() + this.props.collectionList[0].type.substring(1)}: ${this.props.collectionList[0].header.word}` : null\n    };\n    this.onNodeSubmit = this.props.onNodeSubmit.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.onLabelRadioClick = this.onLabelRadioClick.bind(this);\n    this.onVertexRadioClick = this.onVertexRadioClick.bind(this);\n  }\n\n  onFieldChange(event) {\n    console.log(event);\n    const target = event.target;\n    const name = target.name;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onLabelRadioClick(e, data) {\n    // Update parent LeftBar component's state\n    let labelType;\n    if (data.id === 0) labelType = \"language\";else if (data.id === 1) labelType = \"country\";else if (data.id === 2) labelType = \"word\";else if (data.id === 3) labelType = \"customText\";\n    this.setState({\n      labelType: labelType\n    });\n  }\n\n  onVertexRadioClick(e, data) {\n    // Update parent LeftBar component's state\n    let vertexTextType;\n    if (data.id === 0) vertexTextType = \"language\";else if (data.id === 1) vertexTextType = \"country\";else if (data.id === 2) vertexTextType = \"word\";else if (data.id === 3) vertexTextType = \"customText\";\n    this.setState({\n      vertexTextType: vertexTextType\n    }, e => {\n      console.log(this.state.vertexTextType);\n    });\n  }\n\n  validation() {\n    // TODO: Validate form data\n    return true;\n  }\n\n  render() {\n    // Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\n    let languageInput;\n\n    if (typeof this.props.language === \"object\") {\n      let options = [];\n\n      for (let i = 0; i < this.props.language.length; ++i) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: this.props.language[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 18\n        }, this));\n      }\n\n      languageInput = /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"language\",\n        value: this.state.language,\n        onChange: this.onFieldChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this);\n    } else {\n      languageInput = /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"English (GB)\\\"\",\n        name: \"language\",\n        value: this.state.language,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 20\n      }, this);\n    } // If no collectionIndex is supplied, allow them to select one from the list\n\n\n    let selectCollection;\n\n    if (!this.props.collectionIndex === undefined) {\n      let options = [];\n      let i = 0;\n\n      for (i; i < this.props.collectionList.length; ++i) {\n        let collection = this.props.collectionList[i];\n        let string = `${collection.type[0].toUpperCase() + collection.type.substring(1)}: ${this.props.collectionList[i].header.word}`;\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: string\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 18\n        }, this));\n      }\n\n      selectCollection = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Collection\"\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"collection\",\n        value: this.state.collection,\n        onChange: this.onFieldChange,\n        children: options\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)];\n    } // Label components (if appropriate)\n\n\n    let labelControls = [],\n        nodeColourControls = [];\n\n    if (this.props.node.label) {\n      // RadioGroup buttons\n      const buttons = [{\n        active: false,\n        label: \"Node language\"\n      }, {\n        active: false,\n        label: \"Node country/region\"\n      }, {\n        active: false,\n        label: \"Word\"\n      }, {\n        active: false,\n        label: \"Custom label:\"\n      }];\n      let labelTypeIndex;\n      if (this.state.labelType === \"language\") labelTypeIndex = 0;else if (this.state.labelType === \"country\") labelTypeIndex = 1;else if (this.state.labelType === \"word\") labelTypeIndex = 2;else if (this.state.labelType === \"customText\") labelTypeIndex = 3;\n      buttons[labelTypeIndex].active = true;\n      labelControls = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-controls-container\",\n        children: [\",\", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          buttons: buttons,\n          name: \"custom-label\",\n          onRadioButtonClick: this.onLabelRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n          hint: \"Custom label text...\",\n          name: \"labelCustomText\",\n          value: this.state.labelCustomText,\n          onFieldChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Node country/region colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-colour-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"colour\",\n              value: this.state.fillColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.colourfillColour,\n              value: this.state.fillColour,\n              onChange: e => {\n                this.setState({\n                  fillColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Font colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"labelFontColour\",\n              value: this.state.labelFontColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.labelFontColour,\n              value: this.state.labelFontColour,\n              onChange: e => {\n                this.setState({\n                  labelFontColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this)];\n    } // Vertex properties (if appropriate)\n\n\n    let vertexControls = [];\n\n    if (this.props.node.vertex) {\n      // RadioGroup buttons\n      const buttons = [{\n        active: false,\n        label: \"Node language\"\n      }, {\n        active: false,\n        label: \"Node country/region\"\n      }, {\n        active: false,\n        label: \"Word\"\n      }, {\n        active: false,\n        label: \"Custom label:\"\n      }];\n      let vertexTextType;\n      if (this.state.vertexTextType === \"language\") vertexTextType = 0;else if (this.state.vertexTextType === \"country\") vertexTextType = 1;else if (this.state.vertexTextType === \"word\") vertexTextType = 2;else if (this.state.vertexTextType === \"customText\") vertexTextType = 3;\n      buttons[vertexTextType].active = true;\n      vertexControls = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Vertex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertex-controls-container\",\n        children: [\",\", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          buttons: buttons,\n          name: \"custom-vertex-text\",\n          onRadioButtonClick: this.onVertexRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n          hint: \"Custom vertex text...\",\n          name: \"vertexCustomText\",\n          value: this.state.vertexCustomText,\n          onFieldChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Font colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexFontColour\",\n              value: this.state.vertexFontColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexFontColour,\n              value: this.state.vertexFontColour,\n              onChange: e => {\n                this.setState({\n                  vertexFontColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Vertex:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Vertex stroke colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexStrokeColour\",\n              value: this.state.vertexStrokeColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexStrokeColour,\n              value: this.state.vertexStrokeColour,\n              onChange: e => {\n                this.setState({\n                  vertexStrokeColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Vertex fill colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexFillColour\",\n              value: this.state.vertexFillColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexFillColour,\n              value: this.state.vertexFillColour,\n              onChange: e => {\n                this.setState({\n                  vertexFillColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Parent edge colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexEdgeStrokeColour\",\n              value: this.state.vertexEdgeStrokeColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexEdgeStrokeColour,\n              value: this.state.vertexEdgeStrokeColour,\n              onChange: e => {\n                this.setState({\n                  vertexEdgeStrokeColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Parent edge stroke width:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexEdgeStrokeWidth\",\n              value: this.state.vertexEdgeStrokeWidth,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Show arrowhead?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"vertexArrowheadEnabled\",\n              checked: this.state.vertexArrowheadEnabled,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Arrowhead stroke colour:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexArrowheadStrokeColour\",\n              value: this.state.vertexArrowheadStrokeColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexArrowheadStrokeColour,\n              value: this.state.vertexArrowheadStrokeColour,\n              onChange: e => {\n                this.setState({\n                  vertexArrowheadStrokeColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Arrowhead fill colour:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexArrowheadFillColour\",\n              value: this.state.vertexArrowheadFillColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexArrowheadFillColour,\n              value: this.state.vertexArrowheadFillColour,\n              onChange: e => {\n                this.setState({\n                  vertexArrowheadFillColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }, this)];\n    }\n    /* Construct list of nodes that are the word's parent or can be added as the word's parent */\n\n\n    let parentNodeList = [];\n\n    if (this.props.words) {\n      for (let i = 0; i < this.props.words.length; ++i) {\n        // List all nodes\n        let wordNode = this.props.words[i];\n\n        if (this.props.node !== wordNode) {\n          // If true, disables adding and enables deletion. If false, the inverse\n          let isAlreadyParent = this.props.node.parents.includes(wordNode);\n          parentNodeList.push(\n          /*#__PURE__*/\n          // TODO: Convert to a component?\n          _jsxDEV(\"div\", {\n            \"data-index\": i,\n            className: \"parent-node\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"word\",\n              children: [wordNode.word, \" (\", wordNode.language, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                value: \"+\",\n                disabled: isAlreadyParent,\n                onClick: e => {\n                  alert(\"Temporary\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                value: \"X\",\n                disabled: !isAlreadyParent,\n                onClick: e => {\n                  alert(\"Temporary\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 7\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 6\n          }, this));\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Node Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-data\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Word / Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled-control\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: \"Word:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control\",\n                    children: /*#__PURE__*/_jsxDEV(Textbox, {\n                      name: \"word\",\n                      value: this.state.word,\n                      hint: \"Enter node word...\",\n                      onChange: this.onFieldChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled-control\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: \"Language:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control\",\n                    children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                      name: \"language\",\n                      value: this.state.language,\n                      hint: \"Enter node language...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 12\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Parent Nodes:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parent-node-list\",\n                children: parentNodeList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Node Appearance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"node-appearance\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Vertex\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledColourSelector, {\n                  label: \"Stroke colour: \",\n                  name: \"vertexStrokeColour\",\n                  value: this.state.vertexStrokeColour,\n                  onChange: this.onFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LabeledColourSelector, {\n                  label: \"Fill colour: \",\n                  name: \"vertexFillColour\",\n                  value: this.state.vertexFillColour,\n                  onChange: this.onFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Parent Edge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledColourSelector, {\n                  label: \"Stroke colour: \",\n                  name: \"vertexEdgeStrokeColour\",\n                  value: this.state.vertexEdgeStrokeColour,\n                  onChange: this.onFieldChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Stroke width: \",\n                  children: /*#__PURE__*/_jsxDEV(Textbox, {\n                    name: \"vertexEdgeStrokeWidth\",\n                    value: this.state.vertexEdgeStrokeWidth,\n                    hint: \"Pixel value (e.g. 2px)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Edge Arrowhead\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(LabeledControl, {\n                  label: \"Visible?\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: this.state.vertexArrowheadEnabled,\n                    onChange: this.onFieldChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled-control\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: \"Stroke colour: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control\",\n                    children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                      value: \"#000000\",\n                      hint: \"Hexadecimal value (e.g. #000000)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"color\",\n                      defaultValue: \"#000000\",\n                      onChange: e => {\n                        console.log(\"Temporary\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled-control\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: \"Fill colour: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control\",\n                    children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                      value: \"#000000\",\n                      hint: \"Hexadecimal value (e.g. #000000)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"color\",\n                      defaultValue: \"#000000\",\n                      onChange: e => {\n                        console.log(\"Temporary\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 365,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled-control\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: \"Text:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control\",\n                    children: /*#__PURE__*/_jsxDEV(\"select\", {\n                      value: \"Word\",\n                      onChange: e => {\n                        console.log(\"Temporary\");\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Word\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Language\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 378,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Country/region\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 379,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Custom text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 380,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled-control\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: \"Custom text: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control\",\n                    children: /*#__PURE__*/_jsxDEV(Textbox, {\n                      value: \"2px\",\n                      hint: \"Pixel value (e.g. 2px)\",\n                      onChange: e => {\n                        alert(\"Select \\\"Country/region\\\" in dropdown\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 387,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"labeled-control\",\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"label\",\n                    children: \"Font colour: \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"control\",\n                    children: [/*#__PURE__*/_jsxDEV(Textbox, {\n                      value: \"#000000\",\n                      hint: \"Hexadecimal value (e.g. #000000)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"color\",\n                      defaultValue: \"#000000\",\n                      onChange: e => {\n                        console.log(\"Temporary\");\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 394,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            value: \"Add Node / Save Changes\",\n            onChange: e => {\n              alert(\"Temporary\");\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/modals/AddEditNodeModal.jsx"],"names":["Component","Textbox","Button","RadioGroup","LabeledColourSelector","LabeledControl","AddEditNodeModal","constructor","props","state","word","node","parents","selectedParentIndex","strokeColour","fillColour","labelType","label","undefined","type","labelCustomText","customText","labelFontColour","fontColour","vertexTextType","vertex","vertexCustomText","vertexFontColour","vertexStrokeColour","vertexFillColour","vertexEdgeStrokeColour","edgeStrokeColour","vertexEdgeStrokeWidth","edgeStrokeWidth","vertexArrowheadEnabled","edgeArrowheadEnabled","vertexArrowheadStrokeColour","edgeArrowheadStrokeColour","vertexArrowheadFillColour","edgeArrowheadFillColour","language","collection","collectionList","toUpperCase","substring","header","onNodeSubmit","bind","onFieldChange","onLabelRadioClick","onVertexRadioClick","event","console","log","target","name","value","checked","setState","e","data","id","validation","render","languageInput","options","i","length","push","selectCollection","collectionIndex","string","labelControls","nodeColourControls","buttons","active","labelTypeIndex","colourfillColour","vertexControls","parentNodeList","words","wordNode","isAlreadyParent","includes","alert"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"../Textbox\";\r\nimport {Button} from \"../Button\";\r\nimport {RadioGroup} from \"../RadioGroup\";\r\nimport {LabeledColourSelector} from \"./LabeledColourSelector\";\r\nimport {LabeledControl} from \"./LabeledControl\";\r\n\r\nexport class AddEditNodeModal extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t/* Node properties */\r\n\t\t\tword: this.props.node.word || null,\r\n\t\t\tparents: this.props.node.parents,\r\n\t\t\tselectedParentIndex: 0,\r\n\r\n\t\t\t// Cognate properties\r\n\t\t\tstrokeColour: this.props.node.fillColour || null,\r\n\t\t\tfillColour: this.props.node.fillColour || null,\r\n\t\t\tlabelType: (this.props.node.label !== undefined) ? this.props.node.label.type || null : null,\r\n\t\t\tlabelCustomText: (this.props.node.label !== undefined) ? this.props.node.label.customText || null : null, // Note: Text can be \"\"\r\n\t\t\tlabelFontColour: (this.props.node.label !== undefined) ? this.props.node.label.fontColour || null : null,\r\n\r\n\t\t\t// Journey properties\r\n\t\t\tvertexTextType: (this.props.node.vertex !== undefined) ? this.props.node.vertex.type || null : null,\r\n\t\t\tvertexCustomText: (this.props.node.vertex !== undefined) ? this.props.node.vertex.customText || null : null, // Note: Text can be \"\"\r\n\t\t\tvertexFontColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.fontColour || null : null,\r\n\t\t\tvertexStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.strokeColour || null : null,\r\n\t\t\tvertexFillColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.fillColour || null : null,\r\n\t\t\tvertexEdgeStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeStrokeColour || null : null,\r\n\t\t\tvertexEdgeStrokeWidth: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeStrokeWidth || null : null,\r\n\t\t\tvertexArrowheadEnabled: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadEnabled || null : null,\r\n\t\t\tvertexArrowheadStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadStrokeColour || null : null,\r\n\t\t\tvertexArrowheadFillColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadFillColour || null : null,\r\n\r\n\t\t\t// Optional or can be overridden\r\n\t\t\tlanguage: (typeof this.props.language === \"object\") ? this.props.language[0] : this.props.language,\r\n\t\t\tcollection: (this.props.collectionList !== undefined)\r\n\t\t\t\t? (`${this.props.collectionList[0].type[0].toUpperCase() + this.props.collectionList[0].type.substring(1)}: ${this.props.collectionList[0].header.word}`) : null,\r\n\t\t};\r\n\r\n\t\tthis.onNodeSubmit = this.props.onNodeSubmit.bind(this);\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t\tthis.onLabelRadioClick = this.onLabelRadioClick.bind(this);\r\n\t\tthis.onVertexRadioClick = this.onVertexRadioClick.bind(this);\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconsole.log(event);\r\n\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tlet value = (target.type === \"checkbox\") ? target.checked : target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\tonLabelRadioClick(e, data)\r\n\t{\r\n\t\t// Update parent LeftBar component's state\r\n\t\tlet labelType;\r\n\t\tif(data.id === 0) labelType = \"language\";\r\n\t\telse if(data.id === 1) labelType = \"country\";\r\n\t\telse if(data.id === 2) labelType = \"word\";\r\n\t\telse if(data.id === 3) labelType = \"customText\";\r\n\r\n\t\tthis.setState({labelType: labelType});\r\n\t}\r\n\tonVertexRadioClick(e, data)\r\n\t{\r\n\t\t// Update parent LeftBar component's state\r\n\t\tlet vertexTextType;\r\n\t\tif(data.id === 0) vertexTextType = \"language\";\r\n\t\telse if(data.id === 1) vertexTextType = \"country\";\r\n\t\telse if(data.id === 2) vertexTextType = \"word\";\r\n\t\telse if(data.id === 3) vertexTextType = \"customText\";\r\n\r\n\t\tthis.setState({vertexTextType: vertexTextType}, (e) => {console.log(this.state.vertexTextType)});\r\n\t}\r\n\tvalidation()\r\n\t{\r\n\t\t// TODO: Validate form data\r\n\t\treturn true;\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\r\n\t\tlet languageInput;\r\n\t\tif(typeof this.props.language === \"object\")\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\t\t\tfor(let i = 0; i < this.props.language.length; ++i)\r\n\t\t\t{\r\n\t\t\t\toptions.push(<option key={i}>{this.props.language[i]}</option>);\r\n\t\t\t}\r\n\t\t\tlanguageInput = <select name={\"language\"} value={this.state.language} onChange={this.onFieldChange}>\r\n\t\t\t\t{options}\r\n\t\t\t</select>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlanguageInput = <Textbox hint={\"e.g. \\\"English (GB)\\\"\"} name={\"language\"} value={this.state.language} onFieldChange={this.onFieldChange} />\r\n\t\t}\r\n\r\n\t\t// If no collectionIndex is supplied, allow them to select one from the list\r\n\t\tlet selectCollection;\r\n\t\tif(!this.props.collectionIndex === undefined)\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tfor(i; i < this.props.collectionList.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tlet collection = this.props.collectionList[i];\r\n\t\t\t\tlet string = `${collection.type[0].toUpperCase() + collection.type.substring(1)}: ${this.props.collectionList[i].header.word}`;\r\n\t\t\t\toptions.push(<option key={i}>{string}</option>);\r\n\t\t\t}\r\n\t\t\tselectCollection = [\r\n\t\t\t\t<h3 key={0}>Collection</h3>,\r\n\t\t\t\t<select key={1} name={\"collection\"} value={this.state.collection} onChange={this.onFieldChange}>\r\n\t\t\t\t\t{options}\r\n\t\t\t\t</select>\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// Label components (if appropriate)\r\n\t\tlet labelControls = [], nodeColourControls = [];\r\n\t\tif(this.props.node.label)\r\n\t\t{\r\n\t\t\t// RadioGroup buttons\r\n\t\t\tconst buttons = [{active: false, label: \"Node language\"}, {active: false, label: \"Node country/region\"}, {active: false, label: \"Word\"}, {active: false, label: \"Custom label:\"}];\r\n\t\t\tlet labelTypeIndex;\r\n\t\t\tif(this.state.labelType === \"language\")\r\n\t\t\t\tlabelTypeIndex = 0;\r\n\t\t\telse if(this.state.labelType === \"country\")\r\n\t\t\t\tlabelTypeIndex = 1;\r\n\t\t\telse if(this.state.labelType === \"word\")\r\n\t\t\t\tlabelTypeIndex = 2;\r\n\t\t\telse if(this.state.labelType === \"customText\")\r\n\t\t\t\tlabelTypeIndex = 3;\r\n\t\t\tbuttons[labelTypeIndex].active = true;\r\n\r\n\t\t\tlabelControls = [\r\n\t\t\t\t<h3>Label</h3>,\r\n\t\t\t\t<div className={\"label-controls-container\"}>,\r\n\t\t\t\t\t<h4>Text:</h4>\r\n\t\t\t\t\t<RadioGroup buttons={buttons} name={\"custom-label\"} onRadioButtonClick={this.onLabelRadioClick} />\r\n\t\t\t\t\t<Textbox hint={\"Custom label text...\"} name={\"labelCustomText\"} value={this.state.labelCustomText} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Node country/region colour: </h4>\r\n\t\t\t\t\t\t<div className={\"node-colour-container\"}>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"colour\"} value={this.state.fillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.colourfillColour} value={this.state.fillColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({fillColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Font colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"labelFontColour\"} value={this.state.labelFontColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.labelFontColour} value={this.state.labelFontColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({labelFontColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\t// Vertex properties (if appropriate)\r\n\t\tlet vertexControls = [];\r\n\t\tif(this.props.node.vertex)\r\n\t\t{\r\n\t\t\t// RadioGroup buttons\r\n\t\t\tconst buttons = [{active: false, label: \"Node language\"}, {active: false, label: \"Node country/region\"}, {active: false, label: \"Word\"}, {active: false, label: \"Custom label:\"}];\r\n\t\t\tlet vertexTextType;\r\n\t\t\tif(this.state.vertexTextType === \"language\")\r\n\t\t\t\tvertexTextType = 0;\r\n\t\t\telse if(this.state.vertexTextType === \"country\")\r\n\t\t\t\tvertexTextType = 1;\r\n\t\t\telse if(this.state.vertexTextType === \"word\")\r\n\t\t\t\tvertexTextType = 2;\r\n\t\t\telse if(this.state.vertexTextType === \"customText\")\r\n\t\t\t\tvertexTextType = 3;\r\n\t\t\tbuttons[vertexTextType].active = true;\r\n\r\n\t\t\tvertexControls = [\r\n\t\t\t\t<h3>Vertex</h3>,\r\n\t\t\t\t<div className={\"vertex-controls-container\"}>,\r\n\t\t\t\t\t<h4>Text:</h4>\r\n\t\t\t\t\t<RadioGroup buttons={buttons} name={\"custom-vertex-text\"} onRadioButtonClick={this.onVertexRadioClick} />\r\n\t\t\t\t\t<Textbox hint={\"Custom vertex text...\"} name={\"vertexCustomText\"} value={this.state.vertexCustomText} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Font colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexFontColour\"} value={this.state.vertexFontColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexFontColour} value={this.state.vertexFontColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexFontColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4>Vertex:</h4>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Vertex stroke colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexStrokeColour\"} value={this.state.vertexStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexStrokeColour} value={this.state.vertexStrokeColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexStrokeColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Vertex fill colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexFillColour\"} value={this.state.vertexFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexFillColour} value={this.state.vertexFillColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexFillColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Parent edge colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexEdgeStrokeColour\"} value={this.state.vertexEdgeStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexEdgeStrokeColour} value={this.state.vertexEdgeStrokeColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexEdgeStrokeColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Parent edge stroke width:</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexEdgeStrokeWidth\"} value={this.state.vertexEdgeStrokeWidth} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Show arrowhead?</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"checkbox\"} name={\"vertexArrowheadEnabled\"} checked={this.state.vertexArrowheadEnabled} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Arrowhead stroke colour:</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexArrowheadStrokeColour\"} value={this.state.vertexArrowheadStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexArrowheadStrokeColour} value={this.state.vertexArrowheadStrokeColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexArrowheadStrokeColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Arrowhead fill colour:</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexArrowheadFillColour\"} value={this.state.vertexArrowheadFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexArrowheadFillColour} value={this.state.vertexArrowheadFillColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexArrowheadFillColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\t/* Construct list of nodes that are the word's parent or can be added as the word's parent */\r\n\t\tlet parentNodeList = [];\r\n\t\tif(this.props.words)\r\n\t\t{\r\n\t\t\tfor(let i = 0; i < this.props.words.length; ++i)\r\n\t\t\t{\r\n\t\t\t\t// List all nodes\r\n\t\t\t\tlet wordNode = this.props.words[i];\r\n\t\t\t\tif(this.props.node !== wordNode)\r\n\t\t\t\t{\r\n\t\t\t\t\t// If true, disables adding and enables deletion. If false, the inverse\r\n\t\t\t\t\tlet isAlreadyParent = this.props.node.parents.includes(wordNode);\r\n\r\n\t\t\t\t\tparentNodeList.push( // TODO: Convert to a component?\r\n\t\t\t\t\t<div key={i} data-index={i} className={\"parent-node\"}>\r\n\t\t\t\t\t\t<div className={\"word\"}>{wordNode.word} ({wordNode.language})</div>\r\n\t\t\t\t\t\t<div className={\"buttons\"}>\r\n\t\t\t\t\t\t\t<Button value={\"+\"} disabled={isAlreadyParent} onClick={(e) => {alert(\"Temporary\");}} />\r\n\t\t\t\t\t\t\t<Button value={\"X\"} disabled={!isAlreadyParent} onClick={(e) => {alert(\"Temporary\");}} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"modal\"}>\r\n\t\t\t\t<div className={\"top\"}>\r\n\t\t\t\t\t<div className={\"left\"}>\r\n\t\t\t\t\t\t<h3>Node Data</h3>\r\n\t\t\t\t\t\t<div className={\"node-data\"}>\r\n\t\t\t\t\t\t\t{/* cognateWordLanguage */}\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Word / Language</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<div className={\"labeled-control\"}> {/* TODO: Convert to component */}\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"label\"}>Word:</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"control\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"word\"} value={this.state.word} hint={\"Enter node word...\"} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={\"labeled-control\"}>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"label\"}>Language:</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"control\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox name={\"language\"} value={this.state.language} hint={\"Enter node language...\"} /> {/* Note: May need to be adapted for multiple from a dropdown menu */}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* parentNodes */}\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Parent Nodes:</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"parent-node-list\"}>\r\n\t\t\t\t\t\t\t\t\t{parentNodeList}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"right\"}>\r\n\t\t\t\t\t\t<h3>Node Appearance</h3>\r\n\t\t\t\t\t\t<div className={\"node-appearance\"}>\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Vertex</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<LabeledColourSelector label={\"Stroke colour: \"} name={\"vertexStrokeColour\"} value={this.state.vertexStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t<LabeledColourSelector label={\"Fill colour: \"} name={\"vertexFillColour\"} value={this.state.vertexFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Parent Edge</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<LabeledColourSelector label={\"Stroke colour: \"} name={\"vertexEdgeStrokeColour\"} value={this.state.vertexEdgeStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Stroke width: \"}>\r\n\t\t\t\t\t\t\t\t\t\t<Textbox name={\"vertexEdgeStrokeWidth\"}  value={this.state.vertexEdgeStrokeWidth} hint={\"Pixel value (e.g. 2px)\"} />\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Edge Arrowhead</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<LabeledControl label={\"Visible?\"}>\r\n\t\t\t\t\t\t\t\t\t\t<input type={\"checkbox\"} checked={this.state.vertexArrowheadEnabled} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t\t\t</LabeledControl>\r\n\t\t\t\t\t\t\t\t\t<div className={\"labeled-control\"}> {/* TODO: Convert to component */}\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"label\"}>Stroke colour: </div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"control\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox value={\"#000000\"} hint={\"Hexadecimal value (e.g. #000000)\"} />\r\n\t\t\t\t\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={\"#000000\"} onChange={(e) => {console.log(\"Temporary\");}} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={\"labeled-control\"}> {/* TODO: Convert to component */}\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"label\"}>Fill colour: </div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"control\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox value={\"#000000\"} hint={\"Hexadecimal value (e.g. #000000)\"} />\r\n\t\t\t\t\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={\"#000000\"} onChange={(e) => {console.log(\"Temporary\");}} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={\"section\"}>\r\n\t\t\t\t\t\t\t\t<h4>Label</h4>\r\n\t\t\t\t\t\t\t\t<div className={\"form\"}>\r\n\t\t\t\t\t\t\t\t\t<div className={\"labeled-control\"}> {/* TODO: Convert to component? */}\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"label\"}>Text:</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"control\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<select value={\"Word\"} onChange={(e) => {console.log(\"Temporary\");}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Word</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Language</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Country/region</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Custom text</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={\"labeled-control\"}> {/* TODO: Convert to component */}\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"label\"}>Custom text: </div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"control\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox value={\"2px\"} hint={\"Pixel value (e.g. 2px)\"} onChange={(e) => { alert(\"Select \\\"Country/region\\\" in dropdown\"); }} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className={\"labeled-control\"}> {/* TODO: Convert to component */}\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"label\"}>Font colour: </div>\r\n\t\t\t\t\t\t\t\t\t\t<div className={\"control\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textbox value={\"#000000\"} hint={\"Hexadecimal value (e.g. #000000)\"} />\r\n\t\t\t\t\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={\"#000000\"} onChange={(e) => {console.log(\"Temporary\");}} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={\"bottom\"}>\r\n\t\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t\t<Button value={\"Add Node / Save Changes\"} onChange={(e) => {alert(\"Temporary\");}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}