{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Collections.jsx\";\nimport { Component } from \"react\";\nimport { Journey } from \"./Journey\";\nimport { Cognate } from \"./Cognate\";\nimport { Button } from \"./Button\";\nimport { AddCollectionModal } from \"./AddCollectionModal\";\nimport { AddNodeModal } from \"./AddNodeModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Collections extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{\n        // TODO: Dummy data\n        type: \"journey\",\n        header: {\n          word: \"horse\",\n          language: \"English (UK)\"\n        },\n        childNodes: [{\n          word: \"kers\",\n          language: \"Proto-Indo-European\"\n        }, {\n          word: \"krsos\",\n          language: \"Proto-Indo-European\"\n        }, {\n          word: \"hrussa\",\n          language: \"Proto-Germanic\"\n        }, {\n          word: \"hross\",\n          language: \"Proto-West-Germanic\"\n        }, {\n          word: \"horse\",\n          language: \"English\"\n        }]\n      }]\n    };\n    this.onNodeColourClick = this.onNodeColourClick.bind(this);\n    this.onAddCollectionSubmit = this.onAddCollectionSubmit.bind(this);\n    this.onAddNodeSubmit = this.onAddNodeSubmit.bind(this);\n    this.openModal = this.props.openModal.bind(this);\n    this.closeModal = this.props.closeModal.bind(this);\n    this.openContextMenu = this.props.openContextMenu.bind(this);\n    this.closeContextMenu = this.props.closeContextMenu.bind(this);\n  }\n  /**\r\n   * Open a modal that allows user to change the colour of the node on the map\r\n   */\n\n\n  onNodeColourClick(e, node) {\n    // TODO: Open modal, allow user choice\n    let newValue = \"red\"; // Find node and set colour\n\n    let newItems = this.state.items;\n\n    for (let i = 0; i < newItems.length; ++i) {\n      for (let j = 0; j < newItems[i].childNodes.length; ++j) {\n        let childNode = newItems[i].childNodes[j];\n\n        if (childNode === node) {\n          newItems[i].childNodes[j].colour = newValue;\n        }\n      }\n    }\n\n    this.setState({\n      items: newItems\n    });\n  }\n\n  onAddCollectionSubmit(e, data) {\n    if (data.type === \"Cognates\") data.type = \"cognate\";else if (data.type === \"Historical journey\") data.type = \"journey\";\n    this.setState(prevState => ({\n      items: [...prevState.items, {\n        type: data.type,\n        header: data.header,\n        childNodes: []\n      }]\n    }), function () {\n      this.closeModal();\n    });\n  }\n\n  addNodeHandler(e, parent) {\n    // TODO: Open node add modal\n    console.log(parent);\n    this.props.openModal(e, /*#__PURE__*/_jsxDEV(AddNodeModal, {\n      onAddNodeSubmit: this.onAddNodeSubmit,\n      parent: parent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }, this));\n  }\n\n  onAddNodeSubmit(e, data) {\n    console.log(data);\n  }\n\n  render() {\n    // TODO: Consider whether both cognates AND journeys may be displayed at the same time\n    let itemElements = this.state.items.map((item, index) => {\n      if (item.type === \"cognate\") {\n        return /*#__PURE__*/_jsxDEV(Cognate, {\n          header: item.header,\n          childNodes: item.childNodes,\n          openContextMenu: this.openContextMenu,\n          closeContextMenu: this.closeContextMenu,\n          addNodeHandler: this.addNodeHandler,\n          onAddNodeSubmit: this.onAddNodeSubmit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 12\n        }, this);\n      } else if (item.type === \"journey\") {\n        return /*#__PURE__*/_jsxDEV(Journey, {\n          header: item.header,\n          openModal: this.openModal,\n          childNodes: item.childNodes,\n          onNodeColourClick: this.onNodeColourClick,\n          openContextMenu: this.openContextMenu,\n          closeContextMenu: this.closeContextMenu,\n          addNodeHandler: this.addNodeHandler,\n          onAddNodeSubmit: this.onAddNodeSubmit\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 12\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collections-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Journeys\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"+\",\n          id: \"manual-add\",\n          style: {\n            alignSelf: \"end\"\n          },\n          onClick: e => {\n            this.openModal(e, /*#__PURE__*/_jsxDEV(AddCollectionModal, {\n              onAddCollectionSubmit: this.onAddCollectionSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), itemElements]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Collections.jsx"],"names":["Component","Journey","Cognate","Button","AddCollectionModal","AddNodeModal","Collections","constructor","props","state","items","type","header","word","language","childNodes","onNodeColourClick","bind","onAddCollectionSubmit","onAddNodeSubmit","openModal","closeModal","openContextMenu","closeContextMenu","e","node","newValue","newItems","i","length","j","childNode","colour","setState","data","prevState","addNodeHandler","parent","console","log","render","itemElements","map","item","index","alignSelf"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,MAAR,QAAqB,UAArB;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AACA,SAAQC,YAAR,QAA2B,gBAA3B;;AAEA,OAAO,MAAMC,WAAN,SAA0BN,SAA1B,CACP;AACCO,EAAAA,WAAW,CAACC,KAAD,EACX;AACC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,KAAK,EAAE,CACN;AACC;AACAC,QAAAA,IAAI,EAAE,SAFP;AAGCC,QAAAA,MAAM,EAAE;AAACC,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,QAAQ,EAAE;AAA1B,SAHT;AAICC,QAAAA,UAAU,EAAE,CAAC;AAACF,UAAAA,IAAI,EAAE,MAAP;AAAeC,UAAAA,QAAQ,EAAE;AAAzB,SAAD,EAAkD;AAC7DD,UAAAA,IAAI,EAAE,OADuD;AAE7DC,UAAAA,QAAQ,EAAE;AAFmD,SAAlD,EAIX;AAACD,UAAAA,IAAI,EAAE,QAAP;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B,SAJW,EAImC;AAC7CD,UAAAA,IAAI,EAAE,OADuC;AAE7CC,UAAAA,QAAQ,EAAE;AAFmC,SAJnC,EAOR;AAACD,UAAAA,IAAI,EAAE,OAAP;AAAgBC,UAAAA,QAAQ,EAAE;AAA1B,SAPQ;AAJb,OADM;AADK,KAAb;AAkBA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,SAAL,GAAiB,KAAKZ,KAAL,CAAWY,SAAX,CAAqBH,IAArB,CAA0B,IAA1B,CAAjB;AACA,SAAKI,UAAL,GAAkB,KAAKb,KAAL,CAAWa,UAAX,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAlB;AACA,SAAKK,eAAL,GAAuB,KAAKd,KAAL,CAAWc,eAAX,CAA2BL,IAA3B,CAAgC,IAAhC,CAAvB;AACA,SAAKM,gBAAL,GAAwB,KAAKf,KAAL,CAAWe,gBAAX,CAA4BN,IAA5B,CAAiC,IAAjC,CAAxB;AACA;AAED;AACD;AACA;;;AACCD,EAAAA,iBAAiB,CAACQ,CAAD,EAAIC,IAAJ,EACjB;AACC;AACA,QAAIC,QAAQ,GAAG,KAAf,CAFD,CAIC;;AACA,QAAIC,QAAQ,GAAG,KAAKlB,KAAL,CAAWC,KAA1B;;AACA,SAAI,IAAIkB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACE,MAA5B,EAAoC,EAAED,CAAtC,EACA;AACC,WAAI,IAAIE,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAQ,CAACC,CAAD,CAAR,CAAYb,UAAZ,CAAuBc,MAA1C,EAAkD,EAAEC,CAApD,EACA;AACC,YAAIC,SAAS,GAAGJ,QAAQ,CAACC,CAAD,CAAR,CAAYb,UAAZ,CAAuBe,CAAvB,CAAhB;;AACA,YAAGC,SAAS,KAAKN,IAAjB,EACA;AACCE,UAAAA,QAAQ,CAACC,CAAD,CAAR,CAAYb,UAAZ,CAAuBe,CAAvB,EAA0BE,MAA1B,GAAmCN,QAAnC;AACA;AACD;AACD;;AACD,SAAKO,QAAL,CAAc;AAACvB,MAAAA,KAAK,EAAEiB;AAAR,KAAd;AACA;;AAEDT,EAAAA,qBAAqB,CAACM,CAAD,EAAIU,IAAJ,EACrB;AACC,QAAGA,IAAI,CAACvB,IAAL,KAAc,UAAjB,EAA6BuB,IAAI,CAACvB,IAAL,GAAY,SAAZ,CAA7B,KACK,IAAGuB,IAAI,CAACvB,IAAL,KAAc,oBAAjB,EAAuCuB,IAAI,CAACvB,IAAL,GAAY,SAAZ;AAE5C,SAAKsB,QAAL,CAAeE,SAAD,KAAgB;AAC7BzB,MAAAA,KAAK,EAAE,CACN,GAAGyB,SAAS,CAACzB,KADP,EAEN;AAACC,QAAAA,IAAI,EAAEuB,IAAI,CAACvB,IAAZ;AAAkBC,QAAAA,MAAM,EAAEsB,IAAI,CAACtB,MAA/B;AAAuCG,QAAAA,UAAU,EAAE;AAAnD,OAFM;AADsB,KAAhB,CAAd,EAKI,YACJ;AACC,WAAKM,UAAL;AACA,KARD;AASA;;AAEDe,EAAAA,cAAc,CAACZ,CAAD,EAAIa,MAAJ,EACd;AACC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAK7B,KAAL,CAAWY,SAAX,CAAqBI,CAArB,eAAwB,QAAC,YAAD;AAAc,MAAA,eAAe,EAAE,KAAKL,eAApC;AAAqD,MAAA,MAAM,EAAEkB;AAA7D;AAAA;AAAA;AAAA;AAAA,YAAxB;AACA;;AACDlB,EAAAA,eAAe,CAACK,CAAD,EAAIU,IAAJ,EACf;AACCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA;;AAEDM,EAAAA,MAAM,GACN;AACC;AACA,QAAIC,YAAY,GAAG,KAAKhC,KAAL,CAAWC,KAAX,CAAiBgC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KACxC;AACC,UAAGD,IAAI,CAAChC,IAAL,KAAc,SAAjB,EACA;AACC,4BAAO,QAAC,OAAD;AACM,UAAA,MAAM,EAAEgC,IAAI,CAAC/B,MADnB;AAC2B,UAAA,UAAU,EAAE+B,IAAI,CAAC5B,UAD5C;AAEN,UAAA,eAAe,EAAE,KAAKO,eAFhB;AAEiC,UAAA,gBAAgB,EAAE,KAAKC,gBAFxD;AAGN,UAAA,cAAc,EAAE,KAAKa,cAHf;AAIN,UAAA,eAAe,EAAE,KAAKjB;AAJhB,WACDyB,KADC;AAAA;AAAA;AAAA;AAAA,gBAAP;AAMA,OARD,MASK,IAAGD,IAAI,CAAChC,IAAL,KAAc,SAAjB,EACL;AACC,4BAAO,QAAC,OAAD;AACM,UAAA,MAAM,EAAEgC,IAAI,CAAC/B,MADnB;AAC2B,UAAA,SAAS,EAAE,KAAKQ,SAD3C;AACsD,UAAA,UAAU,EAAEuB,IAAI,CAAC5B,UADvE;AAEN,UAAA,iBAAiB,EAAE,KAAKC,iBAFlB;AAEqC,UAAA,eAAe,EAAE,KAAKM,eAF3D;AAGN,UAAA,gBAAgB,EAAE,KAAKC,gBAHjB;AAGmC,UAAA,cAAc,EAAE,KAAKa,cAHxD;AAIN,UAAA,eAAe,EAAE,KAAKjB;AAJhB,WACDyB,KADC;AAAA;AAAA;AAAA;AAAA,gBAAP;AAMA;AACD,KApBkB,CAAnB;AAsBA,wBACC;AAAK,MAAA,SAAS,EAAE,uBAAhB;AAAA,8BACC;AAAK,QAAA,SAAS,EAAE,kBAAhB;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,GAAf;AAAoB,UAAA,EAAE,EAAE,YAAxB;AAAsC,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAA7C;AAAiE,UAAA,OAAO,EAAGrB,CAAD,IAC1E;AACC,iBAAKJ,SAAL,CAAeI,CAAf,eAAkB,QAAC,kBAAD;AAAoB,cAAA,qBAAqB,EAAE,KAAKN;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAAlB;AACA;AAHD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAQEuB,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AAvHF","sourcesContent":["import {Component} from \"react\";\r\nimport {Journey} from \"./Journey\";\r\nimport {Cognate} from \"./Cognate\";\r\nimport {Button} from \"./Button\";\r\nimport {AddCollectionModal} from \"./AddCollectionModal\";\r\nimport {AddNodeModal} from \"./AddNodeModal\";\r\n\r\nexport class Collections extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titems: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// TODO: Dummy data\r\n\t\t\t\t\ttype: \"journey\",\r\n\t\t\t\t\theader: {word: \"horse\", language: \"English (UK)\"},\r\n\t\t\t\t\tchildNodes: [{word: \"kers\", language: \"Proto-Indo-European\"}, {\r\n\t\t\t\t\t\tword: \"krsos\",\r\n\t\t\t\t\t\tlanguage: \"Proto-Indo-European\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\t{word: \"hrussa\", language: \"Proto-Germanic\"}, {\r\n\t\t\t\t\t\t\tword: \"hross\",\r\n\t\t\t\t\t\t\tlanguage: \"Proto-West-Germanic\"\r\n\t\t\t\t\t\t}, {word: \"horse\", language: \"English\"}]\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t};\r\n\r\n\t\tthis.onNodeColourClick = this.onNodeColourClick.bind(this);\r\n\t\tthis.onAddCollectionSubmit = this.onAddCollectionSubmit.bind(this);\r\n\t\tthis.onAddNodeSubmit = this.onAddNodeSubmit.bind(this);\r\n\t\tthis.openModal = this.props.openModal.bind(this);\r\n\t\tthis.closeModal = this.props.closeModal.bind(this);\r\n\t\tthis.openContextMenu = this.props.openContextMenu.bind(this);\r\n\t\tthis.closeContextMenu = this.props.closeContextMenu.bind(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Open a modal that allows user to change the colour of the node on the map\r\n\t */\r\n\tonNodeColourClick(e, node)\r\n\t{\r\n\t\t// TODO: Open modal, allow user choice\r\n\t\tlet newValue = \"red\";\r\n\r\n\t\t// Find node and set colour\r\n\t\tlet newItems = this.state.items;\r\n\t\tfor(let i = 0; i < newItems.length; ++i)\r\n\t\t{\r\n\t\t\tfor(let j = 0; j < newItems[i].childNodes.length; ++j)\r\n\t\t\t{\r\n\t\t\t\tlet childNode = newItems[i].childNodes[j];\r\n\t\t\t\tif(childNode === node)\r\n\t\t\t\t{\r\n\t\t\t\t\tnewItems[i].childNodes[j].colour = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({items: newItems});\r\n\t}\r\n\r\n\tonAddCollectionSubmit(e, data)\r\n\t{\r\n\t\tif(data.type === \"Cognates\") data.type = \"cognate\";\r\n\t\telse if(data.type === \"Historical journey\") data.type = \"journey\";\r\n\r\n\t\tthis.setState((prevState) => ({\r\n\t\t\titems: [\r\n\t\t\t\t...prevState.items,\r\n\t\t\t\t{type: data.type, header: data.header, childNodes: []}\r\n\t\t\t]\r\n\t\t}), function()\r\n\t\t{\r\n\t\t\tthis.closeModal();\r\n\t\t});\r\n\t}\r\n\r\n\taddNodeHandler(e, parent)\r\n\t{\r\n\t\t// TODO: Open node add modal\r\n\t\tconsole.log(parent);\r\n\t\tthis.props.openModal(e, <AddNodeModal onAddNodeSubmit={this.onAddNodeSubmit} parent={parent} />);\r\n\t}\r\n\tonAddNodeSubmit(e, data)\r\n\t{\r\n\t\tconsole.log(data);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// TODO: Consider whether both cognates AND journeys may be displayed at the same time\r\n\t\tlet itemElements = this.state.items.map((item, index) =>\r\n\t\t{\r\n\t\t\tif(item.type === \"cognate\")\r\n\t\t\t{\r\n\t\t\t\treturn <Cognate\r\n\t\t\t\t\tkey={index} header={item.header} childNodes={item.childNodes}\r\n\t\t\t\t\topenContextMenu={this.openContextMenu} closeContextMenu={this.closeContextMenu}\r\n\t\t\t\t\taddNodeHandler={this.addNodeHandler}\r\n\t\t\t\t\tonAddNodeSubmit={this.onAddNodeSubmit}\r\n\t\t\t\t/>;\r\n\t\t\t}\r\n\t\t\telse if(item.type === \"journey\")\r\n\t\t\t{\r\n\t\t\t\treturn <Journey\r\n\t\t\t\t\tkey={index} header={item.header} openModal={this.openModal} childNodes={item.childNodes}\r\n\t\t\t\t\tonNodeColourClick={this.onNodeColourClick} openContextMenu={this.openContextMenu}\r\n\t\t\t\t\tcloseContextMenu={this.closeContextMenu} addNodeHandler={this.addNodeHandler}\r\n\t\t\t\t\tonAddNodeSubmit={this.onAddNodeSubmit}\r\n\t\t\t\t/>;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"collections-container\"}>\r\n\t\t\t\t<div className={\"header-container\"}>\r\n\t\t\t\t\t<h2>Journeys</h2>\r\n\t\t\t\t\t<Button value={\"+\"} id={\"manual-add\"} style={{alignSelf: \"end\"}} onClick={(e) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.openModal(e, <AddCollectionModal onAddCollectionSubmit={this.onAddCollectionSubmit}/>);\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{itemElements}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}