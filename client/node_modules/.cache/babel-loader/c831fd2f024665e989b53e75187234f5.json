{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { useD3 } from \"../hooks/useD3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Map(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    const svgElement = svg._groups[0][0];\n    const width = svgElement.clientWidth;\n    const height = svgElement.clientHeight;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n    const albers = d3.geoAlbers().rotate([-20.0, 0.0]).center([0.0, 52.0]).parallels([35.0, 65.0]).translate([width / 2, height / 2]).scale(700).precision(.1);\n    const path = d3.geoPath().projection(albers);\n    const x = d3.scaleBand().domain(data.map(d => d.year)).rangeRound([margin.left, width - margin.right]).padding(0.1);\n    const y1 = d3.scaleLinear().domain([0, d3.max(data, d => d.sales)]).rangeRound([height - margin.bottom, margin.top]);\n\n    const xAxis = g => g.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickValues(d3.ticks(...d3.extent(x.domain()), width / 40).filter(v => x(v) !== undefined)).tickSizeOuter(0));\n\n    const y1Axis = g => g.attr(\"transform\", `translate(${margin.left},0)`).style(\"color\", \"steelblue\").call(d3.axisLeft(y1).ticks(null, \"s\")).call(g => g.select(\".domain\").remove()).call(g => g.append(\"text\").attr(\"x\", -margin.left).attr(\"y\", 10).attr(\"fill\", \"currentColor\").attr(\"text-anchor\", \"start\").text(data.y1));\n\n    svg.select(\".map-area\").append(\"path\").attr(\"d\", path);\n  }, [data.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      style: {\n        height: \"100%\",\n        width: \"100%\",\n        margin: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"map-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Map, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Map.jsx"],"names":["React","d3","useD3","Map","data","ref","svg","svgElement","_groups","width","clientWidth","height","clientHeight","margin","top","right","bottom","left","albers","geoAlbers","rotate","center","parallels","translate","scale","precision","path","geoPath","projection","x","scaleBand","domain","map","d","year","rangeRound","padding","y1","scaleLinear","max","sales","xAxis","g","attr","call","axisBottom","tickValues","ticks","extent","filter","v","undefined","tickSizeOuter","y1Axis","style","axisLeft","select","remove","append","text","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport {useD3} from \"../hooks/useD3\";\r\n\r\nexport function Map({data})\r\n{\r\n\tconst ref = useD3(\r\n\t\t(svg) => {\r\n\r\n\t\t\tconst svgElement = svg._groups[0][0];\r\n\r\n\t\t\tconst width = svgElement.clientWidth;\r\n\t\t\tconst height = svgElement.clientHeight;\r\n\t\t\tconst margin = {top: 20, right: 30, bottom: 30, left: 40};\r\n\r\n\r\n\t\t\tconst albers = d3.geoAlbers()\r\n\t\t\t\t.rotate([-20.0, 0.0])\r\n\t\t\t\t.center([0.0, 52.0])\r\n\t\t\t\t.parallels([35.0, 65.0])\r\n\t\t\t\t.translate([width / 2, height / 2])\r\n\t\t\t\t.scale(700)\r\n\t\t\t\t.precision(.1)\r\n\t\t\tconst path = d3.geoPath().projection(albers);\r\n\r\n\t\t\tconst x = d3\r\n\t\t\t\t.scaleBand()\r\n\t\t\t\t.domain(data.map((d) => d.year))\r\n\t\t\t\t.rangeRound([margin.left, width - margin.right])\r\n\t\t\t\t.padding(0.1);\r\n\r\n\t\t\tconst y1 = d3\r\n\t\t\t\t.scaleLinear()\r\n\t\t\t\t.domain([0, d3.max(data, (d) => d.sales)])\r\n\t\t\t\t.rangeRound([height - margin.bottom, margin.top]);\r\n\r\n\t\t\tconst xAxis = (g) =>\r\n\t\t\t\tg.attr(\"transform\", `translate(0,${height - margin.bottom})`).call(\r\n\t\t\t\t\td3\r\n\t\t\t\t\t\t.axisBottom(x)\r\n\t\t\t\t\t\t.tickValues(\r\n\t\t\t\t\t\t\td3\r\n\t\t\t\t\t\t\t\t.ticks(...d3.extent(x.domain()), width / 40)\r\n\t\t\t\t\t\t\t\t.filter((v) => x(v) !== undefined)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.tickSizeOuter(0)\r\n\t\t\t\t);\r\n\r\n\t\t\tconst y1Axis = (g) =>\r\n\t\t\t\tg\r\n\t\t\t\t\t.attr(\"transform\", `translate(${margin.left},0)`)\r\n\t\t\t\t\t.style(\"color\", \"steelblue\")\r\n\t\t\t\t\t.call(d3.axisLeft(y1).ticks(null, \"s\"))\r\n\t\t\t\t\t.call((g) => g.select(\".domain\").remove())\r\n\t\t\t\t\t.call((g) =>\r\n\t\t\t\t\t\tg\r\n\t\t\t\t\t\t\t.append(\"text\")\r\n\t\t\t\t\t\t\t.attr(\"x\", -margin.left)\r\n\t\t\t\t\t\t\t.attr(\"y\", 10)\r\n\t\t\t\t\t\t\t.attr(\"fill\", \"currentColor\")\r\n\t\t\t\t\t\t\t.attr(\"text-anchor\", \"start\")\r\n\t\t\t\t\t\t\t.text(data.y1)\r\n\t\t\t\t\t);\r\n\r\n\t\t\tsvg\r\n\t\t\t\t.select(\".map-area\")\r\n\t\t\t\t.append(\"path\")\r\n\t\t\t\t.attr(\"d\",path)\r\n\t\t\t\t\r\n\t\t},\r\n\t\t[data.length]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={\"map-container\"}>\r\n\t\t\t<svg\r\n\t\t\t\tref={ref}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tmargin: 0\r\n\t\t\t\t}}>\r\n\t\t\t\t<g className={\"map-area\"} />\r\n\t\t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}