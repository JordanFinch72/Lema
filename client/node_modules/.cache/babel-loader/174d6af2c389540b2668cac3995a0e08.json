{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\AddEditNodeModal.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"./Textbox\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddEditNodeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: this.props.word || null,\n      language: typeof this.props.language === \"object\" ? this.props.language[0] : this.props.language,\n      collection: null\n    };\n    this.onNodeSubmit = this.props.onNodeSubmit.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n  }\n\n  onFieldChange(event) {\n    const target = event.target;\n    const name = target.name;\n    let value = target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    // Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\n    let languageInput;\n\n    if (typeof this.props.language === \"object\") {\n      let options = [];\n\n      for (let i = 0; i < this.props.language.length; ++i) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: this.props.language[i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this));\n      }\n\n      languageInput = /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"language\",\n        value: this.state.language,\n        onChange: this.onFieldChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    } else {\n      languageInput = /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"English (GB)\\\"\",\n        name: \"language\",\n        value: this.state.language,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    } // If no collectionIndex is supplied, allow them to select one from the list\n\n\n    let selectCollection;\n\n    if (!this.props.collectionIndex) {\n      let options = [];\n\n      for (let i = 0; i < this.props.collectionList.length; ++i) {\n        let string = `${this.props.collectionList[i].type.toUpperCase()}: ${this.props.collectionList[i].header.word}`;\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: string\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }, this));\n      }\n\n      selectCollection = /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"collection\",\n        value: this.state.language,\n        onChange: this.onFieldChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"Horse\\\"...\",\n        name: \"word\",\n        value: this.state.word,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), languageInput, selectCollection, /*#__PURE__*/_jsxDEV(Button, {\n        value: \"Submit\",\n        id: \"add-node-modal-submit\",\n        onClick: e => {\n          let data = {\n            word: this.state.word,\n            language: this.state.language,\n            collectionIndex: this.props.collectionIndex,\n            childNodeIndex: this.props.childNodeIndex\n          };\n          this.props.onNodeSubmit(e, data);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/AddEditNodeModal.jsx"],"names":["Component","Textbox","Button","AddEditNodeModal","constructor","props","state","word","language","collection","onNodeSubmit","bind","onFieldChange","event","target","name","value","setState","render","languageInput","options","i","length","push","selectCollection","collectionIndex","collectionList","string","type","toUpperCase","header","e","data","childNodeIndex"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"./Textbox\";\r\nimport {Button} from \"./Button\";\r\n\r\nexport class AddEditNodeModal extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tword: this.props.word || null,\r\n\t\t\tlanguage: (typeof this.props.language === \"object\") ? this.props.language[0] : this.props.language,\r\n\t\t\tcollection: null\r\n\t\t};\r\n\r\n\t\tthis.onNodeSubmit = this.props.onNodeSubmit.bind(this);\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tlet value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\r\n\t\tlet languageInput;\r\n\t\tif(typeof this.props.language === \"object\")\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\t\t\tfor(let i = 0; i < this.props.language.length; ++i)\r\n\t\t\t{\r\n\t\t\t\toptions.push(<option>{this.props.language[i]}</option>);\r\n\t\t\t}\r\n\t\t\tlanguageInput = <select name={\"language\"} value={this.state.language} onChange={this.onFieldChange}>\r\n\t\t\t\t{options}\r\n\t\t\t</select>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlanguageInput = <Textbox hint={\"e.g. \\\"English (GB)\\\"\"} name={\"language\"} value={this.state.language} onFieldChange={this.onFieldChange} />\r\n\t\t}\r\n\r\n\t\t// If no collectionIndex is supplied, allow them to select one from the list\r\n\t\tlet selectCollection;\r\n\t\tif(!this.props.collectionIndex)\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\t\t\tfor(let i = 0; i < this.props.collectionList.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tlet string = `${this.props.collectionList[i].type.toUpperCase()}: ${this.props.collectionList[i].header.word}`;\r\n\t\t\t\toptions.push(<option>{string}</option>);\r\n\t\t\t}\r\n\t\t\tselectCollection =\r\n\t\t\t\t<select name={\"collection\"} value={this.state.language} onChange={this.onFieldChange}>\r\n\t\t\t\t{options}\r\n\t\t\t</select>\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"modal\"}>\r\n\t\t\t\t<h3>Word</h3>\r\n\t\t\t\t<Textbox hint={\"e.g. \\\"Horse\\\"...\"} name={\"word\"} value={this.state.word} onFieldChange={this.onFieldChange}/>\r\n\t\t\t\t<h3>Language</h3>\r\n\t\t\t\t{languageInput}\r\n\t\t\t\t{selectCollection}\r\n\t\t\t\t<Button value={\"Submit\"} id={\"add-node-modal-submit\"} onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tlet data = {word: this.state.word, language: this.state.language, collectionIndex: this.props.collectionIndex, childNodeIndex: this.props.childNodeIndex};\r\n\t\t\t\t\tthis.props.onNodeSubmit(e, data);\r\n\t\t\t\t}}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}