{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\AddEditNodeModal.jsx\";\nimport { Component } from \"react\";\nimport { Textbox } from \"./Textbox\";\nimport { Button } from \"./Button\";\nimport { RadioGroup } from \"./RadioGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class AddEditNodeModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /* Node properties */\n      word: this.props.node.word || null,\n      parents: this.props.node.parents,\n      selectedParentIndex: 0,\n      // Cognate properties\n      colour: this.props.node.colour || null,\n      labelType: this.props.node.label !== undefined ? this.props.node.label.type || null : null,\n      labelCustomText: this.props.node.label !== undefined ? this.props.node.label.customText || null : null,\n      // Note: Text can be \"\"\n      labelFontColour: this.props.node.label !== undefined ? this.props.node.label.fontColour || null : null,\n      countryFillColour: this.props.node.colour !== undefined ? this.props.node.colour || null : null,\n      // Journey properties\n      vertexTextType: this.props.node.vertex !== undefined ? this.props.node.vertex.type || null : null,\n      vertexCustomText: this.props.node.vertex !== undefined ? this.props.node.vertex.customText || null : null,\n      // Note: Text can be \"\"\n      vertexFontColour: this.props.node.vertex !== undefined ? this.props.node.vertex.fontColour || null : null,\n      vertexStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.strokeColour || null : null,\n      vertexFillColour: this.props.node.vertex !== undefined ? this.props.node.vertex.fillColour || null : null,\n      vertexEdgeStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeStrokeColour || null : null,\n      vertexEdgeStrokeWidth: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeStrokeWidth || null : null,\n      vertexArrowheadEnabled: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadEnabled || null : null,\n      vertexArrowheadStrokeColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadStrokeColour || null : null,\n      vertexArrowheadFillColour: this.props.node.vertex !== undefined ? this.props.node.vertex.edgeArrowheadFillColour || null : null,\n      // Optional or can be overridden\n      language: typeof this.props.language === \"object\" ? this.props.language[0] : this.props.language,\n      collection: this.props.collectionList !== undefined ? `${this.props.collectionList[0].type[0].toUpperCase() + this.props.collectionList[0].type.substring(1)}: ${this.props.collectionList[0].header.word}` : null\n    };\n    this.onNodeSubmit = this.props.onNodeSubmit.bind(this);\n    this.onFieldChange = this.onFieldChange.bind(this);\n    this.onLabelRadioClick = this.onLabelRadioClick.bind(this);\n    this.onVertexRadioClick = this.onVertexRadioClick.bind(this);\n  }\n\n  onFieldChange(event) {\n    const target = event.target;\n    const name = target.name;\n    let value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  onLabelRadioClick(e, data) {\n    // Update parent LeftBar component's state\n    let labelType;\n    if (data.id === 0) labelType = \"language\";else if (data.id === 1) labelType = \"country\";else if (data.id === 2) labelType = \"word\";else if (data.id === 3) labelType = \"customText\";\n    this.setState({\n      labelType: labelType\n    });\n  }\n\n  onVertexRadioClick(e, data) {\n    // Update parent LeftBar component's state\n    let vertexTextType;\n    if (data.id === 0) vertexTextType = \"language\";else if (data.id === 1) vertexTextType = \"country\";else if (data.id === 2) vertexTextType = \"word\";else if (data.id === 3) vertexTextType = \"customText\";\n    this.setState({\n      vertexTextType: vertexTextType\n    }, e => {\n      console.log(this.state.vertexTextType);\n    });\n  }\n\n  validation() {\n    // TODO: Validate form data\n    return true;\n  }\n\n  render() {\n    // Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\n    let languageInput;\n\n    if (typeof this.props.language === \"object\") {\n      let options = [];\n\n      for (let i = 0; i < this.props.language.length; ++i) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: this.props.language[i]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 18\n        }, this));\n      }\n\n      languageInput = /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"language\",\n        value: this.state.language,\n        onChange: this.onFieldChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, this);\n    } else {\n      languageInput = /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"English (GB)\\\"\",\n        name: \"language\",\n        value: this.state.language,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 20\n      }, this);\n    } // If no collectionIndex is supplied, allow them to select one from the list\n\n\n    let selectCollection;\n\n    if (!this.props.collectionIndex === undefined) {\n      let options = [];\n      let i = 0;\n\n      for (i; i < this.props.collectionList.length; ++i) {\n        let collection = this.props.collectionList[i];\n        let string = `${collection.type[0].toUpperCase() + collection.type.substring(1)}: ${this.props.collectionList[i].header.word}`;\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          children: string\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 18\n        }, this));\n      }\n\n      selectCollection = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Collection\"\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"collection\",\n        value: this.state.collection,\n        onChange: this.onFieldChange,\n        children: options\n      }, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)];\n    } // Label components (if appropriate)\n\n\n    let labelControls = [],\n        nodeColourControls = [];\n\n    if (this.props.node.label) {\n      nodeColourControls.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Node Country/Region Colour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"node-colour-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textbox\",\n          name: \"colour\",\n          value: this.state.colour,\n          onChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          defaultValue: this.state.colour,\n          value: this.state.colour,\n          onChange: e => {\n            this.setState({\n              colour: e.target.value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)); // RadioGroup buttons\n\n      const buttons = [{\n        active: false,\n        label: \"Node language\"\n      }, {\n        active: false,\n        label: \"Node country/region\"\n      }, {\n        active: false,\n        label: \"Word\"\n      }, {\n        active: false,\n        label: \"Custom label:\"\n      }];\n      let labelTypeIndex;\n      if (this.state.labelType === \"language\") labelTypeIndex = 0;else if (this.state.labelType === \"country\") labelTypeIndex = 1;else if (this.state.labelType === \"word\") labelTypeIndex = 2;else if (this.state.labelType === \"customText\") labelTypeIndex = 3;\n      buttons[labelTypeIndex].active = true;\n      labelControls = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Label\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-controls-container\",\n        children: [\",\", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          buttons: buttons,\n          name: \"custom-label\",\n          onRadioButtonClick: this.onLabelRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n          hint: \"Custom label text...\",\n          name: \"labelCustomText\",\n          value: this.state.labelCustomText,\n          onFieldChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Country fill colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"countryFillColour\",\n              value: this.state.countryFillColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.countryFillColour,\n              value: this.state.countryFillColour,\n              onChange: e => {\n                this.setState({\n                  countryFillColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Font colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"labelFontColour\",\n              value: this.state.labelFontColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.labelFontColour,\n              value: this.state.labelFontColour,\n              onChange: e => {\n                this.setState({\n                  labelFontColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this)];\n    } // Vertex properties (if appropriate)\n\n\n    let vertexControls = [];\n\n    if (this.props.node.vertex) {\n      // RadioGroup buttons\n      const buttons = [{\n        active: false,\n        label: \"Node language\"\n      }, {\n        active: false,\n        label: \"Node country/region\"\n      }, {\n        active: false,\n        label: \"Word\"\n      }, {\n        active: false,\n        label: \"Custom label:\"\n      }];\n      let vertexTextType;\n      if (this.state.vertexTextType === \"language\") vertexTextType = 0;else if (this.state.vertexTextType === \"country\") vertexTextType = 1;else if (this.state.vertexTextType === \"word\") vertexTextType = 2;else if (this.state.vertexTextType === \"customText\") vertexTextType = 3;\n      buttons[vertexTextType].active = true;\n      vertexControls = [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Vertex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertex-controls-container\",\n        children: [\",\", /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          buttons: buttons,\n          name: \"custom-vertex-text\",\n          onRadioButtonClick: this.onVertexRadioClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n          hint: \"Custom vertex text...\",\n          name: \"vertexCustomText\",\n          value: this.state.vertexCustomText,\n          onFieldChange: this.onFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Font colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexFontColour\",\n              value: this.state.vertexFontColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexFontColour,\n              value: this.state.vertexFontColour,\n              onChange: e => {\n                this.setState({\n                  vertexFontColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Vertex:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Vertex stroke colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexStrokeColour\",\n              value: this.state.vertexStrokeColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexStrokeColour,\n              value: this.state.vertexStrokeColour,\n              onChange: e => {\n                this.setState({\n                  vertexStrokeColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Vertex fill colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexFillColour\",\n              value: this.state.vertexFillColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexFillColour,\n              value: this.state.vertexFillColour,\n              onChange: e => {\n                this.setState({\n                  vertexFillColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Parent edge colour: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexEdgeStrokeColour\",\n              value: this.state.vertexEdgeStrokeColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexEdgeStrokeColour,\n              value: this.state.vertexEdgeStrokeColour,\n              onChange: e => {\n                this.setState({\n                  vertexEdgeStrokeColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Parent edge stroke width:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexEdgeStrokeWidth\",\n              value: this.state.vertexEdgeStrokeWidth,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Show arrowhead?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"vertexArrowheadEnabled\",\n              checked: this.state.vertexArrowheadEnabled,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Arrowhead stroke colour:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexArrowheadStrokeColour\",\n              value: this.state.vertexArrowheadStrokeColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexArrowheadStrokeColour,\n              value: this.state.vertexArrowheadStrokeColour,\n              onChange: e => {\n                this.setState({\n                  vertexArrowheadStrokeColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vertex-colour-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Arrowhead fill colour:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textbox\",\n              name: \"vertexArrowheadFillColour\",\n              value: this.state.vertexArrowheadFillColour,\n              onChange: this.onFieldChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              defaultValue: this.state.vertexArrowheadFillColour,\n              value: this.state.vertexArrowheadFillColour,\n              onChange: e => {\n                this.setState({\n                  vertexArrowheadFillColour: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this)];\n    } // TODO: Decide between:\n    //   - (1) changing HCI so that users create a child node from a parent, and can only make a (single) parent node per collection from the collection context menu\n    //   - (2) passing down the collection's words into the modal as a prop. Not sure what kind of performance/memory hit this would induce\n    // Parents\n\n\n    let parentList = [],\n        potentialParentList = [],\n        parentControls = [];\n\n    if (this.props.node.parents) {\n      // Gather current parents\n      for (let i = 0; i < this.props.node.parents.length; ++i) {\n        let parent = this.props.node.parents[i];\n        parentList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"parent-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: parent.word + \" (\" + parent.language + \")\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              value: \"X\",\n              onClick: e => {\n                this.props.node.parents.splice(i, 1);\n                this.setState({\n                  parents: this.props.node.parents\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    if (this.props.words) {\n      for (let i = 0; i < this.props.words.length; ++i) {\n        // List all potential new parents\n        let word = this.props.words[i];\n\n        if (this.props.node !== word && !this.props.node.parents.includes(word)) {\n          potentialParentList.push( /*#__PURE__*/_jsxDEV(\"option\", {\n            \"data-index\": i,\n            children: word.word + \" (\" + word.language + \")\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 31\n          }, this));\n        }\n      }\n    }\n\n    console.log(potentialParentList);\n\n    let potentialParents = /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"selectedParent\",\n      onChange: event => {\n        const selectedIndex = event.target.selectedIndex;\n        this.setState({\n          selectedParentIndex: selectedIndex\n        });\n      },\n      children: potentialParentList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 26\n    }, this);\n\n    if (potentialParents) {\n      parentControls = /*#__PURE__*/_jsxDEV(Button, {\n        id: \"add-node-modal-add-parent\",\n        value: \"Add parent\",\n        onClick: e => {\n          let selectedParent = potentialParentList[this.state.selectedParentIndex];\n          let parentIndex = selectedParent.props[\"data-index\"];\n          this.props.node.parents.push(this.props.words[parentIndex]);\n          this.setState({\n            parents: this.props.node.parents\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Textbox, {\n        hint: \"e.g. \\\"Horse\\\"...\",\n        name: \"word\",\n        value: this.state.word,\n        onFieldChange: this.onFieldChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 5\n      }, this), languageInput, /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Current Parents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 5\n      }, this), parentList.length > 0 ? parentList : \"None\", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Potential Parents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 5\n      }, this), potentialParents, parentControls, labelControls, \" \", vertexControls, selectCollection, /*#__PURE__*/_jsxDEV(Button, {\n        value: \"Submit\",\n        id: \"add-node-modal-submit\",\n        onClick: e => {\n          if (this.validation()) {\n            // Build node structure to match collection type\n            let updatedNode;\n\n            if (this.props.type === \"journey\") {\n              updatedNode = { ...this.props.node,\n                word: this.state.word,\n                language: this.state.language,\n                colour: this.state.colour,\n                vertex: { ...this.props.node.vertex,\n                  type: this.state.vertexTextType,\n                  customText: this.state.vertexCustomText,\n                  fontColour: this.state.vertexFontColour,\n                  strokeColour: this.state.vertexStrokeColour,\n                  fillColour: this.state.vertexFillColour,\n                  edgeStrokeColour: this.state.vertexEdgeStrokeColour,\n                  edgeStrokeWidth: this.state.vertexEdgeStrokeWidth,\n                  edgeArrowheadEnabled: this.state.vertexArrowheadEnabled,\n                  edgeArrowheadStrokeColour: this.state.vertexArrowheadStrokeColour,\n                  edgeArrowheadFillColour: this.state.vertexArrowheadFillColour\n                }\n              };\n            } else if (this.props.type === \"cognate\") {\n              updatedNode = { ...this.props.node,\n                word: this.state.word,\n                language: this.state.language,\n                colour: this.state.colour,\n                label: { ...this.props.node.label,\n                  type: this.state.labelType,\n                  customText: this.state.labelCustomText,\n                  fontColour: this.state.labelFontColour,\n                  fontSize: this.state.fontSize\n                }\n              };\n            }\n\n            this.props.onNodeSubmit(e, this.props.collectionIndex, updatedNode);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/AddEditNodeModal.jsx"],"names":["Component","Textbox","Button","RadioGroup","AddEditNodeModal","constructor","props","state","word","node","parents","selectedParentIndex","colour","labelType","label","undefined","type","labelCustomText","customText","labelFontColour","fontColour","countryFillColour","vertexTextType","vertex","vertexCustomText","vertexFontColour","vertexStrokeColour","strokeColour","vertexFillColour","fillColour","vertexEdgeStrokeColour","edgeStrokeColour","vertexEdgeStrokeWidth","edgeStrokeWidth","vertexArrowheadEnabled","edgeArrowheadEnabled","vertexArrowheadStrokeColour","edgeArrowheadStrokeColour","vertexArrowheadFillColour","edgeArrowheadFillColour","language","collection","collectionList","toUpperCase","substring","header","onNodeSubmit","bind","onFieldChange","onLabelRadioClick","onVertexRadioClick","event","target","name","value","checked","setState","e","data","id","console","log","validation","render","languageInput","options","i","length","push","selectCollection","collectionIndex","string","labelControls","nodeColourControls","buttons","active","labelTypeIndex","vertexControls","parentList","potentialParentList","parentControls","parent","splice","words","includes","potentialParents","selectedIndex","selectedParent","parentIndex","updatedNode","fontSize"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Textbox} from \"./Textbox\";\r\nimport {Button} from \"./Button\";\r\nimport {RadioGroup} from \"./RadioGroup\";\r\n\r\nexport class AddEditNodeModal extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\t/* Node properties */\r\n\t\t\tword: this.props.node.word || null,\r\n\t\t\tparents: this.props.node.parents,\r\n\t\t\tselectedParentIndex: 0,\r\n\r\n\t\t\t// Cognate properties\r\n\t\t\tcolour: this.props.node.colour || null,\r\n\t\t\tlabelType: (this.props.node.label !== undefined) ? this.props.node.label.type || null : null,\r\n\t\t\tlabelCustomText: (this.props.node.label !== undefined) ? this.props.node.label.customText || null : null, // Note: Text can be \"\"\r\n\t\t\tlabelFontColour: (this.props.node.label !== undefined) ? this.props.node.label.fontColour || null : null,\r\n\t\t\tcountryFillColour: (this.props.node.colour !== undefined) ? this.props.node.colour || null : null,\r\n\r\n\t\t\t// Journey properties\r\n\t\t\tvertexTextType: (this.props.node.vertex !== undefined) ? this.props.node.vertex.type || null : null,\r\n\t\t\tvertexCustomText: (this.props.node.vertex !== undefined) ? this.props.node.vertex.customText || null : null, // Note: Text can be \"\"\r\n\t\t\tvertexFontColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.fontColour || null : null,\r\n\t\t\tvertexStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.strokeColour || null : null,\r\n\t\t\tvertexFillColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.fillColour || null : null,\r\n\t\t\tvertexEdgeStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeStrokeColour || null : null,\r\n\t\t\tvertexEdgeStrokeWidth: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeStrokeWidth || null : null,\r\n\t\t\tvertexArrowheadEnabled: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadEnabled || null : null,\r\n\t\t\tvertexArrowheadStrokeColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadStrokeColour || null : null,\r\n\t\t\tvertexArrowheadFillColour: (this.props.node.vertex !== undefined) ? this.props.node.vertex.edgeArrowheadFillColour || null : null,\r\n\r\n\t\t\t// Optional or can be overridden\r\n\t\t\tlanguage: (typeof this.props.language === \"object\") ? this.props.language[0] : this.props.language,\r\n\t\t\tcollection: (this.props.collectionList !== undefined)\r\n\t\t\t\t? (`${this.props.collectionList[0].type[0].toUpperCase() + this.props.collectionList[0].type.substring(1)}: ${this.props.collectionList[0].header.word}`) : null,\r\n\t\t};\r\n\r\n\t\tthis.onNodeSubmit = this.props.onNodeSubmit.bind(this);\r\n\t\tthis.onFieldChange = this.onFieldChange.bind(this);\r\n\t\tthis.onLabelRadioClick = this.onLabelRadioClick.bind(this);\r\n\t\tthis.onVertexRadioClick = this.onVertexRadioClick.bind(this);\r\n\t}\r\n\r\n\tonFieldChange(event)\r\n\t{\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tlet value = (target.type === \"checkbox\") ? target.checked : target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\tonLabelRadioClick(e, data)\r\n\t{\r\n\t\t// Update parent LeftBar component's state\r\n\t\tlet labelType;\r\n\t\tif(data.id === 0) labelType = \"language\";\r\n\t\telse if(data.id === 1) labelType = \"country\";\r\n\t\telse if(data.id === 2) labelType = \"word\";\r\n\t\telse if(data.id === 3) labelType = \"customText\";\r\n\r\n\t\tthis.setState({labelType: labelType});\r\n\t}\r\n\tonVertexRadioClick(e, data)\r\n\t{\r\n\t\t// Update parent LeftBar component's state\r\n\t\tlet vertexTextType;\r\n\t\tif(data.id === 0) vertexTextType = \"language\";\r\n\t\telse if(data.id === 1) vertexTextType = \"country\";\r\n\t\telse if(data.id === 2) vertexTextType = \"word\";\r\n\t\telse if(data.id === 3) vertexTextType = \"customText\";\r\n\r\n\t\tthis.setState({vertexTextType: vertexTextType}, (e) => {console.log(this.state.vertexTextType)});\r\n\t}\r\n\tvalidation()\r\n\t{\r\n\t\t// TODO: Validate form data\r\n\t\treturn true;\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\t// Languages is a textbox if none or one language is supplied, or a drop-down menu if some are supplied\r\n\t\tlet languageInput;\r\n\t\tif(typeof this.props.language === \"object\")\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\t\t\tfor(let i = 0; i < this.props.language.length; ++i)\r\n\t\t\t{\r\n\t\t\t\toptions.push(<option key={i}>{this.props.language[i]}</option>);\r\n\t\t\t}\r\n\t\t\tlanguageInput = <select name={\"language\"} value={this.state.language} onChange={this.onFieldChange}>\r\n\t\t\t\t{options}\r\n\t\t\t</select>\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlanguageInput = <Textbox hint={\"e.g. \\\"English (GB)\\\"\"} name={\"language\"} value={this.state.language} onFieldChange={this.onFieldChange} />\r\n\t\t}\r\n\r\n\t\t// If no collectionIndex is supplied, allow them to select one from the list\r\n\t\tlet selectCollection;\r\n\t\tif(!this.props.collectionIndex === undefined)\r\n\t\t{\r\n\t\t\tlet options = [];\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tfor(i; i < this.props.collectionList.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tlet collection = this.props.collectionList[i];\r\n\t\t\t\tlet string = `${collection.type[0].toUpperCase() + collection.type.substring(1)}: ${this.props.collectionList[i].header.word}`;\r\n\t\t\t\toptions.push(<option key={i}>{string}</option>);\r\n\t\t\t}\r\n\t\t\tselectCollection = [\r\n\t\t\t\t<h3 key={0}>Collection</h3>,\r\n\t\t\t\t<select key={1} name={\"collection\"} value={this.state.collection} onChange={this.onFieldChange}>\r\n\t\t\t\t\t{options}\r\n\t\t\t\t</select>\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\t// Label components (if appropriate)\r\n\t\tlet labelControls = [], nodeColourControls = [];\r\n\t\tif(this.props.node.label)\r\n\t\t{\r\n\t\t\tnodeColourControls.push(\r\n\t\t\t\t<h3>Node Country/Region Colour</h3>,\r\n\t\t\t\t<div className={\"node-colour-container\"}>\r\n\t\t\t\t\t<input type={\"textbox\"} name={\"colour\"} value={this.state.colour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.colour} value={this.state.colour} onChange={(e) => {\r\n\t\t\t\t\t\tthis.setState({colour: e.target.value});\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\t// RadioGroup buttons\r\n\t\t\tconst buttons = [{active: false, label: \"Node language\"}, {active: false, label: \"Node country/region\"}, {active: false, label: \"Word\"}, {active: false, label: \"Custom label:\"}];\r\n\t\t\tlet labelTypeIndex;\r\n\t\t\tif(this.state.labelType === \"language\")\r\n\t\t\t\tlabelTypeIndex = 0;\r\n\t\t\telse if(this.state.labelType === \"country\")\r\n\t\t\t\tlabelTypeIndex = 1;\r\n\t\t\telse if(this.state.labelType === \"word\")\r\n\t\t\t\tlabelTypeIndex = 2;\r\n\t\t\telse if(this.state.labelType === \"customText\")\r\n\t\t\t\tlabelTypeIndex = 3;\r\n\t\t\tbuttons[labelTypeIndex].active = true;\r\n\r\n\t\t\tlabelControls = [\r\n\t\t\t\t<h3>Label</h3>,\r\n\t\t\t\t<div className={\"label-controls-container\"}>,\r\n\t\t\t\t\t<h4>Text:</h4>\r\n\t\t\t\t\t<RadioGroup buttons={buttons} name={\"custom-label\"} onRadioButtonClick={this.onLabelRadioClick} />\r\n\t\t\t\t\t<Textbox hint={\"Custom label text...\"} name={\"labelCustomText\"} value={this.state.labelCustomText} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Country fill colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"countryFillColour\"} value={this.state.countryFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.countryFillColour} value={this.state.countryFillColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({countryFillColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Font colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"labelFontColour\"} value={this.state.labelFontColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.labelFontColour} value={this.state.labelFontColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({labelFontColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\t// Vertex properties (if appropriate)\r\n\t\tlet vertexControls = [];\r\n\t\tif(this.props.node.vertex)\r\n\t\t{\r\n\t\t\t// RadioGroup buttons\r\n\t\t\tconst buttons = [{active: false, label: \"Node language\"}, {active: false, label: \"Node country/region\"}, {active: false, label: \"Word\"}, {active: false, label: \"Custom label:\"}];\r\n\t\t\tlet vertexTextType;\r\n\t\t\tif(this.state.vertexTextType === \"language\")\r\n\t\t\t\tvertexTextType = 0;\r\n\t\t\telse if(this.state.vertexTextType === \"country\")\r\n\t\t\t\tvertexTextType = 1;\r\n\t\t\telse if(this.state.vertexTextType === \"word\")\r\n\t\t\t\tvertexTextType = 2;\r\n\t\t\telse if(this.state.vertexTextType === \"customText\")\r\n\t\t\t\tvertexTextType = 3;\r\n\t\t\tbuttons[vertexTextType].active = true;\r\n\r\n\t\t\tvertexControls = [\r\n\t\t\t\t<h3>Vertex</h3>,\r\n\t\t\t\t<div className={\"vertex-controls-container\"}>,\r\n\t\t\t\t\t<h4>Text:</h4>\r\n\t\t\t\t\t<RadioGroup buttons={buttons} name={\"custom-vertex-text\"} onRadioButtonClick={this.onVertexRadioClick} />\r\n\t\t\t\t\t<Textbox hint={\"Custom vertex text...\"} name={\"vertexCustomText\"} value={this.state.vertexCustomText} onFieldChange={this.onFieldChange} />\r\n\t\t\t\t\t<div className={\"label-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Font colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexFontColour\"} value={this.state.vertexFontColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexFontColour} value={this.state.vertexFontColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexFontColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h4>Vertex:</h4>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Vertex stroke colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexStrokeColour\"} value={this.state.vertexStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexStrokeColour} value={this.state.vertexStrokeColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexStrokeColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Vertex fill colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexFillColour\"} value={this.state.vertexFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexFillColour} value={this.state.vertexFillColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexFillColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Parent edge colour: </h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexEdgeStrokeColour\"} value={this.state.vertexEdgeStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexEdgeStrokeColour} value={this.state.vertexEdgeStrokeColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexEdgeStrokeColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Parent edge stroke width:</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexEdgeStrokeWidth\"} value={this.state.vertexEdgeStrokeWidth} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Show arrowhead?</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"checkbox\"} name={\"vertexArrowheadEnabled\"} checked={this.state.vertexArrowheadEnabled} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Arrowhead stroke colour:</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexArrowheadStrokeColour\"} value={this.state.vertexArrowheadStrokeColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexArrowheadStrokeColour} value={this.state.vertexArrowheadStrokeColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexArrowheadStrokeColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={\"vertex-colour-container\"}>\r\n\t\t\t\t\t\t<h4>Arrowhead fill colour:</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<input type={\"textbox\"} name={\"vertexArrowheadFillColour\"} value={this.state.vertexArrowheadFillColour} onChange={this.onFieldChange} />\r\n\t\t\t\t\t\t\t<input type={\"color\"} defaultValue={this.state.vertexArrowheadFillColour} value={this.state.vertexArrowheadFillColour} onChange={(e) => {\r\n\t\t\t\t\t\t\t\tthis.setState({vertexArrowheadFillColour: e.target.value});\r\n\t\t\t\t\t\t\t}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t]\r\n\t\t}\r\n\r\n\r\n\t\t// TODO: Decide between:\r\n\t\t//   - (1) changing HCI so that users create a child node from a parent, and can only make a (single) parent node per collection from the collection context menu\r\n\t\t//   - (2) passing down the collection's words into the modal as a prop. Not sure what kind of performance/memory hit this would induce\r\n\t\t// Parents\r\n\t\tlet parentList = [], potentialParentList = [], parentControls = [];\r\n\t\tif(this.props.node.parents)\r\n\t\t{\r\n\t\t\t// Gather current parents\r\n\t\t\tfor(let i = 0; i < this.props.node.parents.length; ++i)\r\n\t\t\t{\r\n\t\t\t\tlet parent = this.props.node.parents[i];\r\n\t\t\t\tparentList.push(<div className={\"parent-list\"}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{parent.word + \" (\" + parent.language + \")\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button value={\"X\"} onClick={(e) => {\r\n\t\t\t\t\t\t\tthis.props.node.parents.splice(i, 1);\r\n\t\t\t\t\t\t\tthis.setState({parents: this.props.node.parents});\r\n\t\t\t\t\t\t}} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.props.words)\r\n\t\t{\r\n\t\t\tfor(let i = 0; i < this.props.words.length; ++i)\r\n\t\t\t{\r\n\t\t\t\t// List all potential new parents\r\n\t\t\t\tlet word = this.props.words[i];\r\n\t\t\t\tif(this.props.node !== word && !this.props.node.parents.includes(word))\r\n\t\t\t\t{\r\n\t\t\t\t\tpotentialParentList.push(<option key={i} data-index={i}>{word.word + \" (\" + word.language + \")\"}</option>);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(potentialParentList);\r\n\t\tlet potentialParents = <select name={\"selectedParent\"} onChange={(event) => {\r\n\t\t\tconst selectedIndex = event.target.selectedIndex;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tselectedParentIndex: selectedIndex\r\n\t\t\t});\r\n\t\t}}>\r\n\t\t\t{potentialParentList}\r\n\t\t</select>;\r\n\t\tif(potentialParents)\r\n\t\t{\r\n\t\t\tparentControls = <Button id={\"add-node-modal-add-parent\"} value={\"Add parent\"} onClick={(e) => {\r\n\t\t\t\tlet selectedParent = potentialParentList[this.state.selectedParentIndex];\r\n\t\t\t\tlet parentIndex = selectedParent.props[\"data-index\"];\r\n\t\t\t\tthis.props.node.parents.push(this.props.words[parentIndex]);\r\n\t\t\t\tthis.setState({parents: this.props.node.parents});\r\n\t\t\t}} />\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"modal\"}>\r\n\t\t\t\t<h3>Word</h3>\r\n\t\t\t\t<Textbox hint={\"e.g. \\\"Horse\\\"...\"} name={\"word\"} value={this.state.word} onFieldChange={this.onFieldChange}/>\r\n\t\t\t\t<h3>Language</h3>\r\n\t\t\t\t{languageInput}\r\n\t\t\t\t<h3>Current Parents</h3>\r\n\t\t\t\t{(parentList.length > 0) ? parentList : \"None\"}\r\n\t\t\t\t<h3>Potential Parents</h3>\r\n\t\t\t\t{potentialParents}\r\n\t\t\t\t{parentControls}\r\n\t\t\t\t{labelControls} {vertexControls}\r\n\t\t\t\t{selectCollection}\r\n\t\t\t\t<Button value={\"Submit\"} id={\"add-node-modal-submit\"} onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tif(this.validation())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Build node structure to match collection type\r\n\t\t\t\t\t\tlet updatedNode;\r\n\t\t\t\t\t\tif(this.props.type === \"journey\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tupdatedNode = {\r\n\t\t\t\t\t\t\t\t...this.props.node,\r\n\t\t\t\t\t\t\t\tword: this.state.word, language: this.state.language, colour: this.state.colour,\r\n\t\t\t\t\t\t\t\tvertex: {\r\n\t\t\t\t\t\t\t\t\t...this.props.node.vertex,\r\n\t\t\t\t\t\t\t\t\ttype: this.state.vertexTextType,\r\n\t\t\t\t\t\t\t\t\tcustomText: this.state.vertexCustomText,\r\n\t\t\t\t\t\t\t\t\tfontColour: this.state.vertexFontColour,\r\n\t\t\t\t\t\t\t\t\tstrokeColour: this.state.vertexStrokeColour,\r\n\t\t\t\t\t\t\t\t\tfillColour: this.state.vertexFillColour,\r\n\t\t\t\t\t\t\t\t\tedgeStrokeColour: this.state.vertexEdgeStrokeColour,\r\n\t\t\t\t\t\t\t\t\tedgeStrokeWidth: this.state.vertexEdgeStrokeWidth,\r\n\t\t\t\t\t\t\t\t\tedgeArrowheadEnabled: this.state.vertexArrowheadEnabled,\r\n\t\t\t\t\t\t\t\t\tedgeArrowheadStrokeColour: this.state.vertexArrowheadStrokeColour,\r\n\t\t\t\t\t\t\t\t\tedgeArrowheadFillColour: this.state.vertexArrowheadFillColour\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(this.props.type === \"cognate\")\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tupdatedNode = {\r\n\t\t\t\t\t\t\t\t...this.props.node,\r\n\t\t\t\t\t\t\t\tword: this.state.word, language: this.state.language, colour: this.state.colour,\r\n\t\t\t\t\t\t\t\tlabel: {\r\n\t\t\t\t\t\t\t\t\t...this.props.node.label,\r\n\t\t\t\t\t\t\t\t\ttype: this.state.labelType,\r\n\t\t\t\t\t\t\t\t\tcustomText: this.state.labelCustomText,\r\n\t\t\t\t\t\t\t\t\tfontColour: this.state.labelFontColour,\r\n\t\t\t\t\t\t\t\t\tfontSize: this.state.fontSize\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.props.onNodeSubmit(e, this.props.collectionIndex, updatedNode);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}