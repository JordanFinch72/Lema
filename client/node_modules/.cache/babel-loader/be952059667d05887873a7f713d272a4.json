{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\COMP3000_LEMA\\\\Project\\\\lema\\\\src\\\\components\\\\Collection.jsx\";\nimport { Component } from \"react\";\nimport { Meatballs } from \"./Meatballs\";\nimport { Collapser } from \"./Collapser\";\nimport { AddEditCollectionModal } from \"./AddEditCollectionModal\";\nimport { AddEditNodeModal } from \"./AddEditNodeModal\";\nimport { Button } from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CollectionNode extends Component {\n  constructor(props) {\n    super(props);\n    this.openModal = this.props.openModal.bind(this);\n    this.editNodeColour = this.props.editNodeColour.bind(this);\n    this.editNode = this.props.editNode.bind(this);\n    this.removeNode = this.props.removeNode.bind(this);\n  }\n\n  render() {\n    let nodeColour = this.props.node.colour || \"blue\"; // TODO: Advanced logic for determining next unused colour (per journey)\n\n    let changeColourTimeout;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collection-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n            node: this.props.node,\n            language: this.props.node.language,\n            onNodeSubmit: this.props.editNode,\n            collectionIndex: this.props.collectionIndex,\n            indexChain: this.props.indexChain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }, this));\n        },\n        children: this.props.node.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditNodeModal, {\n            node: this.props.node,\n            language: this.props.node.language,\n            onNodeSubmit: this.props.editNode,\n            collectionIndex: this.props.collectionIndex,\n            indexChain: this.props.indexChain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }, this));\n        },\n        children: this.props.node.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          defaultValue: this.props.node.colour,\n          onChange: e => {\n            // Throttle the onChange; there's no way to have it only change when the user clicks off of it, annoyingly\n            let node = this;\n            window.clearTimeout(changeColourTimeout);\n            changeColourTimeout = window.setTimeout(function () {\n              node.editNodeColour(e, node.props.collectionIndex, node.props.wordIndex, e.target.value);\n            }, 100);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          value: \"X\",\n          id: \"remove-node\",\n          onClick: e => this.removeNode(e, this.props.collectionIndex, this.props.wordIndex)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport class Collection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false // Note: Could be lifted if we want persistence when editing types\n\n    };\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n    this.openContextMenu = this.props.openContextMenu.bind(this);\n    this.closeContextMenu = this.props.closeContextMenu.bind(this);\n    this.openModal = this.props.openModal.bind(this);\n    this.cAddNode = this.props.cAddNode.bind(this);\n    this.cAddNodeDefault = this.props.cAddNodeDefault.bind(this);\n    this.cRemoveCollection = this.props.cRemoveCollection.bind(this);\n    this.editCollection = this.props.editCollection.bind(this);\n    this.addNode = this.props.addNode.bind(this);\n    this.editNode = this.props.editNode.bind(this);\n    this.editNodeColour = this.props.editNodeColour.bind(this);\n    this.removeNode = this.props.removeNode.bind(this);\n  }\n\n  toggleCollapse(e) {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  /**\r\n   * Recursive algorithm that adds a CollectionNode component for each word in a collection\r\n   * @param {*} wordComponents An initially empty array that contains the CollectionNode components\r\n   * @param {*} node The currently worked-on node for this depth level\r\n   * @param {number} i The index of the currently worked-on node\r\n   * @param {string} indexChain The chain of indexes required to get to the node (e.g. this.props.words[0].parents[1].parents[4] would have a chain of 0,1,4)\r\n   * @param {string} collectionIndex The index of the collection that the node belongs to\r\n   */\n\n\n  getCollectionWords(wordComponents, node, i, indexChain, collectionIndex) {\n    indexChain += String(i);\n\n    if (node.parents) {\n      for (let j = 0; j < node.parents.length; ++j) {\n        wordComponents = this.getCollectionWords(wordComponents, node.parents[j], j, \"->\" + indexChain, collectionIndex);\n      }\n    } //indexChain = indexChain.slice(2, indexChain.length); // Clip initial \"->\"\n\n\n    wordComponents.push( /*#__PURE__*/_jsxDEV(CollectionNode, {\n      type: this.props.type,\n      node: node,\n      editNode: this.editNode,\n      editNodeColour: this.editNodeColour,\n      removeNode: this.removeNode,\n      openModal: this.openModal,\n      collectionIndex: collectionIndex // Index of collection the node belongs to\n      ,\n      indexChain: indexChain // Index chain pointing to word in the tree\n\n    }, indexChain, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }, this));\n    return wordComponents;\n  }\n\n  render() {\n    let wordComponents = []; // All word ele\n\n    if (!this.state.collapsed) {\n      if (this.props.words.length > 0) wordComponents = this.getCollectionWords(wordComponents, this.props.words[0], 0, \"\", this.props.index);\n    }\n\n    let meatballItems = [{\n      text: \"Add node\",\n      handler: e => {\n        this.cAddNode(e, this.props.index);\n      }\n    }, {\n      text: \"Add node (default)\",\n      handler: e => {\n        this.cAddNodeDefault(e, {\n          type: this.props.type,\n          collectionIndex: this.props.index\n        });\n      }\n    }, {\n      text: \"Remove collection\",\n      handler: e => {\n        this.cRemoveCollection(e, this.props.index);\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collection-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditCollectionModal, {\n              type: this.props.type,\n              word: this.props.header.word,\n              language: this.props.header.language,\n              onCollectionSubmit: this.editCollection,\n              index: this.props.index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this));\n          },\n          children: this.props.header.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            this.openModal(e, /*#__PURE__*/_jsxDEV(AddEditCollectionModal, {\n              type: this.props.type,\n              word: this.props.header.word,\n              language: this.props.header.language,\n              onCollectionSubmit: this.editCollection,\n              index: this.props.index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this));\n          },\n          children: this.props.header.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meatball-collapser-container\",\n          children: [/*#__PURE__*/_jsxDEV(Meatballs, {\n            openModal: this.openModal,\n            openContextMenu: this.openContextMenu,\n            closeContextMenu: this.closeContextMenu,\n            contextMenuItems: meatballItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Collapser, {\n            toggleCollapse: this.toggleCollapse,\n            collapsed: this.state.collapsed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this), wordComponents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/xampp/htdocs/COMP3000_LEMA/Project/lema/src/components/Collection.jsx"],"names":["Component","Meatballs","Collapser","AddEditCollectionModal","AddEditNodeModal","Button","CollectionNode","constructor","props","openModal","bind","editNodeColour","editNode","removeNode","render","nodeColour","node","colour","changeColourTimeout","e","language","collectionIndex","indexChain","word","window","clearTimeout","setTimeout","wordIndex","target","value","Collection","state","collapsed","toggleCollapse","openContextMenu","closeContextMenu","cAddNode","cAddNodeDefault","cRemoveCollection","editCollection","addNode","setState","getCollectionWords","wordComponents","i","String","parents","j","length","push","type","words","index","meatballItems","text","handler","header"],"mappings":"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","sourcesContent":["import {Component} from \"react\";\r\nimport {Meatballs} from \"./Meatballs\";\r\nimport {Collapser} from \"./Collapser\";\r\nimport {AddEditCollectionModal} from \"./AddEditCollectionModal\";\r\nimport {AddEditNodeModal} from \"./AddEditNodeModal\";\r\nimport {Button} from \"./Button\";\r\n\r\nclass CollectionNode extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.openModal = this.props.openModal.bind(this);\r\n\t\tthis.editNodeColour = this.props.editNodeColour.bind(this);\r\n\t\tthis.editNode = this.props.editNode.bind(this);\r\n\t\tthis.removeNode = this.props.removeNode.bind(this);\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tlet nodeColour = this.props.node.colour || \"blue\"; // TODO: Advanced logic for determining next unused colour (per journey)\r\n\t\tlet changeColourTimeout;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"collection-node\"}>\r\n\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.openModal(e, <AddEditNodeModal\r\n\t\t\t\t\t\tnode={this.props.node}\r\n\t\t\t\t\t\tlanguage={this.props.node.language}\r\n\t\t\t\t\t\tonNodeSubmit={this.props.editNode}\r\n\t\t\t\t\t\tcollectionIndex={this.props.collectionIndex}\r\n\t\t\t\t\t\tindexChain={this.props.indexChain}\r\n\t\t\t\t\t/>);\r\n\t\t\t\t}}>{this.props.node.word}</div>\r\n\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.openModal(e, <AddEditNodeModal\r\n\t\t\t\t\t\tnode={this.props.node}\r\n\t\t\t\t\t\tlanguage={this.props.node.language}\r\n\t\t\t\t\t\tonNodeSubmit={this.props.editNode}\r\n\t\t\t\t\t\tcollectionIndex={this.props.collectionIndex}\r\n\t\t\t\t\t\tindexChain={this.props.indexChain}\r\n\t\t\t\t\t/>);\r\n\t\t\t\t}}>{this.props.node.language}</div>\r\n\t\t\t\t<div className={\"buttons-container\"}>\r\n\t\t\t\t\t<input type={\"color\"} defaultValue={this.props.node.colour} onChange={(e) => {\r\n\t\t\t\t\t\t// Throttle the onChange; there's no way to have it only change when the user clicks off of it, annoyingly\r\n\t\t\t\t\t\tlet node = this;\r\n\t\t\t\t\t\twindow.clearTimeout(changeColourTimeout);\r\n\t\t\t\t\t\tchangeColourTimeout = window.setTimeout(function()\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tnode.editNodeColour(e, node.props.collectionIndex, node.props.wordIndex, e.target.value);\r\n\t\t\t\t\t\t}, 100);\r\n\t\t\t\t\t}}/>\r\n\t\t\t\t\t<Button value={\"X\"} id={\"remove-node\"}\r\n\t\t\t\t\t        onClick={(e) => this.removeNode(e, this.props.collectionIndex, this.props.wordIndex)}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class Collection extends Component\r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcollapsed: false // Note: Could be lifted if we want persistence when editing types\r\n\t\t};\r\n\r\n\t\tthis.toggleCollapse = this.toggleCollapse.bind(this);\r\n\r\n\t\tthis.openContextMenu = this.props.openContextMenu.bind(this);\r\n\t\tthis.closeContextMenu = this.props.closeContextMenu.bind(this);\r\n\t\tthis.openModal = this.props.openModal.bind(this);\r\n\t\tthis.cAddNode = this.props.cAddNode.bind(this);\r\n\t\tthis.cAddNodeDefault = this.props.cAddNodeDefault.bind(this);\r\n\t\tthis.cRemoveCollection = this.props.cRemoveCollection.bind(this);\r\n\t\tthis.editCollection = this.props.editCollection.bind(this);\r\n\t\tthis.addNode = this.props.addNode.bind(this);\r\n\t\tthis.editNode = this.props.editNode.bind(this);\r\n\t\tthis.editNodeColour = this.props.editNodeColour.bind(this);\r\n\t\tthis.removeNode = this.props.removeNode.bind(this);\r\n\t}\r\n\r\n\ttoggleCollapse(e)\r\n\t{\r\n\t\tthis.setState({collapsed: !this.state.collapsed});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Recursive algorithm that adds a CollectionNode component for each word in a collection\r\n\t * @param {*} wordComponents An initially empty array that contains the CollectionNode components\r\n\t * @param {*} node The currently worked-on node for this depth level\r\n\t * @param {number} i The index of the currently worked-on node\r\n\t * @param {string} indexChain The chain of indexes required to get to the node (e.g. this.props.words[0].parents[1].parents[4] would have a chain of 0,1,4)\r\n\t * @param {string} collectionIndex The index of the collection that the node belongs to\r\n\t */\r\n\tgetCollectionWords(wordComponents, node, i, indexChain, collectionIndex)\r\n\t{\r\n\t\tindexChain += String(i);\r\n\t\tif(node.parents)\r\n\t\t{\r\n\t\t\tfor(let j = 0; j < node.parents.length; ++j)\r\n\t\t\t{\r\n\t\t\t\twordComponents = this.getCollectionWords(wordComponents, node.parents[j], j, \"->\" + indexChain, collectionIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//indexChain = indexChain.slice(2, indexChain.length); // Clip initial \"->\"\r\n\t\twordComponents.push(<CollectionNode\r\n\t\t\tkey={indexChain}\r\n\t\t\ttype={this.props.type}\r\n\t\t\tnode={node}\r\n\t\t\teditNode={this.editNode}\r\n\t\t\teditNodeColour={this.editNodeColour}\r\n\t\t\tremoveNode={this.removeNode}\r\n\t\t\topenModal={this.openModal}\r\n\t\t\tcollectionIndex={collectionIndex}  // Index of collection the node belongs to\r\n\t\t\tindexChain={indexChain}            // Index chain pointing to word in the tree\r\n\t\t/>);\r\n\r\n\t\treturn wordComponents;\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tlet wordComponents = []; // All word ele\r\n\r\n\t\tif(!this.state.collapsed)\r\n\t\t{\r\n\t\t\tif(this.props.words.length > 0)\r\n\t\t\t\twordComponents = this.getCollectionWords(wordComponents, this.props.words[0], 0, \"\", this.props.index);\r\n\t\t}\r\n\r\n\t\tlet meatballItems = [\r\n\t\t\t{\r\n\t\t\t\ttext: \"Add node\", handler: (e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.cAddNode(e, this.props.index);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: \"Add node (default)\", handler: (e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.cAddNodeDefault(e, {type: this.props.type, collectionIndex: this.props.index});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttext: \"Remove collection\", handler: (e) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.cRemoveCollection(e, this.props.index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<div className={\"collection-container\"}>\r\n\t\t\t\t<div className={\"collection-header\"}>\r\n\t\t\t\t\t{/* Flex-row */}\r\n\t\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.openModal(e, <AddEditCollectionModal\r\n\t\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\t\tword={this.props.header.word}\r\n\t\t\t\t\t\t\tlanguage={this.props.header.language}\r\n\t\t\t\t\t\t\tonCollectionSubmit={this.editCollection}\r\n\t\t\t\t\t\t\tindex={this.props.index}\r\n\t\t\t\t\t\t/>);\r\n\t\t\t\t\t}}>{this.props.header.word}</div>\r\n\t\t\t\t\t<div onClick={(e) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.openModal(e, <AddEditCollectionModal\r\n\t\t\t\t\t\t\ttype={this.props.type}\r\n\t\t\t\t\t\t\tword={this.props.header.word}\r\n\t\t\t\t\t\t\tlanguage={this.props.header.language}\r\n\t\t\t\t\t\t\tonCollectionSubmit={this.editCollection}\r\n\t\t\t\t\t\t\tindex={this.props.index}\r\n\t\t\t\t\t\t/>);\r\n\t\t\t\t\t}}>{this.props.header.language}</div>\r\n\t\t\t\t\t<div className={\"meatball-collapser-container\"}>\r\n\t\t\t\t\t\t<Meatballs openModal={this.openModal} openContextMenu={this.openContextMenu}\r\n\t\t\t\t\t\t           closeContextMenu={this.closeContextMenu} contextMenuItems={meatballItems}/>\r\n\t\t\t\t\t\t<Collapser toggleCollapse={this.toggleCollapse} collapsed={this.state.collapsed}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{wordComponents}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}